	unsorted
		{
		
			toread[
				
				authentication[
					https://developer.okta.com/authentication-guide/implementing-authentication/
					https://docs.microsoft.com/en-us/dotnet/standard/threading/overview-of-synchronization-primitives?view=netframework-4.8
					https://www.orioninc.com/blog/c-async-and-await-programming-model-from-scratch-introduction/

					https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises
					https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
					https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers
					https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications
					https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API
				]
				
				API_design[
					https://graphql.github.io/learn/queries/
					https://github.com/alumbra/alumbra
					https://github.com/graphql/graphiql
					
					graphql, grpc POC
					https://medium.com/@svengau_17540/when-graphql-meets-grpc-3e9729d32e05
					
					//REST graphql grpc webhoocks
					https://nordicapis.com/when-to-use-what-rest-graphql-webhooks-grpc/
					
				]

				architecture[
						
//EF repository wrong
https://medium.com/@hoagsie/youre-all-doing-entity-framework-wrong-ea0c40e20502
	
//clean architecture explained
https://habr.com/ru/company/mobileup/blog/335382/
https://medium.com/gdplabs/clean-architecture-a8b5d93d0944
				]
				
				core[
					//react in core
					https://developer.okta.com/blog/2018/07/02/build-a-secure-crud-app-with-aspnetcore-and-react
					https://docs.microsoft.com/en-us/aspnet/core/client-side/spa/react?view=aspnetcore-2.2&tabs=visual-studio
						https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation
						https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
					https://medium.com/@hoagsie/youre-all-doing-entity-framework-wrong-ea0c40e20502
					
					threading[
						http://www.albahari.com/threading/
					]
					
					async [

//asynchronous programming
https://docs.microsoft.com/en-us/dotnet/csharp/async
//await
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/await
//thread pool
https://docs.microsoft.com/en-us/dotnet/api/system.threading.threadpool?view=netframework-4.7.2
//APM
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-and-state-object
		
https://cpratt.co/async-tips-tricks/
//async exceptions
https://blogs.msdn.microsoft.com/ptorr/2014/12/10/async-exceptions-in-c/
//async await best practices
https://msdn.microsoft.com/en-us/magazine/jj991977.aspx
//query to linq expression tree
https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-5-query-translation-implementation
//yield return epl
https://devblogs.microsoft.com/oldnewthing/20080812-00/?p=21273
https://stackoverflow.com/questions/39476/what-is-the-yield-keyword-used-for-in-c 

//c#  async awai tutorial
https://www.codingame.com/playgrounds/4240/your-ultimate-async-await-tutorial-in-c/introduction

//c# shoot in the leg with Tasks
https://blog.maximerouiller.com/post/shooting-yourself-in-the-foot-with-c-tasks-continuewith/

https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation
https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth

//asynchronous programming patterns							
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/
//system threading
https://docs.microsoft.com/en-us/dotnet/api/system.threading?view=netframework-4.7.2
//taks
https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks?view=netframework-4.7.2
//async in depth
https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
//asynchronous programming
https://docs.microsoft.com/en-us/dotnet/csharp/async
//introduction to sync
https://msdn.microsoft.com/en-us/magazine/dn802603.aspx
//should my db calls be async
https://blogs.msdn.microsoft.com/rickandy/2009/11/14/should-my-database-calls-be-asynchronous/
//Understanding Async, Avoiding Deadlocks
https://medium.com/rubrikkgroup/understanding-async-avoiding-deadlocks-e41f8f2c6f5d


http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html
http://blog.stephencleary.com/2012/02/async-and-await.html
https://msdn.microsoft.com/en-us/magazine/mt238404.aspx
https://msdn.microsoft.com/en-us/magazine/jj991977.aspx
https://stackify.com/csharp-async-await-task-performance/
https://docs.microsoft.com/en-us/dotnet/framework/network-programming/asynchronous-server-socket-example
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/
https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/?view=aspnetcore-2.1
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task?view=netframework-4.7.2

//async 
https://cpratt.co/async-tips-tricks/
https://www.codingame.com/playgrounds/4240/your-ultimate-async-await-tutorial-in-c/structure-of-async-await
https://medium.com/quick-code/react-quick-tip-use-class-properties-and-arrow-functions-to-avoid-binding-this-to-methods-29628aca2e25
https://medium.com/bynder-tech/c-why-you-should-use-configureawait-false-in-your-library-code-d7837dce3d7f
https://msdn.microsoft.com/en-us/magazine/gg598924.aspx

https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation
https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
https://devblogs.microsoft.com/dotnet/new-features-in-c-7-0/
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm
https://devblogs.microsoft.com/dotnet/async-in-4-5-worth-the-await/
https://docs.microsoft.com/en-us/ef/ef6/fundamentals/async

						//async 
						https://cpratt.co/async-tips-tricks/
						
						https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation
						https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
						
						//async 
						https://cpratt.co/async-tips-tricks/
						https://www.codingame.com/playgrounds/4240/your-ultimate-async-await-tutorial-in-c/structure-of-async-await
						https://medium.com/quick-code/react-quick-tip-use-class-properties-and-arrow-functions-to-avoid-binding-this-to-methods-29628aca2e25
						https://medium.com/bynder-tech/c-why-you-should-use-configureawait-false-in-your-library-code-d7837dce3d7f
						https://msdn.microsoft.com/en-us/magazine/gg598924.aspx
						
						https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation
						https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
						https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
						https://devblogs.microsoft.com/dotnet/new-features-in-c-7-0/
						https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
						https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm
						https://devblogs.microsoft.com/dotnet/async-in-4-5-worth-the-await/
						https://docs.microsoft.com/en-us/ef/ef6/fundamentals/async
						
						//https://stackoverflow.com/questions/13489065/best-practice-to-call-configureawait-for-all-server-side-code
						ConfigureAwait(false) in classic asp.net in UI context
						not saves thread jumps, saves context request
						
						
						//useable only in parallel request, TPL better
						
						//cannot be tested in .net console
						//test from .net web api UI
						never user ...Async.Result() -> synch way, deadlock in asp.net WEB API
						
						APM
						EAP
						TAP,TPL
						
//async 
https://jeremybytes.blogspot.com/2015/01/task-and-await-basic-exception-handling.html
					]
					
					enums_code_smell[
						https://softwareengineering.stackexchange.com/questions/300080/when-are-enums-not-a-code-smell
						https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/enumeration-classes-over-enum-types
						https://stackoverflow.com/questions/10809543/why-are-these-enums-bad
					]

https://csharpindepth.com/Articles/PropertiesMatter
//async 
https://jeremybytes.blogspot.com/2015/01/task-and-await-basic-exception-handling.html
					//c#  async awai tutorial
					https://www.codingame.com/playgrounds/4240/your-ultimate-async-await-tutorial-in-c/introduction
					
					//c# shoot in the leg with Tasks
					https://blog.maximerouiller.com/post/shooting-yourself-in-the-foot-with-c-tasks-continuewith/
				
					//query to linq expression tree
					https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-5-query-translation-implementation
					//yield return epl
					https://devblogs.microsoft.com/oldnewthing/20080812-00/?p=21273
					https://stackoverflow.com/questions/39476/what-is-the-yield-keyword-used-for-in-c 
					
					
					IenumerableIcollectionIlst[
						https://medium.com/@kunaltandon.kt/ienumerable-vs-icollection-vs-ilist-vs-iqueryable-in-c-2101351453db
							IEnumerable{- no crud,no count + Filter,enumerate}
							ICollection
							{
							count O(1), + enumerate,count,filter,crud
								generates Func<T,bool>
							}
							IList{:Ienumerable + :ICollection + insert in the middle ?O(n)}
							IQueryable{
								:ICollection
								generates Expression<Func<T,bool>>
							}
							
						IenumerablevsIlist[
							https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
							https://stackoverflow.com/questions/1072614/should-i-always-return-ienumerablet-instead-of-ilistt
						]
					]
				
						//readonly
					https://codeblog.jonskeet.uk/2014/07/16/micro-optimization-the-surprising-inefficiency-of-readonly-fields/
					https://softwareengineering.stackexchange.com/questions/132747/is-having-public-constants-bad
					public readonly goes to backed into referenced assemblies
					
					https://csharpindepth.com/Articles/PropertiesMatter
					//async 
					https://jeremybytes.blogspot.com/2015/01/task-and-await-basic-exception-handling.html
					
						
					msdn[
						
						https://docs.microsoft.com/en-us/ef/ef6/fundamentals/async
							
						//query exec
						https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/query-execution#immediate-query-execution
						//standart query ops
						https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries
						https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries
						https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2013/bb397896(v=vs.120)
						//supported and unsuported linq
						https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/supported-and-unsupported-linq-methods-linq-to-entities
						//query methods
						https://docs.microsoft.com/en-us/dotnet/api/system.linq.queryable.any?view=netframework-4.7.2
						
						//CPU usage analize
						https://docs.microsoft.com/en-us/visualstudio/profiling/beginners-guide-to-performance-profiling?view=vs-2017
						//code profiling
						https://docs.microsoft.com/en-us/visualstudio/profiling/beginners-guide-to-performance-profiling?view=vs-2015
						//async
						https://docs.microsoft.com/en-us/ef/ef6/fundamentals/async
						//native sql
						https://docs.microsoft.com/en-us/dotnet/api/system.data.linq.sqlclient.sqlmethods?view=netframework-4.7.2
						//ef core
						https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-3.0/features
						//c# ref
						https://opdhsblobprod02.blob.core.windows.net/contents/c6aea4f5457448ee818b7292ba695982/68a07d048ee6f26b1aa8d66304d31f2a?sv=2015-04-05&sr=b&sig=u9Hpl0y6yB5fZi41T9CnaQOQgOLgqOt8TEEr5MwjVrg%3D&st=2019-04-01T07%3A50%3A48Z&se=2019-04-02T08%3A00%3A48Z&sp=r
						//.NET tools
						https://docs.microsoft.com/en-us/dotnet/framework/tools/ngen-exe-native-image-generator
						//query data
						https://docs.microsoft.com/en-us/ef/ef6/querying/related-data
					]
					
					core[
					
						https://the-eye.eu/public/Books/IT%20Various/LINQ%20Quickly.pdf
						https://elacademico.files.wordpress.com/2009/11/manning-linq-in-action-jan-2008-19339881691.pdf
						https://the-eye.eu/public/Books/IT%20Various/C%23%20in%20Depth%2C%202nd%20Edition.pdf
						http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
						//readonly
						https://codeblog.jonskeet.uk/2014/07/16/micro-optimization-the-surprising-inefficiency-of-readonly-fields/
						https://softwareengineering.stackexchange.com/questions/132747/is-having-public-constants-bad
						public readonly goes to backed into referenced assemblies
						
						https://csharpindepth.com/Articles/PropertiesMatter
						//async 
						https://jeremybytes.blogspot.com/2015/01/task-and-await-basic-exception-handling.html
					
					]
					
					https://codeblog.jonskeet.uk/2014/07/16/micro-optimization-the-surprising-inefficiency-of-readonly-fields/
					https://softwareengineering.stackexchange.com/questions/132747/is-having-public-constants-bad
					public readonly goes to backed into referenced assemblies.
					https://csharpindepth.com/Articles/PropertiesMatter							
				]
				
				//Error: Evaluating the function 'function' timed out and needed to be aborted in an unsafe way
				https://docs.microsoft.com/en-us/visualstudio/debugger/error-evaluating-the-function-function-timed-out-and-needed-to-be-aborted-in-an-unsafe-way?view=vs-2017
				https://developercommunity.visualstudio.com/content/problem/15931/evaluating-the-function-systemreflectionassemblylo.html
				https://forums.autodesk.com/t5/revit-api-forum/use-managed-compatibility-mode-or-enable-native-code-debugging/td-p/6868592
				https://stackoverflow.com/questions/28551818/visual-studio-2013-debug-options-missing-under-configuration-options
			]
			
			CI/CD pipeline[
				https://www.redhat.com/en/blog/integrating-ansible-jenkins-cicd-process
				github-SonarSource-Nexus-Ansible-AnsiblePlaybook-Jenkins
			]			
			
			StateMachines[
				https://blog.markshead.com/869/state-machines-computer-science/
				
				Finite-state machine
				non-deterministic 
					a->q,b->c
				deterministic
					a->q [b,c,d]->r,t,v
					
					-> NFA-[subset (powerset) construction]->DFA
					every non-deterministig finita automata (NFA)
					cant be translated into deterministig (DFA)
					
					-> regular expression - [Thompson's construction
					] -> NFA
					
			]
				
					
		https://en.wikipedia.org/wiki/NP-hardness
		https://en.wikipedia.org/wiki/Time_complexity
		https://en.wikipedia.org/wiki/Dynamic_programming

		https://www.cl.cam.ac.uk/~caw77/papers/mechanising-and-verifying-the-webassembly-specification.pdf


			//react + redux
			https://medium.freecodecamp.org/an-introduction-to-functional-reactive-programming-in-redux-b0c14d097836


			http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0006481																  
			https://sharpc.livejournal.com/67583.html
			http://www.securitynewspaper.com/2015/10/15/how-to-scan-whole-internet-3-7-billion-ip-addresses-in-few-minutes/
																								 
			//electronics manufacturing association
			http://www.semi.org
			RAND Corporation
			Atlantic Council
			http://veloline.ru/ispravlenie-vosmerok								 
			
			https://en.wikipedia.org/wiki/NP-hardness
			https://en.wikipedia.org/wiki/Time_complexity
			https://en.wikipedia.org/wiki/Dynamic_programming
			https://developer.chrome.com/native-client/migration
			https://www.valentinog.com/blog/webpack-tutorial/
			https://www.cl.cam.ac.uk/~caw77/papers/mechanising-and-verifying-the-webassembly-specification.pdf


			RPN[
				http://77.rospotrebnadzor.ru/index.php/upravlenie/priemnaya
				http://rospotrebnadzor.ru/region/structure/str_uprav.php
				https://www.meleon.ru/
				https://www.kartoteka.ru/card/235a7ca4f006b2d3f2b6c855374cadd0/
				https://www.kartoteka.ru/card/886e2d61f96dc6ae24bd60eb3084fc78/	
			]
			
			https://proglib.io/p/hacker-course/		
			http://www.gilead.com/
			http://www.ftse.com/products/downloads/Russell-US-indexes.pdf
			
			Barings Vostok
			 
			offshore[
				Британские Виргинские острова, США, Великобритания, Кипр, Панама, Новая Зеландия
			]
		
			//investing
			[
				stats[
					http://www.pbc.gov.cn
					
					JPY[
						MinistryOfFinanace
						https://www.mof.go.jp/english/index.htm
							[
								Сальдо торгового баланса с учетом сезонных колебаний
								импорт,экспорт
								
							]
					]
					
					GB[
						Office for National Statistics
						https://www.gov.uk/government/statistics/announcements
						https://www.ons.gov.uk/
						[
							Consumer Price Index (CPI)
							Индекс потребительских цен (ИПЦ) (г/г,м/м) (month)
							Producer Price Index (PPI)
							Индекс закупочных цен производителей (г/г,м/м) (month)
							The Retail Price Index
						]
						
					]
					
					EUR[
						eurostat
						http://ec.europa.eu/eurostat
					]
					
					USA[
						fedreserve
						https://www.federalreserve.gov/monetarypolicy/beige-book-default.htm
						[
							Beige Book
						]
						energy agency
						https://www.eia.gov/
						[
							Crude Oil Inventories
							Crude Oil Imports
							Cushing Crude Oil Inventories
							EIA Weekly Distillates Stocks
							Distillate Fuel Production
							EIA Weekly Distillates Stocks
						]
					]			
				]
				
				funds[
					https://www.bakerhughes.com/
					
					https://www.fidelity.com/
					https://www.fundcalibre.com/
					https://www.youinvest.co.uk/
					https://www.brewin.co.uk/
					https://www.unicornam.com/
					http://www.moneyobserver.com/
				]
				
				analytics[
					
					https://ru.investing.com
					
					US index
					https://www.marketwatch.com/investing/index/DXY
					
					https://oilprice.com/
					
					http://www.barrons.com
					
					https://www.spglobal.com/platts/en
					
					//Satellite tanker traking
					https://tankertrackers.com/
					//Marine traffic tracking
					https://www.marinetraffic.com
				]
				
				ideas[
					https://oilprice.com/
					
					OIL[
						ROSN,SNGS,LKOH
						
						OPEC[
						2018 IRI-57.5;KSA-70
							07.2018 
						]
						2019 Saudi Arabian Oil Co IPO 
						$2 trl priced
						$100 mlrd IPO shares cap.
						
						2018.11.03 
						$ WTI 63 BRENT 72
						Iran Oil[
							main byuers India 18, China 24, Japan 5, Turkey 9, South Korea 14
							US sanctions : countries can import if reduse purchases
							take eff 2018.11.04
						]
					]
					reserve_currencies[
						Swiss franc, Singapore dollar, U.S. dollar and Japanese yen
					]
					
					Calendar[
						12.07.2018 CPI https://www.bls.gov/cpi/ https://www.investopedia.com/terms/c/consumerpriceindex.asp
								Jobless claims https://www.bls.gov/bls/newsrels.htm https://www.investopedia.com/terms/j/jobless-claims.asp				
						13.07.2018 CCI https://www.investopedia.com/terms/c/cci.asp https://www.conference-board.org/data/consumerconfidence.cfm
									SCI http://www.sca.isr.umich.edu/
					]
				]
				
				platforms[
					https://www.xtrade.ru
					https://www.etoro.com
					https://www.investopedia.com
				]
					
				crypto[
					https://ru.m.bitcoinwiki.org/wiki/%D0%91%D0%B8%D1%80%D0%B6%D0%B8
					https://www.bloomberg.com/features/bitcoin-bulls-bears/
					https://xapo.com/
					
					https://www.bloomberg.com/news/articles/2018-05-09/ex-goldman-trader-hires-former-rivals-to-build-a-crypto-empire
					https://www.panteracapital.com/
				]
			
			]
			
			//startups
			[
				//venture cmps
				https://www.crunchbase.com/organization/gagarin-capital-partners#section-overview
				
				//accelerators
				https://www.ycombinator.com/about/
				
				
				http://www.selpo.me/
				http://go.philtech.ru/?utm_source=meduza&utm_medium=article&utm_campaign=accelerator.
			
				https://petcube.com/
				//AI companion
				https://replika.ai/
				
				//farming
				http://ifarmproject.ru/home-eng
				
				//travel routes
				https://app.eightydays.me/
			]
			
			
			//OWIN
			[
		https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/external-authentication-services
		https://docs.microsoft.com/en-us/aspnet/identity/overview/extensibility/overview-of-custom-storage-providers-for-aspnet-identity
		https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/how-to-create-a-custom-authorization-policy
		https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service
		https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier
		https://docs.microsoft.com/en-us/aspnet/core/security/authorization/roles
		https://docs.microsoft.com/en-us/aspnet/core/fundamentals/owin
		http://bitoftech.net/2015/01/21/asp-net-identity-2-with-asp-net-web-api-2-accounts-management/
		http://bitoftech.net/2015/03/11/asp-net-identity-2-1-roles-based-authorization-authentication-asp-net-web-api/
			]
			
			//EXPRESSIONS
			[
		//MSDN linq, expressions
		https://weblogs.asp.net/dixin					  
		//Expression trees
		https://weblogs.asp.net/dixin/functional-csharp-function-as-data-and-expression-tree
		//Dynamic LINQ Queries with Expression Trees
		https://www.simple-talk.com/dotnet/net-framework/dynamic-linq-queries-with-expression-trees/
		//expressionTypes
		https://msdn.microsoft.com/en-us/library/bb361179(v=vs.110).aspx
		//Expression rules
		http://coding-time.blogspot.ru/2011/07/how-to-implement-rule-engine-in-c.html
		//custom LINQ provider
		https://stackoverflow.com/questions/12181276/implementing-a-custom-linq-to-x-provider
		https://msdn.microsoft.com/en-us/library/bb546158.aspx
		https://blogs.msdn.microsoft.com/mattwar/2007/07/30/linq-building-an-iqueryable-provider-part-i/
			]
			
			//CORE
			[
			
		//.NET CORE
		https://docs.microsoft.com/en-us/dotnet/core/
		//core utilities
		https://www.microsoft.com/net/download/linux
		//Linux prerequisites
		https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x
		//core Hello world
		https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api
		//core deploy 
		https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-vs#simpleSelf
		//core target platforms 
		https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids
		//publish iis
		https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/?tabs=aspnetcore2x
		https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/visual-studio-publish-profiles?tabs=aspnetcore2x#publish-profiles
		//kestrel
		https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/?tabs=aspnetcore2x
		https://docs.microsoft.com/ru-ru/aspnet/core/fundamentals/servers/kestrel?tabs=aspnetcore2x
		//nginx
		https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?tabs=aspnetcore2x
		https://www.tonyranieri.com/blog/2017/10/27/Hosting-.Net-Core-On-Linux/
		//docker
		https://stormpath.com/blog/tutorial-deploy-asp-net-core-on-linux-with-docker
		//self contained 
		https://docs.microsoft.com/en-us/dotnet/core/deploying/index
		https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-vs
		//platforms ID catalog
		https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids
		//kestrel3
		https://github.com/aspnet/KestrelHttpServer
		//iis host
		https://metanit.com/sharp/aspnet5/20.1.php
		//build on win deploy to Unix
		https://pioneercode.com/post/developing-a-net-core-site-in-windows-and-deploying-it-to-a-budget-linux-host
		//Linux prerequisites
		https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x
		//self contained 
		https://github.com/dotnet/core/blob/master/Documentation/self-contained-linux-apps.md																		 
			]	
			
		
			//whiteboard interviews
			https://hackernoon.com/how-to-lose-an-it-job-in-10-minutes-3d63213c8370
			//machine lerning algoritm
			https://hackernoon.com/choosing-the-right-machine-learning-algorithm-68126944ce1f
			
			JS_unsorted
			[
				
				//raster tiles vs vector tiles 
				https://www.mapbox.com/help/glossary/tileset

				//new mvc with npm + react
				https://codeburst.io/how-to-use-webpack-in-asp-net-core-projects-a-basic-react-template-sample-25a3681a5fc2
				//core webpack react + hotmodules autoupdate
				https://medium.com/@deanvniekerk/simple-net-core-webpack-and-react-overview-using-vs-code-5522da657b35
				
				//kickass
				https://levelup.gitconnected.com/9-tricks-for-kickass-javascript-developers-in-2019-eb01dd3def2a
				
				t&t[
					ES6 arrow functions (=>). Arrow functions explicitly prevent binding this
				]
				
				//EXM CJS modules
				https://medium.com/webpack/the-state-of-javascript-modules-4636d1774358
				
				//twitter
				https://twitter.com/addyosmani
				
				//async/await
				https://medium.freecodecamp.org/how-to-master-async-await-with-this-real-world-example-19107e7558ad
				
				//wbpack import resolve folders
				https://spin.atomicobject.com/2017/10/07/absolute-paths-javascript/
				
				//modular js
				https://medium.com/dev-bits/everything-i-know-about-writing-modular-javascript-applications-37c125d8eddf
				
				//modules,bundles,systems
				https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/
				
				//exploring s6
				http://exploringjs.com/es6/index.html#toc_ch_modules
				
				//require js
				https://volaresystems.com/blog/post/2014/05/27/Adding-RequireJS-to-an-ASPNET-MVC-project
				
				//js classes
				https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript
				//js prototipe chain 
				//type.call(this,...)
				//use ObjectCreate(type.prototype) in constructor
				https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript#constructor-functions
				
				//js rendering
				https://blog.sessionstack.com/how-javascript-works-the-rendering-engine-and-tips-to-optimize-its-performance-7b95553baeda
				
				
				//dynamic external lib load
				https://stackoverflow.com/questions/950087/how-do-i-include-a-javascript-file-in-another-javascript-file
				
				http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html
				//arch patterns for large-scale 
				https://addyosmani.com/largescalejavascript/
				//10 arch patterns 
				https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013
				//object rest/spread properties Observer,async
				https://derickbailey.com/2017/06/06/3-features-of-es7-and-beyond-that-you-should-be-using-now/					
				//factory vs constructor vs classes
				https://medium.com/javascript-scene/javascript-factory-functions-vs-constructor-functions-vs-classes-2f22ceddf33e
				//simple service bus with dispatch listen
				http://krasimirtsonev.com/blog/article/javascript-managing-events-dispatch-listen
				//inheritance, delegation, object linking
				https://codeburst.io/javascript-inheritance-25fe61ab9f85
				
				//modules
				https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc
				https://coryrylan.com/blog/javascript-module-pattern-basics
				//shorthandNotations
					https://www.sitepoint.com/shorthand-javascript-techniques/
				//codding best practce
					https://blog.risingstack.com/javascript-clean-coding-best-practices-node-js-at-scale/
				
				//class composition
					https://alligator.io/js/class-composition/
				//dragNdrop
					https://medium.com/quick-code/simple-javascript-drag-drop-d044d8c5bed5
					http://interactjs.io/			
				
				//pagex layerx screenx
				https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y
				[
				
					pageX/Y gives the coordinates relative to the <html> element in CSS pixels.
					clientX/Y gives the coordinates relative to the viewport in CSS pixels.
					screenX/Y gives the coordinates relative to the screen in device pixels.
						
					offsetX/Y relative to layer
				]
				
				//good practices 
				https://www.w3.org/wiki/JavaScript_best_practices
				//find event listeners 
				https://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node-when-debugging-or-from-the-javascript
				
				//ajaxPartialViewResult //partial view update
				https://stackoverflow.com/questions/19392212/how-to-use-jquery-or-ajax-to-update-razor-partial-view-in-c-asp-net-for-a-mvc-p
				
				//draggable
				https://www.w3schools.com/howto/howto_js_draggable.asp
				
				//decoupling with mediator
				https://addyosmani.com/largescalejavascript/
				//multifile require-js
				https://stackoverflow.com/questions/33887717/javascript-multi-file-modules-and-require-js
				//augmented module
				http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html#global_import
				
				//js css rotate
				https://stackoverflow.com/questions/19126432/rotate-a-div-using-javascript
				
				///AJAX async returned .on done
				https://stackoverflow.com/questions/27612372/how-to-await-the-ajax-request
				//js replace map
				https://alligator.io/js/string-replace/
				https://stackoverflow.com/questions/15604140/replace-multiple-strings-with-multiple-other-strings
				https://stackoverflow.com/questions/15604140/replace-multiple-strings-with-multiple-other-strings
				
				//JsTheRightWay
				http://jstherightway.org
				
				//design patterns
				https://addyosmani.com/resources/essentialjsdesignpatterns/book/#observerpatternjavascript
				http://jstherightway.org/#patterns
				
				//Observer pattern
				https://pawelgrzybek.com/the-observer-pattern-in-javascript-explained/
				
				//JS transform rotate 
				https://stackoverflow.com/questions/6633536/css-rotation-with-respect-to-a-reference-point
				
					//Mozilla learn
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide
				//object initializer
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer
				//Mozilla spiderMonkey
				https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey
				//AirBnB styleguide
				http://airbnb.io/javascript/#functions--mutate-params

			]
			
			gamedev[
				
				//overall + shaders
				https://catlikecoding.com/unity/tutorials/
				
				https://www.habrador.com/tutorials/shaders/
				https://www.edx.org/course/foundations-computer-graphics-uc-berkeleyx-cs-184-1x
				https://answers.unity.com/questions/7758/good-resources-for-learning-how-to-write-shaders-c.html
				
				shaders[
					https://www.habrador.com/tutorials/shaders/3-parallax-mapping/
				]
				unity[		
					https://digitalerr0r.wordpress.com/2015/09/02/unity-5-shader-programming-1-an-introduction-to-shaders/
					https://docs.unity3d.com/Manual/ShadersOverview.html
					https://www.youtube.com/watch?v=3penhrrKCYg
					https://www.habrador.com/tutorials/shaders/
					
					https://en.wikibooks.org/wiki/GLSL_Programming/Unity
					https://en.wikibooks.org/wiki/Cg_Programming/Unity
					https://unity3d.com/learn/resources/downloads
					https://docs.unity3d.com/Manual/SL-VertexFragmentShaderExamples.html
					
				]
				vulkan[
				
				]
			]
			
			craft[
				electro[
					//electro power supply
					https://www.kirich.blog/stati/informaciya-dlya-nachinayuschih/419-ustroystvo-impulsnyh-blokov-pitaniya-apfc.html
					https://www.kirich.blog/stati/informaciya-dlya-nachinayuschih/333-iz-chego-sostoit-impulsnyy-blok-pitaniya-chast-3.html
					http://electrik.info/device/1081-chto-takoe-impulsnyy-blok-pitaniya.html
					https://www.asutpp.ru/impulsnyj-blok-pitaniya.html
					https://3dnews.ru/911366
				]
			]

			crypto[
				links[
						https://medium.com/@jimmysong/why-blockchain-is-hard-60416ea4c5c
						https://support.bitfinex.com/hc/ru
						https://]www.bitfinex.com/legal/terms
						https://en.wikipedia.org/wiki/Bitcoin
						https://en.wikipedia.org/wiki/Cryptocurrency
					]
					
					BTC 1
					mBTC 0.001
					sat 0.00000001
				]
							
			
			science and technology[
			
				https://www.youtube.com/watch?v=uE5POhMnN78
				https://www.youtube.com/watch?v=1EWQYAfuMYw
				https://www.youtube.com/watch?v=6MU52wc1hIs
				https://www.youtube.com/watch?v=VexSq8NIqew
					
					neuroscience [


						//literature 
						https://www.uio.no/studier/emner/medisin/med/MF9150/h13/pensumliste/literature-list-mf-9150-essentials-of-neurophysiology-%28versjon-2%29.pdf

						//imune
						https://www.youtube.com/watch?v=tJXk2zDomWk

						https://www.youtube.com/watch?v=UdTJPsohRWk&list=PLh6dVTO7f4FZsTOuD_0v7DLDm70Jv3_99
						https://www.youtube.com/watch?v=XNMGhUG3YDA
						https://www.youtube.com/watch?v=wf6Nbbnc6nw
						https://www.youtube.com/watch?v=Jal8tVU3w9M
						https://www.youtube.com/watch?v=bzbl8iS6cN0
						https://www.youtube.com/watch?v=tJXk2zDomWk

					]

					maths[

						https://www.youtube.com/watch?v=EwQV4iHdnOU

					]
				
			]
			
			//most original movies
			https://www.youtube.com/watch?v=Ycf1fcom6So
			 
			//c++ materials
			https://vk.com/@tproger-cpp-digest
			//c++ tricks
			https://tproger.ru/translations/cpp-hints/
			
			//c++ core guidlines
			https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md
			//ultimate question of programming
			https://alexastva.gitbooks.io/the-ultimate-question-of-programming-refactoring-/content/2.html
			//software design
			https://cis.stvincent.edu/html/tutorials/swd/.			
			//cpp google styleguide
			https://google.github.io/styleguide/cppguide.html#Header_Files
			
			//123 Interview questions
			https://tproger.ru/articles/problems/

		
	
			SQL[
				//sql protocols
				https://techcommunity.microsoft.com/t5/SQL-Server/bg-p/SQLServer/label-name/SQLServerProtocols
			]									   
			
				//web assembly
				https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/
				
				https://medium.com/basecs/a-most-perfect-union-just-in-time-compilers-2938712a9f6a
			
				https://opdhsblobprod02.blob.core.windows.net/contents/c6aea4f5457448ee818b7292ba695982/68a07d048ee6f26b1aa8d66304d31f2a?sv=2015-04-05&sr=b&sig=u9Hpl0y6yB5fZi41T9CnaQOQgOLgqOt8TEEr5MwjVrg%3D&st=2019-04-01T07%3A50%3A48Z&se=2019-04-02T08%3A00%3A48Z&sp=r
				http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
				https://the-eye.eu/public/Books/IT%20Various/C%23%20in%20Depth%2C%202nd%20Edition.pdf
				https://elacademico.files.wordpress.com/2009/11/manning-linq-in-action-jan-2008-19339881691.pdf
				https://the-eye.eu/public/Books/IT%20Various/LINQ%20Quickly.pdfublic/Books/IT%20Various/LINQ%20Quickly.pdf

				//point in polygon
				http://geomalgorithms.com/a03-_inclusion.html
			
				//5 int in 5 days
				https://medium.com/@XiaohanZeng/i-interviewed-at-five-top-companies-in-silicon-valley-in-five-days-and-luckily-got-five-job-offers-25178cf74e0f
				//6 int in 6 days
				https://blog.usejournal.com/i-interviewed-at-six-top-companies-in-silicon-valley-in-six-days-and-stumbled-into-six-job-offers-fe9cc7bbc996

				https://blog.usejournal.com/what-i-learned-in-my-first-two-years-as-a-software-engineer-4e374fdcf0fd
				//300к job offer
				https://blog.usejournal.com/how-i-negotiated-a-software-engineer-offer-in-silicon-valley-f11590f5c656
						
						
				JS_WEB[
						//5 Things I Didn't Know about Create React App
						https://www.telerik.com/blogs/5-things-i-didnt-know-about-create-react-app?utm_medium=product&utm_source=fiddlerapp&utm_campaign=kendo-ui-react-blog-fiddler-dt-blog-pick-things-didnt-know-create-react-app
						
						//formik - small redux
						https://jaredpalmer.com/formik/docs/overview
						
						//react bootstrap
						https://medium.com/luteceo-software-chemistry/lightweight-starter-kit-for-asp-net-core-react-typescript-and-webpack-with-hmr-7bc977b7712
						//react in core
						https://developer.okta.com/blog/2018/07/02/build-a-secure-crud-app-with-aspnetcore-and-react
						https://docs.microsoft.com/en-us/aspnet/core/client-side/spa/react?view=aspnetcore-2.2&tabs=visual-studio
					
	
						//validation 
						https://reactjs.org/docs/typechecking-with-proptypes.html
						
						//usage with react
						https://redux.js.org/basics/usage-with-react
						
						react components
						[
							https://blog.bitsrc.io/11-react-component-libraries-you-should-know-178eb1dd6aa4
							http://react-toolbox.io/#/components/time_picker
							https://react-bootstrap.github.io/layout/grid/
							https://material-ui.com/demos/lists/
							https://v2.grommet.io/accordion
						]
						
						//redux
						//three priniples
						https://redux.js.org/introduction/three-principles
						//getting started
						https://redux.js.org/introduction/getting-started
						//todo example
						https://redux.js.org/basics/example
						//react
						//validation typecheck
						https://reactjs.org/docs/typechecking-with-proptypes.html
						//events
						https://reactjs.org/docs/events.html
						//render props
						https://reactjs.org/docs/render-props.html
						//create context
						https://reactjs.org/docs/context.html
					
				
				
				//react bootstrap
				https://medium.com/luteceo-software-chemistry/lightweight-starter-kit-for-asp-net-core-react-typescript-and-webpack-with-hmr-7bc977b7712
		
				https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/
				
				//async await
				https://alligator.io/js/async-functions/
				
				//check datatypes in js
				https://webbjocke.com/javascript-check-data-types/
				
				//destructuring
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
				
				//this
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
				
				//angular book
				http://www.nglesson.com/Livres/ng-book2-angular-5-r67.pdf

				//react book
				file:///F:/backup/workflow/files/lit/fullstack-react/fullstack-react.pdf

				redux basic st 500
				redux combine and split to threads fn 560
				redux components st 560
				575 -> map state to props

				redux tree template 
				https://redux.js.org/introduction/examples#real-world

				//you not need graphql
				https://blog.logrocket.com/5-reasons-you-shouldnt-be-using-graphql-61c7846e7ed3
				//techs to learn
				//techs, front, back, cash, render, test
				https://medium.com/zerotomastery/top-libraries-tech-to-learn-in-2019-for-full-stack-developers-f8c0331b8a00
				//JS 5 mnths
				https://medium.com/zerotomastery/learn-to-code-in-2019-get-hired-and-have-fun-along-the-way-d4197f96be27

				//webassembly roudmap
				https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-07-runtime-09-final-e1539904436477.png
				https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/

				https://medium.com/@me_37286/19-ways-to-become-a-better-node-js-developer-in-2019-ffd3a8fbfe38


				//react UI component libs
				https://blog.bitsrc.io/11-react-component-libraries-you-should-know-178eb1dd6aa4
				http://react-toolbox.io/#/
				https://material-ui.com/getting-started/learn/
				https://material.io/tools/icons/?style=baseline

					//recursive react tree
					https://medium.com/the-guild/recursive-react-tree-component-implementation-made-easy-466dfce1a008
					
					//iterate object props
					https://hackernoon.com/5-techniques-to-iterate-over-javascript-object-entries-and-their-performance-6602dcb708a8
					
					//destructuring
					https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
					
					//this
					https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
					
					//
					https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
					
					//iterate over object props
					https://hackernoon.com/5-techniques-to-iterate-over-javascript-object-entries-and-their-performance-6602dcb708a8
					
					//redux normalizer
					//treeshaped structures
					https://stackoverflow.com/questions/32798193/how-to-handle-tree-shaped-entities-in-redux-reducers
				
					//backendefication of frontend
					https://hackernoon.com/the-backendification-of-frontend-development-62f218a773d4
					
					//redux in one line
					https://gist.github.com/gaearon/ffd88b0e4f00b22c3159
					
						//es6
					http://exploringjs.com/es6/index.html#toc_ch_coding-style
					https://hacks.mozilla.org/2015/08/es6-in-depth-modules/
					
					//js render
					https://blog.sessionstack.com/how-javascript-works-the-rendering-engine-and-tips-to-optimize-its-performance-7b95553baeda
					
					//self=this
					https://medium.com/@vijay.j.shekhawat/javascript-why-var-self-this-bbbaf98ab9d9
					
					//es6 styleguides
					https://codeburst.io/5-javascript-style-guides-including-airbnb-github-google-88cbc6b2b7aa
					//airbnb styleguide
					https://github.com/airbnb/javascript
					
					
					//inside this class scope binds function to this class scope
					bind.FunctionName.bind(this)
					https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind
					
					//need in frameworks
					https://medium.freecodecamp.org/do-we-still-need-javascript-frameworks-42576735949b
					//sync state of UI
					https://medium.com/dailyjs/the-deepest-reason-why-modern-javascript-frameworks-exist-933b86ebc445
					//bind 
					https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/
					//self == this 
					https://medium.com/@vijay.j.shekhawat/javascript-why-var-self-this-bbbaf98ab9d9
					
					//react
					//wrapper
					https://til.hashrocket.com/posts/c5725d4d01-react-wrapper-components-with-nested-children
					//react to ES6
					https://www.newmediacampaigns.com/blog/refactoring-react-components-to-es6-classes
						
					//facebook templates
					https://github.com/facebook/create-react-app
					//kriasoft
					https://github.com/kriasoft/react-app
					
							
					//guidelines for collections
					https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
					//infr persistance
					https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design

					//redux
					//three priniples
					https://redux.js.org/introduction/three-principles
					//getting started
					https://redux.js.org/introduction/getting-started
					//todo example
					https://redux.js.org/basics/example

					//react
					//validation typecheck
					https://reactjs.org/docs/typechecking-with-proptypes.html
					//events
					https://reactjs.org/docs/events.html
					//render props
					https://reactjs.org/docs/render-props.html
					//create context
					https://reactjs.org/docs/context.html

					//react redux 5 ways to bind
					https://blog.benestudio.co/5-ways-to-connect-redux-actions-3f56af4009c8
					//react 
					http://allenfang.github.io/react-bootstrap-table/index.html
					https://www.fullstackreact.com/p/using-presentational-and-container-components-with-redux/
					https://medium.com/dailyjs/techniques-for-decomposing-react-components-e8a1081ef5da

					//react todp
					https://codesandbox.io/s/9on71rvnyo
					
					//react Business logic
					https://medium.com/netscape/component-state-vs-redux-store-1eb0c929277
					
					//immutability in with redux
					https://blog.hellojs.org/immutability-in-javascript-using-redux-33405706d31d
					//arrow func diff
					https://cmichel.io/es6-class-methods-differences/
				
						
					//multidevice layout
					https://www.lukew.com/ff/entry.asp?1514
					//Responsive Web Design Patterns 
					https://developers.google.com/web/fundamentals/design-and-ux/responsive/patterns?hl=en
					
					//css is hard
					//Responsive Design
					https://internetingishard.com/html-and-css/responsive-design/
					//css box model
					https://internetingishard.com/html-and-css/css-box-model/
					//advanced positioninig
					https://internetingishard.com/html-and-css/advanced-positioning/
					
					//css examples
					https://freefrontend.com/css-arrows/
					
																					 
				//package-lock
				https://medium.com/coinmonks/everything-you-wanted-to-know-about-package-lock-json-b81911aa8ab8		
				
				//angular ng-book
				http://www.nglesson.com/Livres/ng-book2-angular-5-r67.pdf
				
				//react
				fullstack react the complete guide to reactjs and friends
				abstr[
					server.js
					modash
					enzyme
					react-router
					Flux & redux
				]
				
				//clojure
				https://medium.com/@daniel.oliver.king/getting-work-done-in-clojure-the-building-blocks-39ad82796926
				//js mass psychose
				https://hackernoon.com/the-javascript-phenomenon-is-a-mass-psychosis-57adebb09359	
				//programm scaffolding
				https://medium.com/@eddyystop/create-your-own-super-scaffolding-automatically-add-custom-code-89418e888dac
				
				//css tricks
				https://css-tricks.com/full-width-containers-limited-width-parents/		
				
				//react styles 
				https://codeburst.io/4-four-ways-to-style-react-components-ac6f323da822
				
				//composing software eric elliott epub
				
				//webpack bundle size
				https://hackernoon.com/optimising-your-application-bundle-size-with-webpack-e85b00bab579
				
				//ml
				https://hackernoon.com/thinking-of-self-studying-machine-learning-remind-yourself-of-these-6-things-b55a5f2b6c7d
				
				//web assembly
				https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/									
				
				
				//IIFe vs closure
				https://www.sitepoint.com/demystifying-javascript-closures-callbacks-iifes/
				
				https://lostechies.com/chrismissal/2013/08/06/browser-wars-websockets-vs-ajax/
				https://blog.safe.com/2014/08/websockets-ajax-webhooks-comparison/
				https://scotch.io/bar-talk/copying-objects-in-javascript
				https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know#toc-module-design-pattern
				https://medium.com/@tkssharma/objects-in-javascript-object-assign-deep-copy-64106c9aefab
				https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know#toc-module-design-pattern		
				https://medium.com/@tkssharma/objects-in-javascript-object-assign-deep-copy-64106c9aefab
				
				//JS styleguides
				https://codeburst.io/5-javascript-style-guides-including-airbnb-github-google-88cbc6b2b7aa
											
				//recursive react tree
				https://medium.com/the-guild/recursive-react-tree-component-implementation-made-easy-466dfce1a008
				
				//iterate object props
				https://hackernoon.com/5-techniques-to-iterate-over-javascript-object-entries-and-their-performance-6602dcb708a8
				
				//destructuring
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
				
				//this
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
				
				//GO
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
				
				//js 30 things
				https://javascript30.com/
				
				//MEAN
				//Express 4 web api
				https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4
				//mongo js web api
				https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4
				//mean web api
				https://scotch.io/tutorials/mean-app-with-angular-2-and-the-angular-cli
				
				
					CSS_responsive
					[			
						//multidevice layout
						https://www.lukew.com/ff/entry.asp?1514
						//Responsive Web Design Patterns 
						https://developers.google.com/web/fundamentals/design-and-ux/responsive/patterns?hl=en
						
						//css is hard
						//Responsive Design
						https://internetingishard.com/html-and-css/responsive-design/
						//css box model
						https://internetingishard.com/html-and-css/css-box-model/
						//advanced positioninig
						https://internetingishard.com/html-and-css/advanced-positioning/
						
						//css examples
						https://freefrontend.com/css-arrows/
					]
			
			
				]
				
				C#
				[
				
				//find 
				the absolutely awesome book on c# and .net
				
				//core_D	
				https://asp.net-hacker.rocks/2016/02/17/dependency-injection-in-aspnetcore.html		
						
				https://medium.com/basecs/a-most-perfect-union-just-in-time-compilers-2938712a9f6a


				http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
				https://the-eye.eu/public/Books/IT%20Various/C%23%20in%20Depth%2C%202nd%20Edition.pdf
				https://elacademico.files.wordpress.com/2009/11/manning-linq-in-action-jan-2008-19339881691.pdf
				https://the-eye.eu/public/Books/IT%20Various/LINQ%20Quickly.pdf
			
				http://www.oldapps.com/Internet_explorer.php?old_Internet_explorer=11		
				https://medium.com/@rhamedy/key-habits-and-things-i-wish-i-knew-earlier-as-a-developer-43c9466a0407
				https://dev.to/
				
				//sitebuilders
				https://www.sitepoint.com/the-best-7-tools-for-building-websites-and-pages/
			
			
				EFquering[
					https://docs.microsoft.com/en-us/ef/ef6/fundamentals/async
				]

				IEnumerableICollectionILst[
					https://medium.com/@kunaltandon.kt/ienumerable-vs-icollection-vs-ilist-vs-iqueryable-in-c-2101351453db
						IEnumerable{- no crud,no count + Filter,enumerate}
						ICollection
						{
						count O(1), + enumerate,count,filter,crud
							generates Func<T,bool>
						}
						IList{:Ienumerable + :ICollection + insert in the middle ?O(n)}
						IQueryable{
							:ICollection
							generates Expression<Func<T,bool>>
						}
						
					IenumerablevsIlist[
						https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
						https://stackoverflow.com/questions/1072614/should-i-always-return-ienumerablet-instead-of-ilistt
					]
				]
				
				async[
					
					https://www.codingame.com/playgrounds/4240/your-ultimate-async-await-tutorial-in-c/structure-of-async-await
					https://medium.com/quick-code/react-quick-tip-use-class-properties-and-arrow-functions-to-avoid-binding-this-to-methods-29628aca2e25
					https://medium.com/bynder-tech/c-why-you-should-use-configureawait-false-in-your-library-code-d7837dce3d7f
					https://msdn.microsoft.com/en-us/magazine/gg598924.aspx
					
					https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation
					https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
					https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
					https://devblogs.microsoft.com/dotnet/new-features-in-c-7-0/
					https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
					https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm
					https://devblogs.microsoft.com/dotnet/async-in-4-5-worth-the-await/
					https://docs.microsoft.com/en-us/ef/ef6/fundamentals/async
					
					//https://stackoverflow.com/questions/13489065/best-practice-to-call-configureawait-for-all-server-side-code
					ConfigureAwait(false) in classic asp.net in UI context
					not saves thread jumps, saves context request
					
					
					//useable only in parallel request, TPL better
					
					//cannot be tested in .net console
					//test from .net web api UI
					never user ...Async.Result() -> synch way, deadlock in asp.net WEB API
					
					APM
					EAP
					TAP,TPL
				]
			
				]
				
				//package-lock
				https://medium.com/coinmonks/everything-you-wanted-to-know-about-package-lock-json-b81911aa8ab8
		
			
				//actor model
				https://www.brianstorti.com/the-actor-model/
				
				//web ppa recurrent
				https://haacked.com/archive/2011/10/16/the-dangers-of-implementing-recurring-background-tasks-in-asp-net.aspx/
			
				//hexagonal onion architexture
				https://docs.microsoft.com/en-us/dotnet/standard/modern-web-apps-azure-architecture/common-web-application-architectures
					
				DDD
				[
https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/ddd-oriented-microservice				
https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/microservice-domain-model
https://www.infoq.com/articles/ddd-in-practice								
http://www.methodsandtools.com/archive/archive.php?id=97p2
https://en.wikipedia.org/wiki/Domain-driven_design
				]
				
				
				//statsd
				https://www.datadoghq.com/blog/statsd/
				
				//Kubernetes vs mesos vs swarm
				https://www.sumologic.com/devops/kubernetes-vs-mesos-vs-swarm/
				
				//Explainable AI
				https://hackernoon.com/explainable-ai-wont-deliver-here-s-why-6738f54216be
				
				//Algorithm Design and Applications
				http://canvas.projekti.info/ebooks/Algorithm%20Design%20and%20Applications%5BA4%5D.pdf
				
				//vue 
				https://www.youtube.com/watch?v=7YZ5DwlLSt8
				
				//database design
				https://www.youtube.com/watch?v=ztHopE5Wnpc
				
				//C++ basic to advance
				https://www.youtube.com/watch?v=mUQZ1qmKlLY
				
				//Data structures 
				https://en.wikipedia.org/wiki/Data_structure
				https://en.wikipedia.org/wiki/Hash_table
				https://en.wikipedia.org/wiki/Linked_list
				
				//DDD
				http://www.methodsandtools.com/archive/archive.php?id=97p2
				https://en.wikipedia.org/wiki/Domain-driven_design
				//Aggregate root 
				https://www.codeproject.com/Articles/1055514/Aggregate-Root-Pattern-in-Csharp
				https://martinfowler.com/bliki/DDD_Aggregate.html
				
				//book
				//Rabbit mq
				http://books.tarsoit.com/RabbitMQ%20Cookbook.pdf
				//best practices 
				https://www.cloudamqp.com/blog/2017-12-29-part1-rabbitmq-best-practice.html
				
				//inter process comunication
				https://en.wikipedia.org/wiki/Inter-process_communication
				//data distribution service
				https://en.wikipedia.org/wiki/Data_Distribution_Service
				
				mesasging system 
				rabbitmq
				https://www.rabbitmq.com/tutorials/tutorial-one-dotnet.html
				
				Caching
				reddis
				https://redis.io/topics/data-types-intro
				
				TPL
				https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/task-parallel-library-tpl
				
				https://en.wikipedia.org/wiki/Turing_completeness
				https://en.wikipedia.org/wiki/Hardware_random_number_generator
				https://en.wikipedia.org/wiki/Pseudorandom_number_generator
				https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator
				https://en.wikipedia.org/wiki/One-time_pad
				https://en.wikipedia.org/wiki/Strong_cryptography

				//FP vs OOP
				https://medium.com/@sho.miyata.1/the-object-oriented-programming-vs-functional-programming-debate-in-a-beginner-friendly-nutshell-24fb6f8625cc
				
				
				
				//ML
				https://towardsdatascience.com/how-not-to-use-machine-learning-for-time-series-forecasting-avoiding-the-pitfalls-19f9d7adf424
				http://www.statsoft.com/Textbook/Time-Series-Analysis
				
				//Feature toggling
				https://martinfowler.com/articles/feature-toggles.html
				//CI 
				https://en.wikipedia.org/wiki/Continuous_integration
				https://www.gocd.org/2017/05/16/its-not-CI-its-CI-theatre.html
				https://paulhammant.com/blog/branch_by_abstraction
				https://zeroturnaround.com/rebellabs/things-to-consider-when-featuring-branching-with-continuous-integration/
				
				//Enterprise service bus
				https://en.wikipedia.org/wiki/Enterprise_service_bus
				
				//ORM Ibaits vs hibernate
				https://www.javaworld.com/article/2077875/open-source-tools/ibatis--hibernate--and-jpa--which-is-right-for-you-.html?page=5
				
				//insects
				https://en.wikipedia.org/wiki/Fairyfly
				
				//service architecture
				https://en.wikipedia.org/wiki/Microservices
				https://en.wikipedia.org/wiki/Service-oriented_architecture
				
				//sharing code
				http://www.ben-morris.com/sharing-libraries-between-net-core-and-net-framework-applications/
				http://www.ben-morris.com/migrating-net-framework-applications-to-net-core/
				https://docs.microsoft.com/en-us/dotnet/core/tools/extensibility
				https://docs.microsoft.com/en-us/dotnet/core/tools/extensibility#per-project-based-extensibility
				https://docs.microsoft.com/en-us/dotnet/core/deploying/
				https://docs.microsoft.com/en-us/dotnet/standard/net-standard
				https://programmingwithmosh.com/csharp/should-you-split-your-asp-net-mvc-project-into-multiple-projects/
				https://www.infoq.com/news/2017/10/dotnet-core-standard-difference
				
				//media
				https://www.techwalla.com/
				
				//economy
				https://www.bloomberg.com/news/articles/2018-06-29/trump-s-trade-war-challenge-figuring-out-who-s-the-enemy
				https://www.bloomberg.com/news/articles/2018-06-30/bitcoin-bloodbath-nears-dot-com-levels-as-many-tokens-go-to-zero
				https://www.bloomberg.com/news/features/2018-06-26/how-to-steal-50-million-bees
				https://www.bloomberg.com/news/articles/2018-06-29/ivory-coast-to-start-destroying-cocoa-crops-in-protected-forests
				https://en.wikipedia.org/wiki/Ivory_Coast
						
				//literature 
				https://meduza.io/feature/2018/06/30/dva-romana-o-pchelah-antiutopiya-iz-zhizni-nasekomyh-i-saga-pro-ekologiyu
				
				
				
				
				//Full-stack roadmap 2018
				https://codeburst.io/the-2018-web-developer-roadmap-826b1b806e8d
				//Full-stack guide 2018
				https://codeburst.io/the-ultimate-guide-to-learning-full-stack-web-development-in-6-months-for-30-72b3854a7458
				
				//aws deploy
				https://codeburst.io/deploy-angular-2-node-js-website-using-aws-1ac169d6bbf
				
			
				
				//rxjs
				https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
				https://netbasal.com/event-emitters-in-angular-13e84ee8d28c
				https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
				
				
				
				
				//mongo 
				
				//refs 
				//drivers
				https://docs.mongodb.com/manual/applications/drivers/
				
				//docs 
				
				//documents 
				https://docs.mongodb.com/
				//manual
				https://docs.mongodb.com/manual/
				//shell command 
				https://docs.mongodb.com/manual/tutorial/write-scripts-for-the-mongo-shell/#mongo-shell-new-connections
				//dirver API
				http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html?_ga=2.178965415.24837985.1529065256-2048342004.1529065256#insertMany		
				//node.js driver 
				http://mongodb.github.io/node-mongodb-native/2.2/

				
				
				//Machine learning
				
				//overall 
				https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%88%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5
				
				//tutorial
				http://neuralnetworksanddeeplearning.com/
				//c++
				https://github.com/GarethRichards/Machine-Learning-CPP/blob/master/README.md
				
				//libs 		
				http://dlib.net/
				https://www.mlpack.org/about.html
				
				//frameworks
				http://caffe.berkeleyvision.org/tutorial/
				https://www.tensorflow.org/
				
				//electricity
				https://www.youtube.com/watch?v=TQUsGnJ51ig
				https://www.youtube.com/watch?v=AL10qGOEPYI
				
				//futures
				https://ru.investing.com/commodities/aluminum
				https://ru.investing.com/commodities/us-corn
				https://ru.investing.com/commodities/us-wheat
				https://ru.investing.com/commodities/sorghum-future
				
				//news
				https://www.cnbc.com/world/?region=world
				https://www.investopedia.com/
				http://www.kitco.com/
				
				//oil
				https://en.wikipedia.org/wiki/List_of_countries_by_proven_oil_reserves
				https://en.wikipedia.org/wiki/Proven_reserves
				https://en.wikipedia.org/wiki/Oil_reserves
				https://en.wikipedia.org/wiki/Petroleum
				
				//db
				https://en.wikipedia.org/wiki/Isolation_(database_systems)#Phantom_reads
				https://en.wikipedia.org/wiki/Isolation_(database_systems)
				https://en.wikipedia.org/wiki/Database_transaction		
				https://docs.oracle.com/cd/B13789_01/server.101/b10743/consist.htm#i5702		
				
			

			
			//MS repository
			https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design
			
			//graph QL
			https://graphql-dotnet.github.io/docs/getting-started/introduction
			
			//graph ql to EF
			https://hackernoon.com/how-to-implement-generic-queries-by-combining-entityframework-core-and-graphql-net-77ac8faf4a22
			
			//cached repository
			https://ardalis.com/introducing-the-cachedrepository-pattern
			
			https://en.wikipedia.org/wiki/Isolation_(database_systems)
			https://en.wikipedia.org/wiki/Server_Message_Block#Opportunistic_locking
			https://microservices.io/patterns/data/event-sourcing.html
			https://microservices.io/patterns/apigateway.html
			https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs
			
			https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design
			https://docs.microsoft.com/en-us/previous-versions/msp-n-p/dn589800(v=pandp.10)
			https://blogs.msdn.microsoft.com/maarten_mullender/2004/07/23/crud-only-when-you-can-afford-it-revisited/
			https://en.wikipedia.org/wiki/Persistent_data_structure
			https://www.thereformedprogrammer.net/using-net-generics-with-a-type-derived-at-runtime/
			
			http://selfdocumenting.net/a-quick-mongodb-repository/
			http://selfdocumenting.net/bootstrap-your-app/
			
			//design MS on aws
			https://www.youtube.com/watch?v=Ijs55IA8DIk
			//mastering chaos
			https://www.youtube.com/watch?v=CZ3wIuvmHeM			
			
			//EF data annotations
			https://www.learnentityframeworkcore.com/configuration/data-annotation-attributes
			
			https://martinfowler.com/articles/injection.html			
			
			https://en.wikipedia.org/wiki/Genetic_programming
			http://www.genetic-programming.org/
			https://en.wikipedia.org/wiki/Metaprogramming
			https://en.wikipedia.org/wiki/Self-modifying_code
			https://en.wikipedia.org/wiki/Polymorphic_code
			
			https://tomassetti.me/code-generation/
			
			//code generation in c# 
			https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/using-the-codedom
			
			https://en.wikipedia.org/wiki/Timeline_of_computer_viruses_and_worms#1987
			https://en.wikipedia.org/wiki/1260_(computer_virus)
			https://en.wikipedia.org/wiki/Virut
			
			https://en.wikipedia.org/wiki/Attribute-based_access_control
			
			https://en.wikipedia.org/wiki/OAuth
			
			//datastructures
			https://hackernoon.com/10-data-structure-algorithms-and-programming-courses-to-crack-any-coding-interview-e1c50b30b927
			//auth storing strategy
			https://medium.com/@mehanix/lets-talk-security-salted-password-hashing-in-c-5460be5c3aae
			//mongodb intoduction
			https://www.codementor.io/pmbanugo/working-with-mongodb-in-net-1-basics-g4frivcvz
			//selflearning devs creer guide
			https://medium.freecodecamp.org/genuinely-useful-career-resources-for-self-taught-developers-8e679cec25ab
			//facebook memkaches
			https://medium.com/@shagun/scaling-memcache-at-facebook-1ba77d71c082
			
			
			guides[
				
				//ms sql drop db from cursor
				https://dba.stackexchange.com/questions/2387/sql-server-cannot-drop-database-dbname-because-it-is-currently-in-use-but-n
				
				autofac[
				
					//from main register
					//https://www.youtube.com/watch?v=mCUNrRtVVWY
					public static IContainer (){
						public static Configure(){
							var builder = new ContainerBuilder();
							
							return builder.Build();
						}
					}
					static void Main(string[] args){
						var container = ContainerConfig.Configure();
					}
					
					//allways resolve from LifeTimeScope as it is disposable
					using (var scope = container.BeginLifetimeScope())
					{
						var go = scope.Resolve<Ii.IGo>();
						go.GO();
					}

					//AutoActivate
					//call action method from base constructor
					builder.RegisterType<MongoCheck>().As<IGo>().AutoActivate();		

				]
				
			]
		
			EF[
				//Repository pattern
				https://medium.com/@hoagsie/youre-all-doing-entity-framework-wrong-ea0c40e20502
							
				//Nuget package manager console
				https://docs.microsoft.com/en-us/nuget/tools/package-manager-console
				
				//expression trees
				https://blog.marcgravell.com/2008/10/express-yourself.html


				REPO[
					using System;
					using System.Collections.Generic;
					using System.Data.Entity;
					using System.Linq;
					using System.Linq.Expressions;
					using System.Threading;
					using System.Threading.Tasks;
					using IF.MoscowVideo.Infrastructure.DAL.Models;
					using IF.MoscowVideo.Infrastructure.Extensions;
					using IF.MoscowVideo.Infrastructure.Extensions.ObjectExtensions;
					using IF.MoscowVideo.Infrastructure.Logs.Models;
					using IF.MoscowVideo.Infrastructure.Models;

					namespace IF.MoscowVideo.Common.Entity
					{
						/// <summary>
						/// Базовый класс репозитория.
						/// </summary>
						/// <typeparam name="T">Тип сущности.</typeparam>
						/// <typeparam name="TInterface">Интерфейс сущности.</typeparam>
						public abstract class CrudRepositoryBase<T, TInterface> : RepositoryBase<TInterface> where T : class, TInterface
						{
							/// <summary>
							/// Ctor.
							/// </summary>
							protected CrudRepositoryBase(DbContext objectContext)
								: base(objectContext)
							{
							}

							public override IQueryable<TInterface> GetAll()
							{
								return ObjectContext.Set<T>();
							}

							/// <summary>
							/// Создать новый экземпляр сущности.
							/// </summary>
							public virtual TInterface New()
							{
								return _objectContext.Set<T>().Create<T>();
							}

							/// <summary>
							/// Создать новый экземпляр сущности.
							/// </summary>
							public TOut New<TIn, TOut>()
								where TIn : class, TOut
							{
								return _objectContext.Set<TIn>().Create<TIn>();
							}

							/// <summary>
							/// Добавить экземпляр в набор.
							/// </summary>
							/// <param name="entity">Сущность для добавления.</param>
							public virtual void Add(IEnumerable<TInterface> entity)
							{
								_objectContext.Set<T>().AddRange(entity.Cast<T>());
							}

							/// <summary>
							/// Добавить экземпляр в набор.
							/// </summary>
							/// <param name="entity">Сущность для добавления.</param>
							public virtual void Add(TInterface entity)
							{
								_objectContext.Set<T>().Add((T)entity);
							}

							/// <summary>
							/// Обновить экремпляр в наборе.
							/// </summary>
							/// <param name="entity">Сущность для обновления.</param>
							[Obsolete]
							public virtual void Update(TInterface entity)
							{
								var ent = (T)entity;

								if (!Exists(ent))
								{
									_objectContext.Set<T>().Attach(ent);
								}
							}

							/// <summary>
							/// Удалить экземпляр сущности из набора.
							/// </summary>
							/// <param name="entity">Сущность для удаления.</param>
							public virtual void Delete(TInterface entity)
							{
								_objectContext.Set<T>().Remove((T)entity);
							}

							/// <summary>
							/// Удалить экземпляр сущности из набора.
							/// </summary>
							/// <param name="entity">Сущность для удаления.</param>
							public virtual void Delete(IEnumerable<TInterface> entity)
							{
								_objectContext.Set<T>().RemoveRange(entity.Cast<T>());
							}

							public virtual QueryResult<TInterface> Get(Query<TInterface> query)
							{
								var result = Get(query.Filter);
								return Paginate(result, query);
							}

							public virtual IQueryable<TInterface> Get(Expression<Func<TInterface, bool>> filter)
							{
								var result = _objectContext.Set<T>().AsQueryable();
								if (filter != null)
									result = result.Where(filter.ToConcreteType<T, TInterface>());
								return result;
							}

							/// <summary>
							/// Сохранить изменения.
							/// </summary>
							public virtual void SaveChanges()
							{
								_objectContext.SaveChanges();
							}

							public virtual async Task SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken))
							{
								await _objectContext.SaveChangesAsync(cancellationToken).ConfigureAwait(false);
							}

							protected virtual bool Exists(T ent)
							{
								try
								{
									return _objectContext.Set<T>().Local.Any(e => e == ent);
								}
								catch (Exception)
								{
									return true;
								}
							}

							protected static QueryResult<TInterface> Paginate(IQueryable<TInterface> entities, Query<TInterface> query)
							{
								var totalCount = entities.Count();

								if (query.Ordering != null)
									entities = query.Ordering.Apply(entities);

								if (query.Paging != null)
									entities = entities.Skip(query.Paging.CurrentPage * query.Paging.PageSize).Take(query.Paging.PageSize);

								return new QueryResult<TInterface>
								{
									Items = entities,
									TotalCount = totalCount
								};
							}

							public Dictionary<TE, Dictionary<string, string>> GetEntityPreviousValues<TE>(TE entity = null, string[] fieldNames = null)
							  where TE : class
							{
								var entitiesPreviousValues = new Dictionary<TE, Dictionary<string, string>>();
								var entrieChanges = GetEntrieChanges(entity);

								foreach (var camChanges in entrieChanges)
								{
									var entityPreviousValues = new Dictionary<string, string>();

									entitiesPreviousValues.Add(camChanges.Entity, entityPreviousValues);

									if (camChanges.State != EntityState.Modified)
										continue;

									if (fieldNames == null)
									{
										fieldNames = camChanges.Entity.ObjectToDictionary().Keys.ToArray();
									}

									foreach (string fieldName in fieldNames)
									{
										string original = camChanges.OriginalValues.PropertyNames.Contains(fieldName) ? camChanges.OriginalValues[fieldName]?.ToString() : "";
										string actual = camChanges.CurrentValues.PropertyNames.Contains(fieldName) ? camChanges.CurrentValues[fieldName]?.ToString() : "";

										if (original != actual && original != null && actual != null)
										{
											entityPreviousValues.Add(fieldName, original);
										}
									}
								}

								return entitiesPreviousValues.Where(h=>h.Value.Any()).ToDictionary(k=>k.Key, v=>v.Value);
							}
						}
					}
				]			
			
				
				
			reponew[
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Data.Entity;
	using System.Linq.Expressions;

	namespace HP.ArchiveBalancingService.DAL.RepositoryNew
	{
		public interface IRepositoryNew<K, T> where T : class
		{
			void BindContext(DbContext context);
			DbContext GetContext();

			T Add(T item);
			IQueryable<T> GetALL();
			IQueryable<T> GetTOP10();
			T GetByID(K id_);
			void AddCollection(List<T> items);
			void RemoveCollection(List<K> ids);
			void RemoveByID(K id_);
			IQueryable<T> GetByFilter(Expression<Func<T, bool>> expession);


			Expression<Func<T, bool>> WhereOR(Expression<Func<T, bool>> expression);
			Expression<Func<T, bool>> WhereAndAlso(Expression<Func<T, bool>> expression);
			IQueryable<T> GetByChainedFilter();


			T Update(T item, K id);
			void DeleteWhere(Expression<Func<T, bool>> exp_);
			IQueryable<T> SelectWhere(Expression<Func<T, bool>> exp_);
			IQueryable<T> Include<C>(Expression<Func<T, C>> exp_);
			void Save();
			bool IsUpdated(T item);
			void Dispose();
		}

	}


	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Data.Entity;
	using HP.ArchiveBalancing.Common;

	namespace HP.ArchiveBalancingService.DAL.RepositoryNew
	{
	   
		public class RepositoryNew<K,T> : IRepositoryNew<K,T> where T : class
		{
			bool disposed = false;

			public DbContext _context;

			Expression<Func<T, bool>> chainResult = null;

			public RepositoryNew()
			{

			}
			public RepositoryNew(DbContext context_)
			{
				this._context = context_;
			}
		   
			public DbContext GetContext()
			{
				DbContext result = null;
				if (this._context != null)
				{
					result = this._context;
				}
				return result;
			}

			public void BindContext(DbContext context)
			{
				this._context = context;
			}
			public T Add(T item)
			{           
				try
				{
					this._context.Set<T>().Add(item);
				}
				catch (Exception e)
				{
					item = null;
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
				return item;
			}
			public IQueryable<T> GetALL()
			{
				IQueryable<T> result = null;
				result = from s in this._context.Set<T>() select s;
				return result;
			}
			public IQueryable<T> GetTOP10()
			{
				IQueryable<T> result = null;
				try
				{
					result = (from s in this._context.Set<T>() select s).Take(10);
				}catch(Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
				return result;
			}
			public T GetByID(K id_)
			{
				T result = null;
					result = this._context.Set<T>().Find(id_);
				return result;
			}
			public IQueryable<T> GetByFilter(Expression<Func<T, bool>> expession)
			{
				IQueryable<T> result = null;
				result = from s in this._context.Set<T>().Where(expession) select s;
				return result;
			}
			public IQueryable<T> GetByChainedFilter()
			{
				IQueryable<T> result = null;
				result = from s in this._context.Set<T>().Where(this.chainResult) select s;
				return result;
			}

			public Expression<Func<T, bool>> WhereOR(Expression<Func<T, bool>> expression)
			{
				if (chainResult == null)
				{
					chainResult = expression;
				}
				else
				{
					chainResult = chainResult.Or(expression);
				}
				return chainResult;
			}
			public Expression<Func<T, bool>> WhereAndAlso(Expression<Func<T, bool>> expression)
			{
				if (chainResult == null)
				{
					chainResult = expression;
				}
				else
				{
					chainResult = chainResult.AndAlso(expression);
				}
				return chainResult;
			}

			public void AddCollection(List<T> items)
			{
				this._context.Set<T>().AddRange(items);
			}
			
			public void RemoveCollection(List<K> ids)
			{
				try
				{
					foreach (K id in ids)
					{
						this.RemoveByID(id);
					}
				}
				catch (Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
			}

			public void RemoveByID(K id_)
			{
				try
				{
					T item = this._context.Set<T>().Find(id_);
					if (item != null)
					{
						this._context.Set<T>().Remove(item);
					}
				}
				catch (Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
			}
		  
			public T Update(T item, K id)
			{
				T toUpdate = null;
				try
				{

					toUpdate = this._context.Set<T>().Find(id);
					this._context.Entry(toUpdate).CurrentValues.SetValues(item);                
				}
				catch (Exception e)
				{
					toUpdate = null;
					System.Diagnostics.Trace.WriteLine(e.Message);
				}

				return toUpdate;
			}
			public bool IsUpdated(T item)
			{
				return this._context.Entry(item).State == EntityState.Modified;
			}  
	  

			public void Save()
			{
				try
				{
					this._context.SaveChanges();
				}catch(Exception e)
				{
					
				}
			}

			public IQueryable<T> SelectWhere(Expression<Func<T,bool>> exp_)
			{
				IQueryable<T> result = null;
					result = from s in this._context.Set<T>().Where(exp_) select s;
				return result;
			}
			public void DeleteWhere(Expression<Func<T, bool>> exp_)
			{        
				this._context.Set<T>().RemoveRange(this.SelectWhere(exp_));           
			}

			public IQueryable<T> Include<C>(Expression<Func<T, C>> exp_)
			{
				IQueryable<T> res = null;
				try
				{
					res = this._context.Set<T>().Include(exp_);
				}catch(Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
				return res;
			}

			protected virtual void Dispose(bool value)
			{
				if (!this.disposed)
				{
					if (value)
					{
						this._context.Dispose();

					}
				}
				this.disposed = true;
			}
			public void Dispose()
			{
				Dispose(true);
				GC.SuppressFinalize(this);
			}

		}

	}
	]	
	
			crudRepo[
			using System;
	using System.Collections.Generic;
	using System.Data.Entity;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Threading;
	using System.Threading.Tasks;
	using IF.MoscowVideo.Infrastructure.DAL.Models;
	using IF.MoscowVideo.Infrastructure.Extensions;
	using IF.MoscowVideo.Infrastructure.Extensions.ObjectExtensions;
	using IF.MoscowVideo.Infrastructure.Logs.Models;
	using IF.MoscowVideo.Infrastructure.Models;

	namespace IF.MoscowVideo.Common.Entity
	{
		/// <summary>
		/// Базовый класс репозитория.
		/// </summary>
		/// <typeparam name="T">Тип сущности.</typeparam>
		/// <typeparam name="TInterface">Интерфейс сущности.</typeparam>
		public abstract class CrudRepositoryBase<T, TInterface> : RepositoryBase<TInterface> where T : class, TInterface
		{
			/// <summary>
			/// Ctor.
			/// </summary>
			protected CrudRepositoryBase(DbContext objectContext)
				: base(objectContext)
			{
			}

			public override IQueryable<TInterface> GetAll()
			{
				return ObjectContext.Set<T>();
			}

			/// <summary>
			/// Создать новый экземпляр сущности.
			/// </summary>
			public virtual TInterface New()
			{
				return _objectContext.Set<T>().Create<T>();
			}

			/// <summary>
			/// Создать новый экземпляр сущности.
			/// </summary>
			public TOut New<TIn, TOut>()
				where TIn : class, TOut
			{
				return _objectContext.Set<TIn>().Create<TIn>();
			}

			/// <summary>
			/// Добавить экземпляр в набор.
			/// </summary>
			/// <param name="entity">Сущность для добавления.</param>
			public virtual void Add(IEnumerable<TInterface> entity)
			{
				_objectContext.Set<T>().AddRange(entity.Cast<T>());
			}

			/// <summary>
			/// Добавить экземпляр в набор.
			/// </summary>
			/// <param name="entity">Сущность для добавления.</param>
			public virtual void Add(TInterface entity)
			{
				_objectContext.Set<T>().Add((T)entity);
			}

			/// <summary>
			/// Обновить экремпляр в наборе.
			/// </summary>
			/// <param name="entity">Сущность для обновления.</param>
			[Obsolete]
			public virtual void Update(TInterface entity)
			{
				var ent = (T)entity;

				if (!Exists(ent))
				{
					_objectContext.Set<T>().Attach(ent);
				}
			}

			/// <summary>
			/// Удалить экземпляр сущности из набора.
			/// </summary>
			/// <param name="entity">Сущность для удаления.</param>
			public virtual void Delete(TInterface entity)
			{
				_objectContext.Set<T>().Remove((T)entity);
			}

			/// <summary>
			/// Удалить экземпляр сущности из набора.
			/// </summary>
			/// <param name="entity">Сущность для удаления.</param>
			public virtual void Delete(IEnumerable<TInterface> entity)
			{
				_objectContext.Set<T>().RemoveRange(entity.Cast<T>());
			}

			public virtual QueryResult<TInterface> Get(Query<TInterface> query)
			{
				var result = Get(query.Filter);
				return Paginate(result, query);
			}

			public virtual IQueryable<TInterface> Get(Expression<Func<TInterface, bool>> filter)
			{
				var result = _objectContext.Set<T>().AsQueryable();
				if (filter != null)
					result = result.Where(filter.ToConcreteType<T, TInterface>());
				return result;
			}

			/// <summary>
			/// Сохранить изменения.
			/// </summary>
			public virtual void SaveChanges()
			{
				_objectContext.SaveChanges();
			}

			public virtual async Task SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken))
			{
				await _objectContext.SaveChangesAsync(cancellationToken).ConfigureAwait(false);
			}

			protected virtual bool Exists(T ent)
			{
				try
				{
					return _objectContext.Set<T>().Local.Any(e => e == ent);
				}
				catch (Exception)
				{
					return true;
				}
			}

			protected static QueryResult<TInterface> Paginate(IQueryable<TInterface> entities, Query<TInterface> query)
			{
				var totalCount = entities.Count();

				if (query.Ordering != null)
					entities = query.Ordering.Apply(entities);

				if (query.Paging != null)
					entities = entities.Skip(query.Paging.CurrentPage * query.Paging.PageSize).Take(query.Paging.PageSize);

				return new QueryResult<TInterface>
				{
					Items = entities,
					TotalCount = totalCount
				};
			}

			public Dictionary<TE, Dictionary<string, string>> GetEntityPreviousValues<TE>(TE entity = null, string[] fieldNames = null)
			  where TE : class
			{
				var entitiesPreviousValues = new Dictionary<TE, Dictionary<string, string>>();
				var entrieChanges = GetEntrieChanges(entity);

				foreach (var camChanges in entrieChanges)
				{
					var entityPreviousValues = new Dictionary<string, string>();

					entitiesPreviousValues.Add(camChanges.Entity, entityPreviousValues);

					if (camChanges.State != EntityState.Modified)
						continue;

					if (fieldNames == null)
					{
						fieldNames = camChanges.Entity.ObjectToDictionary().Keys.ToArray();
					}

					foreach (string fieldName in fieldNames)
					{
						string original = camChanges.OriginalValues.PropertyNames.Contains(fieldName) ? camChanges.OriginalValues[fieldName]?.ToString() : "";
						string actual = camChanges.CurrentValues.PropertyNames.Contains(fieldName) ? camChanges.CurrentValues[fieldName]?.ToString() : "";

						if (original != actual && original != null && actual != null)
						{
							entityPreviousValues.Add(fieldName, original);
						}
					}
				}

				return entitiesPreviousValues.Where(h=>h.Value.Any()).ToDictionary(k=>k.Key, v=>v.Value);
			}
		}
	}
			]
			
			
			]
			
			hashs[
				http://eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#fnv
			]
			
			vs[
				//debugging source code
				https://blogs.msdn.microsoft.com/mcsuksoldev/2010/09/09/debugging-the-net-framework-source-code/
			]
			
			
			architecture_patterns[
				https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013
			]
			quartz[
				https://jayvilalta.com/blog/2014/06/04/understanding-the-disallowconcurrentexecution-job-attribute/
			]		
			liblist[
				https://topshelf.readthedocs.io/en/latest/#
				https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=2ahUKEwjfypWdjZreAhWniKYKHTDBDnAQFjABegQICBAB&url=https%3A%2F%2Farchive.codeplex.com%2F%3Fp%3Demitmapper&usg=AOvVaw0_lHfeypLG9ciEL5wA0PCz				
			]
			
			mapping[
				http://geekswithblogs.net/mrsteve/archive/2016/12/28/object-mapper-performance-comparison-allowpartiallytrustedcallers.aspx
			]
			
			emitmapper[
				
				https://blog.zwezdin.com/2013/emitmapper/
				
				//fake return with arguments 
				scroogeFake.GetSubtitlesStatus(Arg.Any<Guid>())
				.Returns<ScroogeClient.Responsess.ArchiveSubtitlesStatus>(archiveStatusInProgress);

				//emittmapper IGNORE
				protected override DefaultMapConfig Config
				{
				get
				{
					return base.Config
						.IgnoreMembers<DAL.Entities.ArchiveTask, BLL.Models.Subtitles.ArchiveTaskBO>(new[] {
							"Events"
						});
				}
				}

				//emittmapper CONSTRUCTSUING
				protected override DefaultMapConfig Config
				{
					get
					{
						return base.Config
							.ConstructBy<ArchiveTaskInfo>(
							() => {
									return new ArchiveTaskInfo() {

									};
								}
							);

							//.IgnoreMembers<ArchiveOrderInfo, ArchiveTaskInfo>(new[] {"Events"});
					}
				}
			]
			
			read[
				
				//web ppa recurrent
				https://haacked.com/archive/2011/10/16/the-dangers-of-implementing-recurring-background-tasks-in-asp-net.aspx/
			]
			
		
			//plastic types
			bakelit,pvc,acrylic,nylon,bpa,dehp


			//data sctructures
			https://en.wikipedia.org/wiki/Discrete_mathematics
			https://en.wikipedia.org/wiki/Data_structure
			https://en.wikipedia.org/wiki/Linked_list
			https://en.wikipedia.org/wiki/Graph_(abstract_data_type)
			https://en.wikipedia.org/wiki/Binary_tree
			
			
			mongodbConcurency[
				Applications must ensure that only one thread at a time executes these operations in a client session.
				https://docs.mongodb.com/manual/core/causal-consistency-read-write-concerns/
				https://docs.mongodb.com/manual/faq/concurrency/
			]
			
			container[
				//container orchestration framework
				https://kubernetes.io/
				//alernate 
				Kubernetes,Mesos,Docker Swarm,Nomad,Mesosphere DC/OS
			]
			serviceBus[
				https://buoyant.io
				//sidecar
				https://linkerd.io/
			]
			service_mesh[
				https://istio.io/
			]
			msa[
				https://www.nginx.com/blog/nginmesh-nginx-as-a-proxy-in-an-istio-service-mesh/
				https://www.nginx.com/blog/what-is-a-service-mesh/
				https://www.nginx.com/blog/introducing-the-nginx-microservices-reference-architecture/
				https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
			]
			patterns[
				decomposition[
					sidecar proxy //sideckick
					https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar
					//ambassador
					https://docs.microsoft.com/en-us/azure/architecture/patterns/ambassador
					//circuit breaker
					https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
					https://www.nginx.com/blog/microservices-reference-architecture-nginx-circuit-breaker-pattern/
				]
			]
		
			//msa principles 
			https://www.youtube.com/watch?v=PFQnNFe27kU
			//GOT Microservices 
			https://www.youtube.com/watch?v=wgdBVIX9ifA
			//mastering chaos
			https://www.youtube.com/watch?v=CZ3wIuvmHeM
			//msa
			https://en.wikipedia.org/wiki/Actor_model
			//API GATEWAY
			https://microservices.io/patterns/apigateway.html
			//AWS service discovery
			https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/service-discovery.html
			
			//msa overall
			https://microservices.io/index.html
			https://docs.microsoft.com/en-us/azure/architecture/antipatterns/chatty-io/
			//Introduction into Microservices
			https://specify.io/concepts/microservices
			//akka
			https://doc.akka.io/docs/akka/current/guide/actors-motivation.html
			
			//aws services
			https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/service-discovery.html
			
			//synchronization
			https://en.wikipedia.org/wiki/Dining_philosophers_problem
			https://en.wikipedia.org/wiki/Semaphore_(programming)
			https://en.wikipedia.org/wiki/Monitor_(synchronization)
			https://en.wikipedia.org/wiki/Arbiter_(electronics)
			https://en.wikipedia.org/wiki/Observer_pattern
			
		
			//consensus algorithms
			https://en.wikipedia.org/wiki/Raft_(computer_science)
			https://en.wikipedia.org/wiki/Paxos_(computer_science)
			
			https://en.wikipedia.org/wiki/Consistent_hashing
			
			//closure 
			https://en.wikipedia.org/wiki/Closure_(computer_programming)
			
			//aspect oriented
			https://en.wikipedia.org/wiki/Aspect-oriented_programming
			
			//profilers
			http://www.getcodetrack.com/releases.html#latest
			//profiling
			http://www.codekicks.com/2006/08/net-profiling-api-tutorial.html
			
			//interseptor
			https://github.com/castleproject/Windsor/blob/master/docs/orphan-introduction-to-aop-with-castle.md
			//il weavers 
			https://www.codeproject.com/Articles/1223461/AOP-Method-and-property-interception-in-Csharp
			
			//path finding
			https://en.wikipedia.org/wiki/Path_tracing
			
			//algorithms
			https://www.coursera.org/specializations/data-structures-algorithms
			https://en.wikipedia.org/wiki/Quicksort
			http://anh.cs.luc.edu/170/notes/CSharpHtml/sorting.html
			https://en.wikipedia.org/wiki/Graph_traversal
			
			//c#
			//profiling
			https://stackify.com/three-types-of-net-profilers/		
			//compile
			https://msdn.microsoft.com/en-us/library/bb384838.aspx
			//observable 
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern
			//rx
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern

			//Oberver
			Observer : Iobservable<T> t-> data send  from provider to observers
			provider,subject,observable -> 
				List with references to observer implements subscribed
				
			observer
			.OnNext
			.OnError
			.OnComplete

			//freelance
			https://www.upwork.com/

			//films
			https://meduza.io/slides/pyat-glavnyh-filmov-dokumentalista-aleksandra-rastorgueva-kotorye-mozhno-posmotret-onlayn-o-kurortnikah-materyah-odinochkah-soldatah-v-chechne-i-oppozitsii				
			
			//distrib arch
			https://www.youtube.com/watch?v=tpspO9K28PM
			https://www.youtube.com/watch?v=5o-kdjv7FD0
			
			https://www.hackerrank.com/signup?h_r=community_home&h_v=sign_up&h_l=header_right			
				
			https://en.wikipedia.org/wiki/Service-oriented_architecture
			https://en.wikipedia.org/wiki/Event-driven_architecture
			
			https://iss.moex.com/iss/history/engines/stock/markets/shares/boardgroups/57/securities/ROSN.jsonp?lang=RU&from=2017-01-01&till=2017-03-30&start=0&iss.meta=off&iss.json=extended&callback=angular.callbacks._3&sort_order=TRADEDATE&sort_order_desc=desc&limit=100
			
			//MICEX Daiy
			https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities/ROSN.jsonp?callback=iss_jsonp_2a341379c8d83f89503665c3c81af142b2595fbc&iss.meta=off&iss.only=securities%2Cmarketdata&lang=ru&_=1532980356294

			//micex candles 
			https://iss.moex.com/cs/engines/stock/markets/shares/boardgroups/57/securities/ROSN.hs?callback=jQuery111205684894979026105_1532981497348&s1.type=candles&interval=24&candles=500&indicators=&_=1532981497426
			https://iss.moex.com/cs/engines/stock/markets/shares/boardgroups/57/securities/LKOH.hs?s1.type=candles&interval=24&candles=50000

			//MICEX dev
			https://www.moex.com/a2193

			//oil
			ROSN
			LKOH
			RNHS
			SNGS
			SIBN
			TATN
			RNFT
			BANE
			
			//FIN
			https://banyanhill.com/
			
			//soft 
			//decompilers 
			https://www.pnfsoftware.com/

			//CFTC
			https://www.cftc.gov/
			
			//CSS animated
			http://www.transformicons.com/
			//css tranlate
			https://codepen.io/kattixie/pen/ezzGKY
			https://codepen.io/adamaoc/pen/PwevMj
			//svg
			https://www.sitepoint.com/add-svg-to-web-page/
			https://www.w3.org/wiki/SVG_Links
			https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform
			https://developer.mozilla.org/kab/docs/Web/SVG
			https://teropa.info/blog/2016/12/12/graphics-in-angular-2.html
			//colors
			https://www.materialpalette.com/colors
			//styles
			https://alligator.io/angular/style-binding-ngstyle-angular/
			
			
			//fluid grids
			https://alistapart.com/article/fluidgrids
			//Responsive Web Design 
			https://www.smashingmagazine.com/2011/07/responsive-web-design-techniques-tools-and-design-strategies/
			//https://www.smashingmagazine.com/2011/01/guidelines-for-responsive-web-design/
			https://www.smashingmagazine.com/2011/01/guidelines-for-responsive-web-design/
			
			
			//gradient
			https://cssgradient.io/		
			
			https://sps.northwestern.edu/advanced-graduate-certificate/
		
			https://www.3ds.com/ru/
			
			//colorgen
			https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/
			
			//webGL
			https://www.khronos.org/webgl/
			https://en.wikipedia.org/wiki/WebGL
					
			
			https://threejs.org/
			https://en.wikipedia.org/wiki/Three.js
			
			//whitestorm
			https://whs.io/
			
			https://clara.io/
			
			
			//webgl front examples
			https://hajimewatanabe.jp/portfolio/
			
			//js
			//custom json converter
			http://blogs.microsoft.co.il/miziel/2014/09/23/custom-web-api-json-converter-single-property/
			
			//angular 
			//mat design items
			http://google.github.io/material-design-icons/#icon-font-for-the-web
			//angular svg
			https://teropa.info/blog/2016/12/12/graphics-in-angular-2.html
			//routing
			https://www.concretepage.com/angular-2/angular-2-routing-and-navigation-example
			//routing example
			https://stackblitz.com/angular/akeyovpqapx?file=src%2Fapp%2Fapp-routing.module.ts
			
			//graph db
			https://ontotext.com/free-graphdb-download/?utm_source=dbengines&utm_medium=banner&utm_campaign=graphdb%20free#1507639100937-90364ff6-654d
			
		
			//Managing state
			https://blog.nrwl.io/managing-state-in-angular-applications-22b75ef5625f
			tps://blog.oasisdigital.com/2016/managing-state-angular-2/
			https://medium.com/front-end-developers/managing-state-in-angular-2-using-rxjs-b849d6bbd5a5
			//centralized state mangement
			https://blog.oasisdigital.com/2016/angular-2-elm-redux-architecture/
			//AsyncPipe
			https://codecraft.tv/courses/angular/pipes/async-pipe/#_asyncpipe_with_promises	
			//routing 
			https://codecraft.tv/courses/angular/routing/route-configuration/
			//states 
			http://krasimirtsonev																		  
			//JS to json serialization
			https://stackoverflow.com/questions/22885995/how-do-i-initialize-a-typescript-object-with-a-json-object/22886730#22886730
			
			//rxjs
			https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
			https://netbasal.com/event-emitters-in-angular-13e84ee8d28c
			https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
			
			//Cloud I9 editor
			//Ace editor
			//Json to html
			http://www.json2html.com/
			//clarity 
			https://vmware.github.io/clarity/documentation/v0.11/get-started
			//font awasome
			https://fontawesome.com/get-started/svg-with-js
			//UX UI
			https://blog.bitsrc.io/11-angular-component-libraries-you-should-know-in-2018-e9f9c9d544ff
			//bootstrap
			https://medium.com/codingthesmartway-com-blog/building-an-angular-5-project-with-bootstrap-4-and-firebase-4504ff7717c1
			//primeng
			https://www.primefaces.org/primeng/#/ 
			
			TOREAD_SORT
			//TS interfaces vs types
			https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c																 
			//JS maddness external files load
			http://unixpapa.com/js/dyna.html
			//Load files
			https://frontender.info/exploring-the-abyss-of-null-and-undefined-in-javascript/
			//JS to Typescript
			https://blog.appdynamics.com/engineering/8-steps-migrating-javascript-typescript/
			//JS modules
			https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc
			//Common JS 
			http://requirejs.org/docs/start.html
			//webpack
			https://webpack.js.org/guides/installation/
			//TS modules
			https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
			//avoid multiple subscription
			https://medium.com/@2muchcoffee/how-to-avoid-multiple-subscription-in-angular-2-component-ce50bc21991b
			//datasharing 
			https://www.lucidchart.com/techblog/2016/11/08/angular-2-and-observables-data-sharing-in-a-multi-view-application/
			//concurent dataloading 
			https://www.metaltoad.com/blog/angular-2-http-observables-and-concurrent-data-loading
			//custom custom scrollbars library
			http://jscrollpane.kelvinluck.com/#examples
			
			//CSS		
			https://css-tricks.com/snippets/html/glyphs/
			//CSS tricks
			https://css-tricks.com/
			//CSS tricks flexbox
			https://css-tricks.com/snippets/css/a-guide-to-flexbox/
			//CSS tricks grid
			https://css-tricks.com/snippets/css/complete-guide-grid/
			//Float parent lement collaps
			https://css-tricks.com/almanac/properties/f/float/
			//Code alchemy
			https://htmlacademy.ru/courses/45
			//Code alchemy grids
			https://htmlacademy.ru/courses/65
			//animate css
			https://daneden.github.io/animate.css/
			//character code
			http://www.fileformat.info
			http://www.mauvecloud.net
			//custom checkboxes 
			https://codepen.io/arpitnj/pen/oCAqa
			 //gradients 
			https://mycolor.space/gradient?ori=to+right+top&hex=%23153669&hex2=%231ECFE0&sub=1
			https://webgradients.com/
			//svg
			https://bennettfeely.com/clippy/
			//spans svg png
			https://icons8.com/icon/set/calendar/all
			https://icons8.com/
			
			//c#
			//IL 
			https://gunnarpeipman.com/books/expert-net-2-0-il-assembler/
			https://gunnarpeipman.com/net/var-keyword/
			https://dolinkamark.wordpress.com/2015/10/21/cil-programming-tutorial-the-basics/
																				  
			//Effective C# (Covers C# 4.0): 50 Specific Ways to Improve Your C#, 2nd Edition
			http://www.informit.com/store/effective-c-sharp-covers-c-sharp-4.0-50-specific-ways-9780321658708
			//editing
			https://readymag.com/
			//ExtCore
			http://extcore.net/
			
			//Angular + React
			https://www.packtpub.com/books/content/integrating-angular-2-react
			https://eloquentjavascript.net/index.html
							   
			https://blog.rapid7.com/2016/02/03/combining-angularjs-and-reactjs-for-better-applications/
			https://stackoverflow.com/questions/44117390/angular-4-mixed-with-react
			https://www.quora.com/Can-I-use-React-for-UI-along-with-Angular-2
			//LinqInAction
			https://elacademico.files.wordpress.com/2009/11/manning-linq-in-action-jan-2008-19339881691.pdf
																	   
			https://eloquentjavascript.net/index.html	
			//bulletproof wrappers
			https://blog.sentry.io/2016/02/03/wrap-javascript-functions
			//tests
			https://www.sitepoint.com/proper-error-handling-javascript/
			//error handling
			https://javascript.info/try-catch
			
			//chart vis	
			http://js.cytoscape.org/#getting-started/including-cytoscape.js
			http://graphalchemist.github.io/Alchemy/#/
			https://neo4j.com/developer/guide-data-visualization/
			http://sigmajs.org/
			//with images
			http://bl.ocks.org/eesur/be2abfb3155a38be4de4
			//chart libs
			//with json shema change
			https://gojs.net/latest/index.html
			//tree draw
			http://fperucic.github.io/treant-js/
			//comparison names
			https://modeling-languages.com/javascript-drawing-libraries-diagrams/
			
			//with images
			http://bl.ocks.org/eesur/be2abfb3155a38be4de4	
			
			
			http://leaverou.github.io/awesomplete/
			https://primitive.lol/
			//ECMAScript 6
			http://exploringjs.com/es6/index.html#toc_ch_modules
												 
			//web components
			https://hackernoon.com/the-wonderful-world-of-web-components-e4c1675c6901
			//HAML jade sass less
			https://softwareengineering.stackexchange.com/questions/225400/pros-and-cons-of-facebooks-react-vs-web-components-polymer
			
			//FLUX
			https://facebook.github.io/flux/docs/dispatcher.html#content			
			
			
			//BLOGS
			//Juan
			http://www.whoisjuan.me/			 
			//Jon Skeet's
			https://codeblog.jonskeet.uk/
			//CoddingHorror
			https://blog.codinghorror.com/
			//CodeNames
			http://blog.codenamed.nl/
			https://prateekvjoshi.com/	
			//CONTINUOUS INTEGRATION
			http://www.eugeneduvenage.com/2011/11/continuous-integration-basics-part-1/
			//web components
			https://dmitriid.com/blog/2017/03/the-broken-promise-of-web-components/
			//equality + hashoe
			http://www.aaronstannard.com/overriding-equality-in-dotnet/
			//hashs
			https://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode/263416#263416
			//Chart visualization/
			https://stackoverflow.com/questions/21893401/big-data-visualization-using-search-show-context-and-expand-on-demand-concep
			//MSDN linq, expressions
			https://weblogs.asp.net/dixin					  
			//BitCoin
			https://hackernoon.com/meet-spoofy-how-a-single-entity-dominates-the-price-of-bitcoin-39c711d28eb4
			//whiteboard interviews
			https://hackernoon.com/how-to-lose-an-it-job-in-10-minutes-3d63213c8370
			//machine lerning algoritm
			https://hackernoon.com/choosing-the-right-machine-learning-algorithm-68126944ce1f
			
			//D3.js
			//essentials v4
			http://rajapradhan.com/blogs/d3-js-v4-essentials/axes/
			//indepth v4
			http://d3indepth.com/
			//layouts
			http://bl.ocks.org/robschmuecker/7880033
			http://mbostock.github.io/d3/talk/20111116/force-collapsible.html
			http://mbostock.github.io/d3/talk/20111018/tree.html
			http://www.coppelia.io/2014/07/an-a-to-z-of-extra-features-for-the-d3-force-layout/                                                                
			//generated v4
			https://bl.ocks.org/shimizu/e6209de87cdddde38dadbb746feaf3a3
			//labeld
			https://bl.ocks.org/mbostock/950642
			
			//d3 + react
			http://www.adeveloperdiary.com/react-js/integrate-react-and-d3/
			
			//SERIAL PROGRAMMING 	
			//RS-232
			http://cisco.opennet.ru/docs/RUS/serial_guide/index.html#2_2
			
			//Framework Design Guidelines
			https://www.amazon.co.uk/Framework-Design-Guidelines-Conventions-Development/dp/0321545613/		
			
			//Custom errors
			https://weblog.west-wind.com/posts/2017/Jun/01/Bypassing-IIS-Error-Messages-in-ASPNET
			http://benfoster.io/blog/aspnet-mvc-custom-error-pages
			https://msdn.microsoft.com/ru-ru/library/h0hfz6fc(v=vs.85).aspx
			
			//quality check
			https://msdn.microsoft.com/en-us/library/4dtdybt8.aspx
			//CI/CD HW
			https://docs.microsoft.com/en-us/vsts/build-release/actions/ci-cd-part-1
			//PowerShell TFS
			https://blogs.technet.microsoft.com/heyscriptingguy/2014/04/21/powershell-and-tfs-the-basics-and-beyond/
			
			
			//Async
			http://blog.stephencleary.com/2013/11/there-is-no-thread.html
			https://msdn.microsoft.com/en-us/magazine/jj991977.aspx
			//async request
			https://stackoverflow.com/questions/12281777/implementing-httpwebrequest-async-calls
			https://msdn.microsoft.com/ru-ru/library/system.net.httpwebrequest.begingetresponse(v=vs.110).aspx
			//tasks
			https://www.codeproject.com/Articles/152765/Task-Parallel-Library-of-n
			
			//Jupiter notebook
			http://jupyter.org
			//CDN
			https://en.wikipedia.org/wiki/Content_delivery_network
			//CMS\CMF
			https://ru.wikipedia.org/wiki/Content_Management_Framework
			//WebFramework behcnmarks
			https://www.techempower.com/benchmarks/
			//WebAnalytics
			//compare	
			https://en.wikipedia.org/wiki/List_of_web_analytics_software
			//PIWIK
			https://piwik.org/docs/site-search/
			https://developer.piwik.org/guides/tracking-javascript-guide
			https://www.innocraft.cloud/

			
			//PATTERNS
			//practiacally apply
			http://www.amazedsaint.com/2008/01/design-patterns-part-i-and-ii.html
			//Extensible design
			http://www.codemag.com/article/0801041
			//state patern
			https://en.wikipedia.org/wiki/State_pattern
			
			//TOPTAL
			https://www.toptal.com/developers/blog
			//Boilerplate code gen
			http://doc.postsharp.net/

			
			 //C#
			//Expression trees
			https://weblogs.asp.net/dixin/functional-csharp-function-as-data-and-expression-tree
				
			//dev guide
			https://msdn.microsoft.com/en-us/library/hh156542(v=vs.110).aspx

			//Applications essential
			https://msdn.microsoft.com/en-us/library/ms172157(v=vs.110).aspx

			//simple List<t> class
			https://msdn.microsoft.com/en-us/library/6sh2ey19(v=vs.110).aspx?cs-save-lang=1&cs-lang=csharp#code-snippet-2


			//LINQ to DataSet
			http://blogs.msdn.com/b/adonet/archive/2007/01/26/querying-datasets-introduction-to-linq-to-dataset.aspx

			//correct d3 charts addition
			//<script type="application/javascript" charset="utf-8" src="http://d3js.org/d3.v3.js"></script>

			//charts from excel to poweerpoint copy
			https://social.msdn.microsoft.com/Forums/ru-RU/b00e1da3-908d-4ae1-8c68-2ea5108d1cd0/-excel-powerpoint-vba?forum=programminglanguageru

			//codplex library addres for excel files read
			http://exceldatareader.codeplex.com/

			//never use TWO DOTS
			http://www.thecodingforums.com/threads/asp-net-cant-kill-excel-exe-with-office-pia.123703/#post-528575

			//newtonsoft JSON serializer
			http://www.newtonsoft.com/json/help/html/serializingjson.htm

			//ASP.NET Web Deployment - Recommended Resources
			http://www.asp.net/whitepapers/aspnet-web-deployment-content-map

			//Advanced Entity Framework 6 Scenarios for an MVC 5 + usefull links
			http://www.asp.net/mvc/overview/getting-started/getting-started-with-ef-using-mvc/advanced-entity-framework-scenarios-for-an-mvc-web-application#rawsql

			//ASP.NET Data Access - Recommended Resources
			http://www.asp.net/whitepapers/aspnet-data-access-content-map

			//ASP.NET Data Access Options
			https://msdn.microsoft.com/en-us/library/ms178359.aspx#webservice

			//scafolding
			https://blogs.msdn.microsoft.com/webdev/2014/04/03/creating-a-custom-scaffolder-for-visual-studio/

			//Data Source Web Server Controls
			https://msdn.microsoft.com/en-us/library/ms247258.aspx

			//James chamber 30 days ov MVC
			http://jameschambers.com/2014/07/day-27-rendering-data-in-a-bootstrap-table/

			//Post javascrip to mvc action
			http://vault.lozanotek.com/archive/2010/04/16/posting_json_data_to_mvc_controllers.aspx

			///{LINQ}
			//Create dynamic "Select", "SelectMany" and "GroupBy" clauses
			http://drc.ideablade.com/xwiki/bin/view/Documentation/dynamic-projection

			//Programming Entity Framework, 2nd Edition
			https://www.safaribooksonline.com/library/view/programming-entity-framework/9780596807276/ch04.html

			//Dynamic LINQ Queries with Expression Trees
			https://www.simple-talk.com/dotnet/net-framework/dynamic-linq-queries-with-expression-trees/

			//Calling functions in LINQ queries
			http://tomasp.net/blog/linq-expand.aspx/

			//sql commands types
			https://msdn.microsoft.com/en-us/library/yy6y35y8(v=vs.110).aspx


			//How to add Dynamic Behavior to Data-Bound Controls
			https://msdn.microsoft.com/en-us/library/cc488562.aspx

			//WebForms
			https://msdn.microsoft.com/en-us/library/jj822927(v=vs.110).aspx

			//ASP.NET Dynamic Data
			https://msdn.microsoft.com/en-us/library/ee845452.aspx

			//LINQ chaining
			https://blogs.msdn.microsoft.com/meek/2008/05/02/linq-to-entities-combining-predicates/
			
			//Sample plugin
			https://code.msdn.microsoft.com/windowsdesktop/Creating-a-simple-plugin-b6174b62	
			
			//active directory integration
			https://www.codeproject.com/Articles/18102/Howto-Almost-Everything-In-Active-Directory-via-C
																								
			//Type comparison
			https://stackoverflow.com/questions/983030/type-checking-typeof-gettype-or-is
			
			
			
			
			//BUILD STRATEGIES
			//The Cathedral and the Bazaar
			https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar



			//NuGets
			//Lucene
			https://www.nuget.org/packages/Lucene.Net/4.8.0-beta00004
			//pagelist
			https://www.nuget.org/packages/PagedList
			//Reactive Extensions for JavaScript
			https://www.nuget.org/packages/RxJS-Main/1.0.10621

			
			//DATA BINDING FRAMEWORKS/
			//FLUX
			https://facebook.github.io/flux/docs/dispatcher.html#content
			

			//Security
			http://www.adambarth.com/papers/2008/barth-jackson-mitchell-b.pdf
			//MVC forms authentication providerName
			https://habrahabr.ru/post/176043/
			//Cookies
			https://www.nczonline.net/blog/2009/05/05/http-cookies-explained/
			//Custom antiforgery token
			http://prideparrot.com/blog/archive/2012/7/securing_all_forms_using_antiforgerytoken
			//App Security threats
			https://msdn.microsoft.com/en-us/library/f13d73y6.aspx
			//Your Password is Too Damn Short
			https://blog.codinghorror.com/your-password-is-too-damn-short/
			
			
			
			//MVC
			//Minimal folders and configs
			https://stackoverflow.com/questions/19949709/use-of-authconfig-bundleconfig-filterconfig-routeconfig-and-webapiconfig-in
			
			
			
			//WCF distributed
			https://chsakell.com/2013/04/17/distributed-transactions-in-wcf-services-part-1/
			//WCF sample
			https://www.codeproject.com/Articles/571813/A-Beginners-Tutorial-on-Creating-WCF-REST-Services
			//WCF with entity
			https://www.codeproject.com/Articles/127395/Implementing-a-WCF-Service-with-Entity-Framework
			//WCF generate contracts from POCO
			https://www.codeproject.com/Articles/1081015/Autogenerate-DataContracts-for-WCF-from-POCO-Class
			//WCF transactions
			https://www.codeproject.com/Articles/1160537/WCF-Windows-Communication-Foundation-Transaction-S
			//WCF vs aspx service
			http://www.csharptutorial.in/33/csharp-net-difference-between-webservice-and-wcf-service
			//WCF tutorials
			http://www.csharptutorial.in/wcf-tutorials
			//WCF host as a service
			https://docs.microsoft.com/en-us/dotnet/framework/wcf/how-to-host-and-run-a-basic-wcf-service
			https://docs.microsoft.com/en-us/dotnet/framework/wcf/getting-started-tutorial
			//WCF + Entity
			https://www.codeproject.com/Articles/127395/Implementing-a-WCF-Service-with-Entity-Framework
			//WCF IoC
			https://chsakell.com/2015/07/04/dependency-injection-in-wcf/
			
			
			
			//SOAP REST diff
			http://www.csharptutorial.in/296/wcf-tutorials-soap-vs-rest-web-services-or-difference-between-soap-and-rest-web-services
			
			

			//WebApi
			//Using Postman to POST API JSON request in raw
			https://support.brightcove.com/use-postman-api-requests
			//WebApi controller
			https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api
			https://docs.microsoft.com/en-us/aspnet/web-api/overview/testing-and-debugging/mocking-entity-framework-when-unit-testing-aspnet-web-api-2
			//WCF WebApi
			http://blogs.microsoft.co.il/idof/2012/03/05/wcf-or-aspnet-web-apis-my-two-cents-on-the-subject/
			//WEB api with packets
			https://habrahabr.ru/post/143024/
			


			//vNext
			https://blogs.msdn.microsoft.com/dotnet/2014/05/12/the-next-generation-of-net-asp-net-vnext/



			//EF
			//Data acces content map
			https://docs.microsoft.com/en-us/aspnet/whitepapers/aspnet-data-access-content-map
			//Code first to database
			https://msdn.microsoft.com/en-us/data/jj200620
			//EF bulk insert
			https://weblog.west-wind.com/posts/2013/Dec/22/Entity-Framework-and-slow-bulk-INSERTs#ContextBloatandLargeLists
			//Entity Framework initializer methods
			https://blog.oneunicorn.com/2013/05/28/database-initializer-and-migrations-seed-methods/
			// Code First Migrations with an existing database
			https://msdn.microsoft.com/en-us/data/dn579398


			
			//REPOSITORY
			//Generic Repository is BAD
			http://rob.conery.io/2014/03/04/repositories-and-unitofwork-are-not-a-good-idea/
			https://lostechies.com/jimmybogard/2012/09/20/limiting-your-abstractions/
			//generic Repository
			http://techbrij.com/generic-repository-unit-of-work-entity-framework-unit-testing-asp-net-mvc
			//Generic repository
			https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions/getting-started-with-ef-5-using-mvc-4/implementing-the-repository-and-unit-of-work-patterns-in-an-asp-net-mvc-application
			//A trully generic repository
			http://cpratt.co/truly-generic-repository/
			//Repo done right
			http://blog.gauffin.org/2013/01/repository-pattern-done-right/
			//Repo proof of concept
			http://web.archive.org/web/20150404154203/https://www.remondo.net/repository-pattern-example-csharp/
			//Generic repo in simple 2014
			http://www.codeguru.com/csharp/.net/net_asp/mvc/using-the-repository-pattern-with-asp.net-mvc-and-entity-framework.htm
			//Repository overall
			http://techbrij.com/generic-repository-unit-of-work-entity-framework-unit-testing-asp-net-mvc	
			//Not Generic REPOSITORY
			https://softwareengineering.stackexchange.com/questions/180851/why-shouldnt-i-use-the-repository-pattern-with-entity-framework/220126#220126
			//NOSQL
			//RaveDb
			http://www.primaryobjects.com/2010/12/22/generating-flying-creatures-in-nosql-ravendb-with-c-asp-net-mvc-razor/
			//CQRS
			https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs
																									
				
			//TESTING
			//Test Automation most complete answer
			https://stackoverflow.com/questions/1316101/automated-unit-testing-why-what-which#1316209
			//Unit test
			https://msdn.microsoft.com/en-us/library/hh694602.aspx
			https://lostechies.com/derekgreer/2011/03/28/effective-tests-a-test-first-example-part-1/
			https://www.rhyous.com/2012/03/17/unit-test-best-practices-and-guidelines/
			//nUnit
			http://severe-programmer.com/manual/unit-testing-v-visual-studio-s-ispolzovaniem-nunit-i-nsubstitute-chast-1/
			https://github.com/nunit/docs/wiki/TestCaseData
			//Moq Setup
			https://professorweb.ru/my/ASP_NET/mvc/level2/2_5.php
			//MOQ
			https://metanit.com/sharp/mvc5/18.5.php
			https://github.com/Moq/moq4/wiki/Quickstart
			https://msdn.microsoft.com/en-us/library/dn314429(v=vs.113).aspx
			https://msdn.microsoft.com/en-us/library/dn314431(v=vs.113).aspx
			https://msdn.microsoft.com/en-us/library/ff650441.aspx
			http://www.developerhandbook.com/unit-testing/writing-unit-tests-with-nunit-and-moq/
			//EF integration testing
			https://stackoverflow.com/questions/22690877/how-are-people-unit-testing-with-entity-framework-6-should-you-bother/22691703#22691703
			//Integration
			http://enterprisecraftsmanship.com/2015/07/13/integration-testing-or-how-to-sleep-well-at-nights/
			//Mocking idea descr
			https://stackoverflow.com/questions/19674363/when-to-use-a-mocking-framework
			


			//MOQ
			//Mock return item from list by ID 
			https://stackoverflow.com/questions/22010063/moq-a-retrieve-of-particular-list-item



			//Single Page Application
			https://docs.microsoft.com/en-us/aspnet/single-page-application/overview/introduction/knockoutjs-template

			//JS good practices
			http://james.padolsey.com/javascript/javascript-bad-practices/
			//JS no more frameworks
			https://bitworking.org/news/2014/05/zero_framework_manifesto

			//ORM vs plain sql strategies
			http://softwareengineering.stackexchange.com/questions/117357/is-entity-framework-suitable-for-high-traffic-websites

			//msdn C# posts
			https://blogs.msdn.microsoft.com/ruericlippert/tag/type-inference/

			//TOP 10 C# errors
			https://www.upwork.com/hiring/development/common-mistakes-in-c-sharp-programming/
			https://www.toptal.com/c-sharp/top-10-mistakes-that-c-sharp-programmers-make

			//SOLID
			http://sergeyteplyakov.blogspot.ru/2014/10/solid.html
			http://www.c-sharpcorner.com/uploadfile/damubetha/solid-principles-in-c-sharp/
			https://www.codeproject.com/Articles/703634/SOLID-architecture-principles-using-simple-Csharp

			//Learn C# building-a-simple-rpg-index
			http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/

			//Loading type MSDN + (Loading types, lazy loading turning off)
			https://msdn.microsoft.com/en-us/library/jj574232(v=vs.113).aspx

			//C# Delegates, Actions, Funcs, Lambdas?Keeping it super simple
			https://blogs.msdn.microsoft.com/brunoterkaly/2012/03/02/c-delegates-actions-funcs-lambdaskeeping-it-super-simple/
			//Generic parameters vs type 
			https://stackoverflow.com/questions/10955579/passing-just-a-type-as-a-parameter-in-c-sharp

			/*
			filtering inherited types classes in base class list of classes
			google
			c# base class list contains inherited classes
			stack
			*/
			http://stackoverflow.com/questions/2074779/identifying-derived-types-from-a-list-of-base-class-objects


			/*ECM/ERP FuckUp pieces of shit*/
			
			https://www.directum.ru/
			docsvision
			intraservise
			elma
			https://www.naumen.ru
			
			//code gen
			https://swagger.io/
			//tizen
			https://www.tizen.org/
			
			//ORACLE
			http://www.f-notes.info/oracle:what_where
				
			//Shodan
			https://www.shodan.io/
					
		
		
			pipelines and actors
			AkkaA streams for actors 
			raft algorithm, consul
			AkkaA net
			AkkaA.NET State machine
			
			//contour
			https://github.com/mzabolotko/Contour
			//hostbox
			https://github.com/SDVentures/HostBox
			
			//product docs workflow 
			БТ-ПТ-ФТ-Спек
			
			https://www.epochconverter.com/
			
			https://semver.org/
			http://pubs.opengroup.org/architecture/archimate3-doc/chap01.html#_Toc489945945
			https://github.com/StyleCop/StyleCop
			https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md
			https://fsprojects.github.io/Paket/
			http://restsharp.org/
			https://www.datadoghq.com/product/
			https://sentry.io/welcome/
			
			//ArchiMate
			http://pubs.opengroup.org/architecture/archimate3-doc/toc.html
			//open API
			https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md
			
			InfluxDB, OpenTSDB, Prometheus
			 
			books[
			
			C#, .NET

		Andrew Troelsen - Язык программирования C# и платформа .NET 4.pdf
		Windows Presentation Foundation with .NET 3.5.pdf
		Сандерсон С., Фримен А. - Microsoft ASP.NET MVC3 Framework с примерами на C# для профессионалов (3-е издание, 2012).pdf
		Microsoft ASP.NET 4 с примерами на C# 2010 для профессионалов.pdf
		Джувел Лёве - Создание служб WCF.pdf
		Microsoft ASP.NET MVC Framework с примерами на C# для профессионалов.pdf
		Джеффри Рихтер - Программирование на платформе Microsoft .NET Framework.pdf
		Andrew Troelsen - Язык программирования C# 5.0 и платформа .NET 4.5.pdf
		C# 4.0 in a Nutshell 4th.Edition.pdf

	Web, JavaScript

		Joe Kuan - Learning Highcharts 4.pdf
		Shelley Powers - Изучаем Node.js.pdf
		Виктор Петин -Сайт на AJAX под ключ. Готовое решение для интернет-магазина.pdf
		Ari Lerner - NG-Book.pdf
			Приложения
		Дэвид Сойер Макфарланд - Большая книга CSS3. (3-е издание).pdf
		Дэвид Флэнаган - JavaScript. Подробное руководство (6-е издание).pdf
		Крокфорд - JavaScript. Сильные стороны.pdf
		Стоян Стефанов - JavaScript шаблоны.pdf
		Кристофер Шмитт, Кайл Симпсон - HTML5. Рецепты программирования - 2012.pdf
		Адам Фримен - jQuery для профессионалов.pdf
		Николас Закас - JavaScript. Оптимизация производительности - 2012.pdf

	DI

		Внедрение зависимостей в .NET (2014).pdf

	Проектирование

		Эрик Эванс-Предметно-ориентированное проектирование (DDD).pdf
		Мартин Фаулер - Шаблоны корпоративных приложений.pdf

	Базы данных

		Бен Форта - SQL - 10 минут на урок.pdf
		Alan Beaulieu - Изучаем SQL.pdf
		Anthony Molinaro - SQL - сборник рецептов.pdf
		Репликация SQL Server 2005-2008. Сборник статей от сообщества SQL.RU.pdf
		Полубояров В.В. - Использование MS SQL Server 2008 Analysis Services для построения хранилищ данных (2010).pdf
		Сейед Тахагхогхи, Хью Е. Вильямс - Руководство по MySQL.pdf
		Шварц Б., Зайцев П., Ткаченко В. - MySQL. Оптимизация производительности (2-е издание).pdf
		Талманн Л., Киндал М., Белл Ч. - Обеспечение высокой доступности систем на MySQL.pdf
		MC Brown - Getting Started with CouchDB.pdf
		J. Chris Anderson - CouchDB - The Definitive Guide.pdf
		MC Brown - Getting Started with Couchbase Server.pdf
		David Ostrovsky, Yaniv Rodenski - Pro Couchbase Server.pdf
		Ken Henderson - Профессиональное руководство по Transact-SQL.pdf

	Google Android

		Разработка приложений для Android.pdf
		Android для программистов. Создаем приложения (2012) Дейтел П., Дейтел Х., Дейтел Э., Моргано М..pdf
		Голощапов А. Л. - Google Android программирование для мобильных устройств - 2011.pdf
			Голощапов А. Л. - Google Android программирование для мобильных устройств - 2011.rar

	Apple iOS, MacOS

		Программируем для iPhone и iPad.pdf
		Разработка приложений для iPhone, iPad и iPod touch с использованием iOS SDK.pdf
		Елисеев Д. В. - Разработка и продажа программ для iPhone и iPad (Профессиональное программирование) - 2011.pdf
		Аарон Хиллегасс - Objective-C Программирование для iOS и MacOS.pdf

	Программирование, методики

		Мартин Р. - Чистый код. Создание, анализ и рефакторинг (Библиотека программиста) - 2010.pdf
		Д. Босуэлл, Т. Фаучер. Читаемый код.pdf
		Steven C. McConnell - Совершенный код.pdf
		Кристофидес Н. - Теория графов. Алгоритмический подход.pdf
		97 вещей, которые должен знать каждый программист.pdf
		D - Паттерны проектирования с примерами на языке C#.pdf
		Донис Маршалл, Джон Бруно - Надежный код (Практические рекомендации) - 2010.pdf
			Донис Маршалл, Джон Бруно - Надежный код (Практические рекомендации) - 2010.rar

	Операционные системы

		Microsoft Windows Server 2008 R2. Полное руководство.pdf
		Робин Никсон - Ubuntu для всех - 2011 .pdf
		Дэвид А. Карт - Хитрости Windows 7 для проффесионалов (2011).pdf

	Прочее

		J. Leskovec, A. Rajaraman, J.D. Ullman - Mining of Massive Datasets.pdf
		PlantUML Language Reference Guide.pdf
		Новиков Ф.А. - дискретная математика для программистов.pdf
		Пол Альбитц, Крикет Ли - DNS и BIND (4th Edition, 2002).pdf
		Tom White - Hadoop. The Definitive Guide, 2nd Edition.pdf

	Нейронные сети

		Stuart J. Russel, P. Norvig - Искусственный интеллект. Современный подход (2-е издание).pdf
		S. Osowski - Нейронные сети для обработки информации.pdf
		S. Khaykin - Нейронные сети. Полный курс (2-е издание).pdf
		J. Heaton - Programming Neural Networks with Encog3 in CSharp.pdf
		F. Wosserman - Нейрокомпьютерная техника - Теория и практика.pdf
		
			]
			
			//c#
			//compile
			https://msdn.microsoft.com/en-us/library/bb384838.aspx
			//observable 
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern
			//rx
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern
			
			//Oberver
			Observer : Iobservable<T> t-> data send  from provider to observers
			provider,subject,observable -> 
				List with references to observer implements subscribed
				
			observer
			.OnNext
			.OnError
			.OnComplete

			//freelance
			https://www.upwork.com/
			//puzzles 
			https://www.octothorpean.org/
			
		}
		