@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Intranet.Models.QuizModel.Quiz

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <title>Intranet</title>

    <link href="~/Content/Images/favicon.ico" type="image/x-icon" rel="shortcut icon" />
   

    <script src="~/Scripts/CustomScripts/QuizJsonEditor_withoutForm/jsoneditor.js"></script>
</head>


<body>


    <h2>Создание опроса</h2>
    <br>

        <div class='row'>
            <div class='medium-12-columns'>
                <button id='submit' class='tiny'>ОК</button>
                <button id='restore' class='secondary tiny'>Restore to Default</button>
                <span id='valid_indicator' class='label'></span>
            </div>
        </div>
        <div class='row'>
            <div id='editor_holder' class='medium-12 columns'></div>
        </div>


    <script>
        var starting_value = @Html.Raw(Json.Encode(Model)); //ViewBag.Json;// { "QuizMainInfo": { "QuizId": "1cb223ad-d9ec-4a78-bf5d-a627f1512b6b", "Author": "0def604e-ca0a-4927-a4c4-9c73d3587de8", "QuizName": null, "CreationDate": "0001-01-01T00:00:00", "StartDate": "0001-01-01T00:00:00", "EndDate": "0001-01-01T00:00:00", "IsQuizEnded": false, "QuiestionId": "00000000-0000-0000-0000-000000000000", "QuizParticipantId": "00000000-0000-0000-0000-000000000000", "QuizPerformerId": "00000000-0000-0000-0000-000000000000", "AnswerResultId": "00000000-0000-0000-0000-000000000000", "CommentId": "00000000-0000-0000-0000-000000000000" }, "Questions": [{ "Id": "00000000-0000-0000-0000-000000000000", "QuizId": "00000000-0000-0000-0000-000000000000", "AnswerId": "a27e0115-bb19-4fca-92da-2a141ec6b7fd", "Answers": null, "QuestionType": null }, { "Id": "00000000-0000-0000-0000-000000000000", "QuizId": "00000000-0000-0000-0000-000000000000", "AnswerId": "097bbb1c-f167-45fd-9b3a-d6308a4840b9", "Answers": null, "QuestionType": null }], "QuizParticipant": [{ "Id": "1cb223ad-d9ec-4a78-bf5d-a627f1512b6b", "ParticipationDate": "2017-01-19T10:58:22.8100307+03:00", "Participant": "sa" }], "QuizPerformer": null, "AnswerResult": null, "Comments": null };

        var editor = new JSONEditor(document.getElementById('editor_holder'), {
            // Enable fetching schemas via ajax
            ajax: true,

            // The schema for the editor
            schema: {
                $ref: "/Scripts/CustomScripts/QuizJsonEditor_withoutForm/Schema.json",
                format: "grid"
            },

            // Seed the form with a starting value
            startval: starting_value
        });

      //

        // Hook up the submit button to log to the console
        document.getElementById('submit').addEventListener('click', function () {

            console.log(editor.getValue());

            $('#submit').click(function () {

            alert(editor.textContent);
            $.ajax({
                url: 'Quiz',
                type: "post",
                data: { 'test' : JSON.stringify(editor.getValue()) },
                cache: false,
                success: function (savingStatus) {
                },
                error: function (xhr, ajaxOptions, thrownError) {
          
                }
            });
        });


        // Hook up the submit button to log to the console
        document.getElementById('submit').addEventListener('click', function () {
            // Get the value from the editor
            console.log(editor.getValue());
        });

        // Hook up the Restore to Default button
        document.getElementById('restore').addEventListener('click', function () {
            editor.setValue(starting_value);
        });

        // Hook up the validation indicator to update its
        // status whenever the editor changes
        editor.on('change', function () {
            // Get an array of errors from the validator
            var errors = editor.validate();

            var indicator = document.getElementById('valid_indicator');

            // Not valid
            if (errors.length) {
                indicator.className = 'label alert';
                indicator.textContent = 'not valid';
            }
                // Valid
            else {
                indicator.className = 'label success';
                indicator.textContent = 'valid';
            }
        });
        

        });
    </script>
    </body>