Checklist[

	-> etalon tamplate
	-> task actual
	-> used functional duplication check
	-> promise resolve
	-> used imports
	-> unused imports
	-> function to block order
	-> CSS order
	-> functional
	-> IE CSS
	-> indents and gaps
	-> naming

]

cSharp[
	
	accessModifers[
		httpGet
			fromroute,fromquery, fromheader (maybe)
		httpPost, httpPut
			frombody, fromform
		httpDelete
			fromroute, fromquery (maybe)
	
	]
	
	WebApi[
	
		routeAttributes[
				httpGet
				fromroute,fromquery, fromheader (maybe)
			httpPost, httpPut
				frombody, fromform
			httpDelete
				fromroute, fromquery (maybe)
		]
		
		multipleGet[
		
			//GET signature
			[HttpGet("GetDefault/{IsoCode}")]
			public async Task<IActionResult> Get([FromRoute]string IsoCode)
			//URL
			http://localhost:49585/api/NewOrder/GetDefault/usd

			//GET named
			[HttpGet("GetCurrency")]
			public async Task<IActionResult> GetCurrencyParam(string IsoCode)
			//URL
			http://localhost:49585/api/NewOrder/GetCurrency?IsoCode=usd

			//GET named
			[HttpGet("GetCurrencyParam")]
			public async Task<IActionResult> GetNoParam([FromQuery]string IsoCode)
			//URL
			http://localhost:49585/api/NewOrder/GetCurrencyParam?IsoCode=asd

		]

	]

]

testing[

	dummy - real object passed around
	fake - has working implementation (in memory database)
	stubs - provides narrow answers to calls
	spies - stubs recording some info
	mocks - objects pre-programmed for expectations
	
	classical and mockist TDD - real objects vs mocks 

]

