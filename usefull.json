uf[	
	


	
		
	cs[

				
		Core [
		
				core_module_load[
					!!!
					if app exports default
					then on index new via default
					references
					
					//react aggregate root
					//renders final comp
					GameBoard.jsx
					{		
						import * as React from 'react'

						export default class GameTutorial {
							 ReactDOM.render(
						}
					}
					
					//aggregate root for webpack
					//imports all modules
					app.js
					{
						import { GameTutorial } from '../ReactTutorial/Containers/GameBoard'			
						
						export class App 
					}
					
					//endpoint for builded packs
					index.cshtml[
						<script src="~/dist/wp/reactGame.bundle.js" type="text/javascript"></script>
						
						 let rg = new reactGame.App();
						<script>
						  let rg = new reactGame.App();
						  rg.Init();
						</script>
					]
					
				]
				//ef CORE LOGGING
				http://rion.io/2016/10/19/accessing-entity-framework-core-queries-behind-the-scenes-in-asp-net-core/
			]
			
			vsCode_EF_update[
				dotnet ef migrations add LocalExpress --context sbDbEntities
				dotnet ef database update --context sbDbEntities
			]
					
		]
			

	]
	
	js[
		
		
		shorthands[
			//ternary
			if..else
			let v = c ? x :
			//shortcircuit
			//!(if c null,undefined,'',0)
			let v = c || x;
			//decl shrt 
			let x,y,z =3;
			//if(truthy)
			//if(!truthy)
			//arrays 
			for(let i of arr)
			//fucnt shrothands
			f = p => console.log("val",p);
			setTimeout(() => console.log("val"),1000);
			arr.forEach(s=>console.log(s));
			//implicit return
			f2 = p => ( p); 
			//default param
			f3 = (p0,p1=1,p2="a") => ((p0*p1)+p2); //f3(2) =>"2a"
			//template str
			let p0 ="Var";
			let c0=`a${p0}`; //console.log(c0); => aVar
			//destructuring
			let p = {v0:"v0",v2:"v02",v4:"v4"}		
			let {v0,v2,v4} = p
			//rest syntax
			let a0 = [1,2,3];
			let b0 = [...a0];
			a0[2]=10;
			let c0 = [a0,b0]
			console.log(a0) => [1, 2, 10]
			console.log(b0) => [1, 2, 3]
			console.log(c0) => {[],[]}
			//map,foreach,filter
			let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
			function f3(arr,pred){
				let ret=[];
				arr.forEach(s => {						
					if(pred(s)){
						ret.push(s);
					}
				});
				console.log(ret)
				
				let ret2=[];
				ret2=arr.map(s => {						
					if(pred(s)){
						return s;
					}else{return null;}
				});
				console.log(ret2)
				
				let ret3;
				ret3=arr.filter(pred);
				console.log(ret3);
			}		
			f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
			//Math.floor(4.9)
			~~4.9
			
		]
		
		
		code[
		
			//map,foreach,filter
			[
				let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
				function f3(arr,pred){
					let ret=[];
					arr.forEach(s => {						
						if(pred(s)){
							ret.push(s);
						}
					});
					console.log(ret)
					
					let ret2=[];
					ret2=arr.map(s => {						
						if(pred(s)){
							return s;
						}else{return null;}
					});
					console.log(ret2)
					
					let ret3;
					ret3=arr.filter(pred);
					console.log(ret3);
				}		
				f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
				
			]
			
			https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax
			//rest syntax
			[
			
			
				let o1 = {k:"key1",k2:"key2"}
				let o2 = {k:"key3",k2:"key4"}
				let o3 = Object.assign(o1,o2,{val:"v1"})
				let o4 = {...o1,...o2}
				
				console.log(o1)
				console.log(o2)
				console.log(o3)	
				console.log(o4)	
			]
			
			//merge
			[
				let o5 = ({...o1},{...o2})
				console.log(o5)	
				
				const merge = (...args) => ({...args})
				let o6 = merge (o1,o2)
				console.log(o6)
				
				f3 = (p0,p1=1,p2="a") => ((p0*p1)+p2)
				
				let p = {v0:"v0",v2:"v02",v4:"v4"}		
				let {v0,v2,v4} = p
				console.log(v4)
			
			]
			
			//map_forEach
			[
			
				let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
				function f3(arr,pred){
					let ret=[];
					arr.forEach(s => {						
						if(pred(s)){
							ret.push(s);
						}
					});
					console.log(ret)
					
					let ret2=[];
					ret2=arr.map(s => {						
						if(pred(s)){
							return s;
						}else{return null;}
					});
					console.log(ret2)
					
					let ret3;
					ret3=arr.filter(pred);
					console.log(ret3);
				}		
				f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
			]
			
			//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
			assign[			
				let o1 = {k:"key1",k2:"key2"}
				let o2 = {k:"key3",k2:"key4"}
				let o3 = Object.assign(o1,o2,{val:"v1"})
				
				console.log(o1)
				console.log(o2)
				console.log(o3)
			]
			
			//spread
			//rest syntax
			https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax
			[
				let o1 = {k:"key1",k2:"key2"}
				let o2 = {k:"key3",k2:"key4"}
				let o3 = Object.assign(o1,o2,{val:"v1"})
				let o4 = {...o1,...o2}
				
				console.log(o1)
				console.log(o2)
				console.log(o3)	
				console.log(o4)	
				
				//merge
				let o5 = ({...o1},{...o2})
				console.log(o5)	
				
				const merge = (...args) => ({...args})
				let o6 = merge (o1,o2)
				console.log(o6)			
			]
			
			Destructuring Assignment Shorthand
			[
			
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
				https://www.sitepoint.com/shorthand-javascript-techniques/
				
				var o = {p: 42, q: true};
				var {p, q} = o;

				console.log(p); // 42
				console.log(q); // true

			]
			
			recursiveArraySearch[
					  recursiveArraySearch(arr, constraint){
					var ret;
					if(arr && arr.length>0){
						arr.forEach(function nested(a){
							if (constraint(a)){
								ret=a; 
							}
							if(Array.isArray(a.children)){
								a.children.forEach(nested);
							}
						});
					}
					return  ret;
				}
			]
			
			importExport[
			
				export default
				export {} - object
				
				import t
				import {t} - object
				
			]
		
			...args rest arguments
			map(array)		
			assign(target,source)
			
			let obj = {
				...objToCopy,
				prop
			}
						
			document_load_event[
				document.addEventListener("DOMContentLoaded",check,false);
			]					
					
			fetchAPIExml
			[

				function fu()
				{

					//let request = new Request('https://www.mozilla.org/favicon.ico');

					let header = new Headers({
						'Access-Control-Allow-Origin': '*',
						'Content-Type': 'multipart/form-data',
						//'Cookie': '.AspNetCore.Antiforgery.YEUXIw3HZOc = CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9 - Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2 - x - H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8; .ASPXANONYMOUS = s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1; .ASPXAUTH = 9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'
					});
					let sentData = {
						method: 'GET',
						mode: 'cors',
						headers: {'c':'c'}
					};
					
					var myHeaders = new Headers();
					myHeaders.append('Content-Type', 'text/html; charset=utf-8');
					myHeaders.append(
						//'Cookie', '.AspNetCore.Antiforgery.YEUXIw3HZOc=CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8; .ASPXANONYMOUS=s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1; .ASPXAUTH=9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'
				'.AspNetCore.Antiforgery.YEUXIw3HZOc','CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8'
					)
					
					myHeaders.append(
				'.ASPXANONYMOUS','s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1'
					)
					
					myHeaders.append(
				'.ASPXAUTH','9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'
					)
					
					
					let _request = new Request(`http://localhost:49897/GeoPosition/GetCategoryServiceTypes?categoryId=039e061b-b3a6-4e31-ab9a-d20352f87230`, 
					{ method: 'GET', credentials: 'include' });

					document.cookie='.AspNetCore.Antiforgery.YEUXIw3HZOc=CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8;'
					document.cookie='.ASPXANONYMOUS=s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1;'
					document.cookie='.ASPXAUTH=9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'

					_request.headers = myHeaders;
					console.log('request')
					console.log(_request.url)
					console.log(_request.method)
					console.log(_request.headers.get('.ASPXANONYMOUS'))
					console.log('cookie')
					console.log(document.cookie)	
					console.log(_request)

					fetch(_request)
					.then(
						//response => response.json(),		
						response=>console.log(response),
						err => console.log('Redux dispatch error:', err)
					)
					.then(			
						json => {
							console.log(json);
							json
						}
						//dispatch(ChieldrenReceived(id,json))
					);
					
				}

			]
		
			workingFetchAjax
			[
				
				function fu()
				{

					//let request = new Request('https://www.mozilla.org/favicon.ico');
					
					var myHeaders = new Headers();
					myHeaders.append('Content-Type', 'text/html; charset=utf-8');		
					
					let _request = new Request(`http://localhost:49897/GeoPosition/GetCategoryServiceTypes?categoryId=039e061b-b3a6-4e31-ab9a-d20352f87230`, 
					{ method: 'GET', credentials: 'include' , mode:'no-cors'});

					document.cookie='.AspNetCore.Antiforgery.YEUXIw3HZOc=CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8;'
					document.cookie='.ASPXANONYMOUS=s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1;'
					document.cookie='.ASPXAUTH=9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'

					fetch(_request)
					.then(response => response.json())		
					.then(
						j => {
							console.log(j);
							console.log(JSON.stringify(j));
						}
						//dispatch(ChieldrenReceived(id,json))
					);
					
				}

				ajax[
				
					$.ajax({
					method: "GET",
					url: "http://localhost:49897/GeoPosition/SearchCategories?parentId=039e061b-b3a6-4e31-ab9a-d20352f87230"
					})
					.done(function( ret ) {
					console.log( "done: ");
					console.log(ret)
					})
					.fail(function(c){
					console.log("fail")
					console.log(c)
					});
					
				]
				
			]
			
			overall[
			
				//delete prop
				delete Employee.firstname;

				importFromModulesExport[

				export default
				export {} - object

				import t
				import {t} - object

				]

				...args rest arguments
				map(array)		
				assign(target,source)

				let obj = {
				...objToCopy,
				prop
				}

				document_load_event[
				document.addEventListener("DOMContentLoaded",check,false);
				]

			]
		
		]
				
		shorthands[
			//ternary
			if..else
			let v = c ? x :
			//shortcircuit
			//!(if c null,undefined,'',0)
			let v = c || x;
			//decl shrt 
			let x,y,z =3;
			//if(truthy)
			//if(!truthy)
			//arrays 
			for(let i of arr)
			//fucnt shrothands
			f = p => console.log("val",p);
			setTimeout(() => console.log("val"),1000);
			arr.forEach(s=>console.log(s));
			//implicit return
			f2 = p => ( p); 
			//default param
			f3 = (p0,p1=1,p2="a") => ((p0*p1)+p2); //f3(2) =>"2a"
			//template str
			let p0 ="Var";
			let c0=`a${p0}`; //console.log(c0); => aVar
			//destructuring
			let p = {v0:"v0",v2:"v02",v4:"v4"}		
			let {v0,v2,v4} = p
			//rest syntax
			let a0 = [1,2,3];
			let b0 = [...a0];
			a0[2]=10;
			let c0 = [a0,b0]
			console.log(a0) => [1, 2, 10]
			console.log(b0) => [1, 2, 3]
			console.log(c0) => {[],[]}
			//map,foreach,filter
			let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
			function f3(arr,pred){
				let ret=[];
				arr.forEach(s => {						
					if(pred(s)){
						ret.push(s);
					}
				});
				console.log(ret)
				
				let ret2=[];
				ret2=arr.map(s => {						
					if(pred(s)){
						return s;
					}else{return null;}
				});
				console.log(ret2)
				
				let ret3;
				ret3=arr.filter(pred);
				console.log(ret3);
			}		
			f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
			//Math.floor(4.9)
			~~4.9
			
		]
		
		//slice immutable
		//splice mutates 
		
		//delete prop
		delete Employee.firstname;
		
	]
	
	web_dev[
		https://developers.google.com/web/
	]

	jira[
		//dateformat
		01/декабря/2018
	]
			
	lit[
		//5 int in 5 days
			https://medium.com/@XiaohanZeng/i-interviewed-at-five-top-companies-in-silicon-valley-in-five-days-and-luckily-got-five-job-offers-25178cf74e0f
			//6 int in 6 days
			https://blog.usejournal.com/i-interviewed-at-six-top-companies-in-silicon-valley-in-six-days-and-stumbled-into-six-job-offers-fe9cc7bbc996

			https://blog.usejournal.com/what-i-learned-in-my-first-two-years-as-a-software-engineer-4e374fdcf0fd
			//300к job offer
			https://blog.usejournal.com/how-i-negotiated-a-software-engineer-offer-in-silicon-valley-f11590f5c656
				
		]
				
		//package-lock
		https://medium.com/coinmonks/everything-you-wanted-to-know-about-package-lock-json-b81911aa8ab8		
		
		//angular ng-book
		http://www.nglesson.com/Livres/ng-book2-angular-5-r67.pdf
		
		//react
		fullstack react the complete guide to reactjs and friends
		abstr[
			server.js
			modash
			enzyme
			react-router
			Flux & redux
		]
			
	]
	
	links[
		
		https://try.dot.net/
		
		http://www.oldapps.com/Internet_explorer.php?old_Internet_explorer=11

		https://sharplab.io/	
		https://medium.com/@rhamedy/key-habits-and-things-i-wish-i-knew-earlier-as-a-developer-43c9466a0407
		
		//ienumerable
		https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
		
		//formik - small redux
		https://jaredpalmer.com/formik/docs/overview
		
		//react bootstrap
		https://medium.com/luteceo-software-chemistry/lightweight-starter-kit-for-asp-net-core-react-typescript-and-webpack-with-hmr-7bc977b7712
		//react in core
		https://developer.okta.com/blog/2018/07/02/build-a-secure-crud-app-with-aspnetcore-and-react
		https://docs.microsoft.com/en-us/aspnet/core/client-side/spa/react?view=aspnetcore-2.2&tabs=visual-studio
					
		//guidelines for collections
		https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
		//infr persistance
		https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design

		//redux
		//three priniples
		https://redux.js.org/introduction/three-principles
		//getting started
		https://redux.js.org/introduction/getting-started
		//todo example
		https://redux.js.org/basics/example

		//react
		//validation typecheck
		https://reactjs.org/docs/typechecking-with-proptypes.html
		//events
		https://reactjs.org/docs/events.html
		//render props
		https://reactjs.org/docs/render-props.html
		//create context
		https://reactjs.org/docs/context.html
		
	]	

	clrViaCshrp
	[
		http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
		
		CLR -> manged module for 32x or 64x PE32, PE32+
		C# -> compiler -> managed module
		Basic -> basic compiler -> -=-
		IL source -> IL assembler -> -=-
		
		IL - JIT compiler-> CPU instr
		
		Managed module IL + metadata(GC collected datatypes) 
			(Data execution prevention DEP, Address space layput randomization ASLR)
		[
			PE32, PE32+ header -> windows header simmilar to COFF format , indicates file type 
			GUI, CUI, DLL
			
			CLR header -> header, flags, methodDef, entry point (Main )
			
			metadata -> tables of types and methods deined, table with types and members refrenced
			(
				o- always embeded in exe
				o- removes need in c/c++ header files
				o- intelisense, typechecking, GC
			)
			
			
			IL code -> code compiled from source. CLR at runtime copmiles IL to CPU instr
		]
		
		clr works with assembly [
			manifest - assembly metadata table containing files representing the assembly
			public export types implemented by asm files
			resource or data files associated with the asm
		]
		
		IL - heigher level language then most CPU machine
		all CLR facilivies available
			o- access and manipulate obj type
			o- create and init objs
			o- call virt methods on objects
			o- manipulate arr directly
			o- err handling
			
		p. 16
		EXECUTION - 
			before main executes CLR allocates internal datastructure to managed ref types access
			internal structure for each method with its implementation address
			on initialization sets each entry to undocummented function incide CLR => JITcompiler
			
			Main - first call to first method-> JITcompiler function call
			
			JITcompiler -> compiles native IL code to native CPU instr
				(knows method and type on call)
			-> searchs asm metadata for clled method IL
			-> native CPU instr saved to dynamic mem block
			-> goes back to CLR internal datastruc and replaces reference to method with addr of compile mem block
			-> jumps to mem block of compiled
		
		p. 18
		DEBUG MODE		
			-> generates nop IL instr, for breakpoints placement
				//optimize[+/-] /debug[+/-] 
		compiler switch:
			default -> /optimize- /debug- -> ILcode(unopt) JIT native( opt)
			-> /optimize- /debug(+/full/pdbonly) -> ILcode(unopt) JIT native( unopt)
			-> /optimize+ /debug(-/+/full/pdbonly) -> ILcode(opt) JIT native( opt)
		
		p. 19-20
		.PDB (Programm database) - helps debug find local vars and map IL instr to source.
		
		System.Runtime.ProfileOptimization -> causes CLR to record methods optimized by JIT
			on multiple CPU would compiles concurrently
		
		IL -> 
			o- stackbased, no registers, easy to target CLR
			o- typeless
			o- verification while CLR compiles IL to CPU source 
				varification(
					o- parameter number & type check
					o- return val usage				
				)
		
		p. 21
		Virtual address space VAS ->
		
		CLR -> offers ability to execute several AppDomains in single OS process
		
		unsafe code -> 
			/unsafe -> can work on memory directly
			o- JIT compiler checks assembly befor compile unsafe on 
				System.Security.Permissions.SecurityPermission 
				and 
				System.Security.Permissions.SecurityPermissionFlag’s SkipVerification 
			
			throws -> 
				System.InvalidProgramException or a System.Security.VerificationException
		p. 23-24
			NGen.exe -> 
				o- usefull for start optimizing 
				o- asm loaded into multiple processes
				o- %SystemRoot%\Assembly genned asembly with native code location
		
			CLR searchs for precompiled native file and uses it, JIT compiles code only on absence
			
				x- no intellectual prop prot 
				x- rassinhronization of (CLR ver, CPU type, Win ver, asm ID)
				x- not creates optimiations and can perform slower/
			
			MPGO.exe - startup time optimization
		
		p. 25-26
			Framework class library FCL -> DLL asm with type def and some funcionality
				empl. System type with Object
			
			most_usefull[
				System - basic types
				System.Data - comunicating with database and processing
				System.IO 
				System.Net - low-level networ communication, protocols
				System.RuntimeInteropServices - unmanaged code, COM, win32 functions or DLLs
				System.Security - protecting data and resources
				System.Text - 
				System.Threading - asynchronous operations
			]
		
		p. 27-29
			Common Type System CTS -> 
				Types:
					Field, Method, Property (validation, readonly), Event
				
				Visibility rules:
					Private
					Famility/protected (derived types)
					Family and assembly(derived if def in asm, not in C# but in IL)
					Assembly(Internal)
					Family or assembly(protected internal) derieved exist in asm
					Public				
				CTS defines inheritance rules, virtual methods, obj lifetime.
				Type can dereive from once base class
				
				Sustem.Object 
					o- compare intances for equality
					o- get hash
					o- shalow (bitwise) copy
					o- get string representation
					
			ECMA-334,335
			
		p.30
			Common Language Specification CLS ->
				
			
	]
		
	
]
