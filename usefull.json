
	wl[
	
		DI[

			autofac
			https://autofac.org/
			fakeiteasy
			https://fakeiteasy.readthedocs.io/en/stable/creating-fakes/
			automapper
			http://docs.automapper.org/en/stable/Getting-started.html
			fluentvalidation
			https://fluentvalidation.net/
			stylecop
			https://blog.submain.com/stylecop-detailed-guide/
			
		]
		
		diTestingInit[
			
            var builder = new ContainerBuilder();
            builder.RegisterModule(new CoreModule());
            builder.RegisterModule(new InstanceModule());
            builder.RegisterModule(new AutomapperModule());
			
		]
		
		mysql[		
		
			create table UserAddresses (UserId varchar(255),Email  varchar(255))			
			ALTER TABLE `useraddresses` CHANGE COLUMN `UserId` `UserId` VARCHAR(50) NULL DEFAULT NULL FIRST;
		
		]
		
		dotnet[
			https://docs.microsoft.com/ru-ru/ef/core/managing-schemas/migrations/
			dotnet ef migrations add initial
		]
		
		mongoFilter[
			//Filter and
			ret = ret.Where(s => metricTypes.Contains(s.MetricType)).Intersect(ret).ToList();
			//Filter or
			filter.AddRange(ret.Where(s => metricTypes.Contains(s.MetricType)).ToList());
		]
		
		customBodyAttributes[
			https://weblog.west-wind.com/posts/2012/Aug/30/Using-JSONNET-for-dynamic-JSON-parsing
			https://www.dotnetcurry.com/aspnet-mvc/1368/aspnet-core-mvc-custom-model-binding
			https://blogs.msdn.microsoft.com/jmstall/2012/04/18/mvc-style-parameter-binding-for-webapi
			https://stackoverflow.com/questions/17645877/webapi-bind-from-both-uri-and-body
		]
		
		mongodbConcurency[
			Applications must ensure that only one thread at a time executes these operations in a client session.
			https://docs.mongodb.com/manual/core/causal-consistency-read-write-concerns/
			https://docs.mongodb.com/manual/faq/concurrency/
		]
		
		container[
			//container orchestration framework
			https://kubernetes.io/
			//alernate 
			Kubernetes,Mesos,Docker Swarm,Nomad,Mesosphere DC/OS
		]
		serviceBus[
			https://buoyant.io
			//sidecar
			https://linkerd.io/
		]
		service_mesh[
			https://istio.io/
		]
		msa[
			https://www.nginx.com/blog/nginmesh-nginx-as-a-proxy-in-an-istio-service-mesh/
			https://www.nginx.com/blog/what-is-a-service-mesh/
			https://www.nginx.com/blog/introducing-the-nginx-microservices-reference-architecture/
			https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
		]
		patterns[
			decomposition[
				sidecar proxy //sideckick
				https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar
				//ambassador
				https://docs.microsoft.com/en-us/azure/architecture/patterns/ambassador
				//circuit breaker
				https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
				https://www.nginx.com/blog/microservices-reference-architecture-nginx-circuit-breaker-pattern/
			]
		]
	
		software[
			//mremoteNc manual
			https://github.com/mRemoteNG/mRemoteNG/wiki/User-Manual
			//db viewver
			https://www.heidisql.com/
			
		]	
		vs_issues[
			
			https://stackoverflow.com/questions/20358747/transformxml-task-could-not-be-loaded-from-microsoft-web-publishing-tasks-dll
			//http not found
			VisualStudioINstaller -> VS install Web net 4.7
			csproj -> UsingTask TaskName="TransformXml" -> \12\Web\ -> cahnge to -> v$(VisualStudioVersion)\Web\
			
			CannotEvaluateTypes[
				WHAT:
					cannot evalueate expression in debug mode
				WHEN: 
					debuging unit tests in multi projext solution
				HOW:
					check to on
					Tools->Options->Debugging->General->Use Managed Compatibility Mode
			]
			
		]
		guides[
			//postgres Firststeps
			https://www.postgresql.org/docs/8.3/static/app-postgres.html
			//mssql kill db
			https://dba.stackexchange.com/questions/2387/sql-server-cannot-drop-database-dbname-because-it-is-currently-in-use-but-n
			
			wireshark[
				https://www.howtogeek.com/104278/how-to-use-wireshark-to-capture-filter-and-inspect-packets/
				https://wiki.wireshark.org/
			]			
			
			cmd[
				https://www.getfilecloud.com/blog/2016/05/how-to-find-what-application-is-listening-on-a-tcpip-port-in-windows-using-netstat/#.W8BOvfZRWUk
				//serach process PID
				tasklist | findstr -ir ssms
				netstat -aon | more
				netstat -aon | more | findstr -ir 9996
			]
		
			git[
				https://git-scm.com/book/en/v2
				git_branching_strategies[
					//practice guy, new MS tutorials for Azure high grade
					https://docs.microsoft.com/en-us/azure/devops/repos/git/git-branching-guidance?view=vsts
					//straight to the point , main veriations
					https://www.javacodegeeks.com/2015/11/git-branching-strategies.html
					//multydev consistency rare detailed concept,colorfull chart,  Vincent Driessen
					https://nvie.com/posts/a-successful-git-branching-model/
					//reupgrade of Vincent Driessen matreial
					https://jp-lambert.me/git-gitflow-and-continuous-integration-for-dummies-5e4300148fbf
					//constructive critics of  Vincent Driessen
					https://github.com/petervanderdoes/gitflow-avh/issues/287				
					//atlassian guide for CI
					https://www.atlassian.com/continuous-delivery/continuous-delivery-workflows-with-feature-branching-and-gitflow
				]
				commands[
					git checkout -b <branch> --track <remote>/<branch>
					
					//move head 2 commits back
					git reset --hard HEAD~2
					
					//squash to commit other commits; 
					git rebase -i HEAD~2
					change peak to aquash
					
					//get hash of commit under head
					git rev-parse HEAD
					
					git rev-head 
					git checry-pick commitHash
				]

			]
					
		]
		jira[
			https://jira..ru/secure/ConfigureReport.jspa?startDateId=01%2F%D0%BE%D0%BA%D1%82%D1%8F%D0%B1%D1%80%D1%8C%2F2018&endDateId=31%2F%D0%BE%D0%BA%D1%82%D1%8F%D0%B1%D1%80%D1%8C%2F2018&jqlQueryId=&showWorklogCommentsId=true&selectedProjectId=11001&reportKey=com.synergyapps.plugins.jira.timepo-timesheet-plugin%3Atimesheet-report&%D0%94%D0%B0%D0%BB%D0%B5%D0%B5=%D0%94%D0%B0%D0%BB%D0%B5%D0%B5
		]
		sql[
			--seach tables by columnnames
			use MoscowVideoPreRelease;
			SELECT c.name  AS 'ColumnName'
			,t.name AS 'TableName'
			FROM        sys.columns c
			JOIN        sys.tables  t   ON c.object_id = t.object_id
			WHERE       c.name LIKE '%amera%' or c.name LIKE '%roup%'
			ORDER BY    TableName;
			
			tablespace[
				use MoscowVideoPreRelease;
				select t.name,    
				CAST(ROUND(((SUM(a.total_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS TotalSpaceMB
				 FROM sys.tables t
				INNER JOIN sys.indexes i ON t.OBJECT_ID = i.object_id
				INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
				INNER JOIN sys.allocation_units a ON p.partition_id = a.container_id
				where t.NAME ='tablename'
				group by t.name
			]
			
		]
		razor[
			attribute="@()"
		]
		source[
			//EmitMapper
			https://github.com/MetSystem/EmitMapper
		]		
		EF[
			https://medium.com/@hoagsie/youre-all-doing-entity-framework-wrong-ea0c40e20502
		
			https://docs.microsoft.com/en-us/nuget/tools/package-manager-console
			https://coding.abel.nu/2012/03/ef-migrations-command-reference/
			
			//expression trees
			https://blog.marcgravell.com/2008/10/express-yourself.html			
		]
		powershell[
			get-executionpolicy
			get-help set-executionpolicy
			set-executionpolicy remotesigned
		]
		hashs[
			http://eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#fnv
		]
		vs[
			//debugging source code
			https://blogs.msdn.microsoft.com/mcsuksoldev/2010/09/09/debugging-the-net-framework-source-code/
		]		
		newRepositoryClass[
		
			public class RepositoryNew<K,T> : IRepositoryNew<K,T> where T : class
			{
			bool disposed = false;

			public DbContext _context;

			public RepositoryNew()
			{

			}
			public RepositoryNew(DbContext context_)
			{
			this._context = context_;
			}

			public DbContext GetContext()
			{
			DbContext result = null;
			if (this._context != null)
			{
				result = this._context;
			}
			return result;
			}

			public void BindContext(DbContext context)
			{
			this._context = context;
			}
			public T Add(T item)
			{           
			try
			{
				this._context.Set<T>().Add(item);
			}
			catch (Exception e)
			{
				item = null;
				System.Diagnostics.Trace.WriteLine(e.Message);
			}
			return item;
			}
			public IQueryable<T> GetALL()
			{
			IQueryable<T> result = null;
			result = from s in this._context.Set<T>() select s;
			return result;
			}
			public IQueryable<T> GetTOP10()
			{
			IQueryable<T> result = null;
			try
			{
				result = (from s in this._context.Set<T>() select s).Take(10);
			}catch(Exception e)
			{
				System.Diagnostics.Trace.WriteLine(e.Message);
			}
			return result;
			}
			public T GetByID(K id_)
			{
			T result = null;
				result = this._context.Set<T>().Find(id_);
			return result;
			}
			public void AddFromList(List<T> items)
			{
			this._context.Set<T>().AddRange(items);
			}

			public void DeleteByID(K id_)
			{            
			try
			{
				T item = this._context.Set<T>().Find(id_);
				if (item != null)
				{
					this._context.Set<T>().Remove(item);
				}
			}
			catch (Exception e)
			{
				System.Diagnostics.Trace.WriteLine(e.Message);
			}
			}

			public void RemoveByID(K id_)
			{
			try
			{
				T item = this._context.Set<T>().Find(id_);
				if (item != null)
				{
					this._context.Set<T>().Remove(item);
				}
			}
			catch (Exception e)
			{
				System.Diagnostics.Trace.WriteLine(e.Message);
			}
			}

			public IQueryable<T> GetByFilter(Expression<Func<T, bool>> expession)
			{
			IQueryable<T> result = null;
			result = from s in this._context.Set<T>().Where(expession) select s;
			return result;
			}
			public void Save()
			{
			try
			{
				this._context.SaveChanges();
			}catch(Exception e)
			{

			}
			}
			public T Update(T item, K id)
			{
			T toUpdate = null;
			try
			{
				//this._context.Set<T>().Attach(item);
				//var entry = this._context.Entry(item);

				toUpdate = this._context.Set<T>().Find(id);
				this._context.Entry(toUpdate).CurrentValues.SetValues(item);
				Save();

				//if (toUpdate != null)
				//{
				//    toUpdate = item;
				//    Save();
				//}
			}
			catch (Exception e)
			{
				toUpdate = null;
				System.Diagnostics.Trace.WriteLine(e.Message);
			}

			return toUpdate;
			}

			protected virtual void Dispose(bool value)
			{
			if (!this.disposed)
			{
				if (value)
				{
					this._context.Dispose();

				}
			}
			this.disposed = true;
			}
			public void Dispose()
			{
			Dispose(true);
			GC.SuppressFinalize(this);
			}

			}

		]
		architecture_patterns[
			https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013
		]
		quartz[
			https://jayvilalta.com/blog/2014/06/04/understanding-the-disallowconcurrentexecution-job-attribute/
		]		
		liblist[
			https://topshelf.readthedocs.io/en/latest/#
			https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=2ahUKEwjfypWdjZreAhWniKYKHTDBDnAQFjABegQICBAB&url=https%3A%2F%2Farchive.codeplex.com%2F%3Fp%3Demitmapper&usg=AOvVaw0_lHfeypLG9ciEL5wA0PCz
			
		]
		
	]
	