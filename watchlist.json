
//toSortNew.unsorted 3300 lines
watchlist[

	//Most usefull links
	toSortNew()
	{

		languages[
			eng[
			
				//literal country names meaning
				https://matadornetwork.com/read/map-shows-literal-meaning-every-countrys-name/
				
				idioms[
					//88 idioms
					https://www.independent.co.uk/life-style/british-phrases-english-language-sayings-britain-england-uk-different-a8138046.html
					//idioms
					https://www.ef.com/wwen/english-resources/english-idioms/
					https://www.businessinsider.com/british-slang-that-will-confuse-anybody-who-didnt-grow-up-in-the-uk-2017-11#take-the-biscuit-79
					
				]
				
			]
		]
			
		Businesses
		[
			bees[
				California  80 % world’s almonds
				15 years push out row crops
				Almond 1 acre two hives
				2.5 mln colonies (= hives ?) 2/3 commercial US honeybees
				448 boxes 50 mln bees
				700 boxex $ 1 mln
				Montana Dakota planes, more honey per hive in America
				500 hives $ 100 thsd
				maintain earlier 1 $ hive  now 4 $ hive
				Carniolan queens $31 ($28 for bulk)
			]
		]
		companies[
		
			RussianIT[

				https://ntechlab.ru/
				https://www.roadarlabs.com/
				https://rite.ru/
				
				IoT
				[
					//IoTplatform 2019 nominees
					https://www.rightech.io/ru
					https://clover.global/
				]
				
			]
						
			WorldIT[
				https://www.thoughtworks.com/
				
				//clojure creator project
				https://cognitect.com/
				
				//software ag
				https://www.softwareag.com/corporate/default.html
			]
			
			startUps[
				http://ironox.com/
			]
			
		]
		
		deliveres[
			
			local[			
				//electro
				http://www.platan.ru/
			]
		
		]

		science[
			constants[
				light speed - 299792458 m/s
			]
			astronomy[
				distant galaxies expansion - +70 km/s per megaparsec (3.26 mln light yeats)
			]
			math[
				https://ru.wikipedia.org/wiki/%D0%A3%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F_%D0%9D%D0%B0%D0%B2%D1%8C%D0%B5_%E2%80%94_%D0%A1%D1%82%D0%BE%D0%BA%D1%81%D0%B0
				
			]
			bio[				
				med[
					hormones[
						//hunger hormones
						ghrelin
						leptin
					]
				]
				
			]
			unitconvertions[
				parsec - 3,26 ligth year
				m/s - km/s *3.6
			]
		]
		
		ComputerScience
		[
			https://en.wikipedia.org/wiki/Computer_science
		
			//thread
			https://en.wikipedia.org/wiki/Thread_(computing)
			//non blocking algorithm
			https://en.wikipedia.org/wiki/Non-blocking_algorithm
			//concurencyControl
			https://en.wikipedia.org/wiki/Concurrent_computing
			https://en.wikipedia.org/wiki/Metastability_(electronics)
			https://en.wikipedia.org/wiki/Concurrency_control
			
			
			
			HardwareArchitecture[						
				
				//history
				https://en.wikipedia.org/wiki/History_of_general-purpose_CPUs#1990_to_today:_Looking_forward
				
				https://en.wikipedia.org/wiki/Microarchitecture
				
				//intel generation
				https://en.wikipedia.org/wiki/List_of_Intel_CPU_microarchitectures
				
				
				//cache coherence
				https://en.wikipedia.org/wiki/Cache_coherence
				
				//DMA
				https://en.wikipedia.org/wiki/Direct_memory_access
				//memory pages 
				https://en.wikipedia.org/wiki/Page_table
				https://en.wikipedia.org/wiki/Memory_type_range_register
				
				//nahalem architecture
				https://web.archive.org/web/20140811023120/http://sc.tamu.edu/systems/eos/nehalem.pdf
				
				//assembler comparison
				https://en.wikipedia.org/wiki/Comparison_of_assemblers
				x86[
					https://en.wikipedia.org/wiki/X86
					//MASM
					https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler
					http://www.infernodevelopment.com/introduction-masm32
					//NASM
					https://en.wikipedia.org/wiki/Netwide_Assembler
					https://www.nasm.us/doc/nasmdoc0.html
				]
				arm[
					https://www.arm.com/
					https://en.wikipedia.org/wiki/ARM_architecture
				]
				
				asynchronous_circuits[
					https://en.wikipedia.org/wiki/Asynchronous_circuit
				]
			
			]					
								
			SoftwareArhitecture[
				
				https://hackernoon.com/38-actions-and-insights-to-become-a-better-software-architect-f135e2de9a1b
				RESTvsSOAP[
						Protocol,function-driven "getUser"
						can decome stateful		
						SSL support reglaments ACID build id compliance
						XML
						any protocol: HTTP,SMTP,TCP,UDP
						strinct format :envelope,header
						
					REST:
						architecture style, data-driven "user"
						while REST more flexible structure		
						Stateless: each request contains all information server needs to know
						no server side sessions
						HTTPS
						HTML,JSON,XML
						HTTP
						Any number of layers after server not affect client
						Response can contain executable code
						
				]
				
				//SOA, MSA, microservises
				SaS[
				
					SaS (system as a service) -consists of -> EIA (integration mechanism) 
					-> BUS via  MOM (message oriented niddleware) -realized with-> MQS (messaging queing service) 
					-with building blocks of-> Message broker (kafka,RabbitMQ,redis,ActiveMQ,Enduro/x)
					
					Blocking Middleware RPC (Remote procedure call), ORB (Object request Broker)
					or SpokeHub
					
					//SOA
					https://en.wikipedia.org/wiki/Service-oriented_architecture					
					//EIA
					https://en.wikipedia.org/wiki/Enterprise_application_integration
					//ESB
					https://en.wikipedia.org/wiki/Enterprise_service_bus
					//SpokeHub
					https://en.wikipedia.org/wiki/Spoke%E2%80%93hub_distribution_paradigm
					
					//MOM
					https://en.wikipedia.org/wiki/Message-oriented_middleware
					//MQS
					https://en.wikipedia.org/wiki/Message_queuing_service	
					//Message broker 
					https://en.wikipedia.org/wiki/Message_broker
					//Apache Kafka
					https://en.wikipedia.org/wiki/Apache_Kafka 
					uses for coordination
					ZooKeper
					https://en.wikipedia.org/wiki/Apache_ZooKeeper
					//Protocol
					//AMQP	
					https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol		
					//RabbitMQ (stands on AMQP)
					//alternate protocols 
					//STOMP
					https://en.wikipedia.org/wiki/Streaming_Text_Oriented_Messaging_Protocol
					//XMPP
					https://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol
					//MQTT
					https://en.wikipedia.org/wiki/MQTT
					//OpenWire 
					//ActiveMQ
					https://en.wikipedia.org/wiki/OpenWire_(binary_protocol)
					
					//microservice Reference Architecture
					https://www.microservices.com/reference-architecture/
					
			
					https://www.quora.com/What-are-the-best-sources-to-learn-on-microservices
					http://index-of.es/Varios/Sam%20Newman-Building%20Microservices-O%27Reilly%20Media%20(2015).pdf
					https://www.youtube.com/watch?v=wgdBVIX9ifA
					https://www.youtube.com/watch?v=sSm2dRarhPo
										
					https://www.nginx.com/blog/nginmesh-nginx-as-a-proxy-in-an-istio-service-mesh/
					https://www.nginx.com/blog/what-is-a-service-mesh/
					https://www.nginx.com/blog/introducing-the-nginx-microservices-reference-architecture/
					https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
					https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/characteristics-of-microservices.html
					
					//why msa fails
					synch problem -> 
					Open tracing events to jager
					chareography against model
					voice of the machine vs voice of the business
					https://www.youtube.com/watch?v=QDufAdzZZt0


					pros[
						polyglot,
						organizational and technical benefits(different concurency models),
						temporal decoupling 
					]
					
					strategies[

						database:
							shared-service knows other service tables
							simple and ACID
							tight coupling
							
							database per service
							loose couple
							but complex, 2PC not n option
							
						IPC:
							events
							eventual consistency
								example:
									Order_service-[order to create]->...-[order created]->Customer_service
									Customer_service-[creadit ok,not ok]->Order_service
							DualWriteProblem:

					]
					
					patterns[
						decomposition[
							sidecar proxy //sideckick
							https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar
							//ambassador
							https://docs.microsoft.com/en-us/azure/architecture/patterns/ambassador
							//circuit breaker
							https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
							https://www.nginx.com/blog/microservices-reference-architecture-nginx-circuit-breaker-pattern/
						]
					]
		
					untipatterns[
						distributed_monolith[
							//binary_cpoupling
							shared library, network clients
							
						]
					]
					
				]
				
				simulation[
					//High level architecture 
					https://en.wikipedia.org/wiki/High-level_architecture
					//HLA tutorial
					http://www.pitch.se/hlatutorial/
					//DIS
					https://en.wikipedia.org/wiki/Distributed_Interactive_Simulation
				]
						
				//ring layered software arhitecture 
				https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html
				//parallel computing
				http://juser.fz-juelich.de/record/60553/files/NIC225296.pdf										
				
				InfrastructurePersistanceLayer[
				https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design
				
					SpecificationPattern[
						https://deviq.com/specification-pattern/
					
					]
					
					Repositories[
						//repositories and uows switch, and realization
						https://deviq.com/repository-pattern/						
					]
					
					EF[
						//avoid lazy loading 
						https://ardalis.com/avoid-lazy-loading-entities-in-asp-net-applications
					]
					
				]
				
				Access[			
					//ABAC
					https://en.wikipedia.org/wiki/Attribute-based_access_control			
				]
				
				DataConsistency[
					//CAP theorem
					https://en.wikipedia.org/wiki/CAP_theorem
					//distributed transaction
					https://en.wikipedia.org/wiki/Distributed_transaction
					
					Concurency[
					https://en.wikipedia.org/wiki/Concurrent_computing
					
						algebraic structure[
							History monoid
							https://en.wikipedia.org/wiki/History_monoid
						]
						
						Iteraction of concurrent systems
							
							Actor model
								https://en.wikipedia.org/wiki/Actor_model
							
							Process calculi
								https://en.wikipedia.org/wiki/Process_calculus
							[
								Communicating_sequential_processes(CSP)
								https://en.wikipedia.org/wiki/Communicating_sequential_processes
							
							]
														
							CSPvsActor[
								
								CSP primitives:annonimous			
								CSP messaging:channels;Actor:destination actor
									(channels can have identity, actors can acs as channels)
									rendezvous - channels cannot send msg until receiver can accept
									Actor:async msg sending
									(rendezvous can vofrm buffers acting sync; 
									async systems can implement acknoledgment protocol to synch sender-receiver)
									
							]
							
					]
					
				]
				
					https://llvm.org/docs/GarbageCollection.html
				
			]
			
			DataStructures[

				//DAG directed acyclic graph
				https://en.wikipedia.org/wiki/Directed_acyclic_graph

				HashSet vs. TreeSet vs. LinkedHashSet
				https://dzone.com/articles/hashset-vs-treeset-vs

				//algebraic data type
				https://en.wikipedia.org/wiki/Algebraic_data_type

				Graph[
					
					GraphInSQL [
		
						Problem: 
							EF query hierarhy(graph) data
						
						Theory:
						//adjacency list, nested sets, closure tables (variant of adjancy list), adjancy matrix
						//all use vanilla sql
						https://en.wikipedia.org/wiki/Adjacency_list
						https://en.wikipedia.org/wiki/Nested_set_model
						http://technobytz.com/closure_table_store_hierarchical_data.html
						https://en.wikipedia.org/wiki/Adjacency_matrix
						//Hierarhial queries + CTEs
						https://en.wikipedia.org/wiki/Hierarchical_and_recursive_queries_in_SQL
						
						nested sets 
							-mooving subtrees
							
						adjacency list
							+mooving subtrees
							-query all nodes
						
						closure tables 
							-mooving subtrees
						
						Realization:
							EF:
								ancestors descedant
								https://stackoverflow.com/questions/11565423/most-efficient-method-of-self-referencing-tree-using-entity-framework/11565717#11565717
								
								nested include
								https://stackoverflow.com/questions/11676513/how-can-i-use-entity-framework-on-an-object-graph-past-a-depth-of-2-with-mysql-c
						
						SQL:
							
							https://inviqa.com/blog/graphs-database-sql-meets-social-network
							
							postgre vanilla sql:
								//adjacency list vs nested sets
								https://explainextended.com/2009/09/25/adjacency-list-vs-nested-sets-sql-server/	
								
								//closure Tables 
								https://coderwall.com/p/lixing/closure-tables-for-browsing-trees-in-sql
								
							mssql:
							
								sql 2017 graph feature
								https://cloudblogs.microsoft.com/sqlserver/2017/04/20/graph-data-processing-with-sql-server-2017/
								https://www.sqlshack.com/introduction-sql-server-2017-graph-database/
								https://www.red-gate.com/simple-talk/sql/t-sql-programming/sql-graph-objects-sql-server-2017-good-bad/
								
								//sql hierarchyid and buildin procedures
								https://docs.microsoft.com/en-us/sql/relational-databases/tables/lesson-2-creating-and-managing-data-in-a-hierarchical-table?view=sql-server-2017
								https://docs.microsoft.com/en-us/sql/relational-databases/tables/lesson-1-converting-a-table-to-a-hierarchical-structure?view=sql-server-2017

								
						MSSQL[
							instance name:MSSQLSERVER
							AAAPC\User (User)
							distributed relay controller:DRC

							AAAPC
							sa:q2w3e4E$W#Q@
						]

					]
					
				]
				
				BigO[
				
				
					access search insert delete
					avarage
					worst 

					array 
					01 0n 0n 0n 

					stack,queue,SLL,DLL
					0n 0n 01 01 

					binary search,cartesian b-tree, red black, splay, avl, kd trees
					avarage 
					0logn

					binary serach,cartesian,kd 
					worst
					0n

					cartesian, splay 
					access 
					n\a

					Space,Search,Insert,Delete
					(Avarage/WorstCase)
					HashTable[
						Space On On
						Search O1 On
						Insert O1 On
						Delete O1 On
					]				
					
					binarySearchTree[
						Space On On
						Search Ologn On
						Insert Ologn On
						Delete Ologn On
						
					]
					k-dTree[
						Space On On
						Search Ologn On
						Insert Ologn On 
						Delete Ologn On
					]					
					
					ternarySearch[
						Search Ologn On
						Insert Ologn On
						Delete Ologn On
					]
					
					b-tree[
						Space On On
						Search Ologn Ologn
						Insert Ologn Ologn
						Delete Ologn Ologn
					]
					
				]
				
				HashTable[
					load factor = n/k
					n - items count 
					k - bukets count
					
					JAVA 10 HashMap  0.75
				]
				
			]
				
			webCommunication[
			
				//different communication techniques on the web
				//AJAX,Long poll,WebSockets,WebRTC,Server-Sent Events
				https://stackoverflow.com/questions/10028770/in-what-situations-would-ajax-long-short-polling-be-preferred-over-html5-websock
				
				//websockets vs ajax
				https://lostechies.com/chrismissal/2013/08/06/browser-wars-websockets-vs-ajax/
				
			]			
			 
			programmingLanguages[
								
				//FBP flow base programming
				https://en.wikipedia.org/wiki/Flow-based_programming
	
			]
			
			Algorithms[
				
				//bigO cheatsheet
				http://bigocheatsheet.com/
				
				//uuid in Windows
				http://rsdn.org/article/Crypto/UuidCrypto.xml
				//Hascode recommendations
				https://ericlippert.com/2011/02/28/guidelines-and-rules-for-gethashcode/
				//visualization
				https://www.cs.usfca.edu/~galles/visualization/Algorithms.html
				
				geeksWiki[
//insertion sort
https://www.geeksforgeeks.org/insertion-sort/
//quicksort
https://www.geeksforgeeks.org/quick-sort/
//heaspsort (heapify + siftdown)
https://www.geeksforgeeks.org/building-heap-from-array/
https://en.wikipedia.org/wiki/Heap_(data_structure)
//mergesort
https://www.geeksforgeeks.org/merge-sort/
				]
				
				bigO[
					
					best avg worst
					memory
					stable 

					insertsort 
					0n n^2 n^2
					1
					yes

					quicksort
					nlogn | n exist nlogn n^2
					logn worst n | sedgewick logn worst
					no | yes exist

					heapsort
					n if distinct keys | nlogn nlogn nlogn
					o1
					no
					
					mergesort
					nlogn nlogn nlogn 
					n | block merge hybrid 01 
					yes

					

					introsort 
					nlogn 
					logn
					no

					timsort
					cubesort
					n nlogn nlogn
					n
					yes
					
				]
				
			]
			
			MachineLearning[
				//Frameworks
				https://pytorch.org/
				https://www.tensorflow.org/
			]
			
			Memorization[
				storing results of expencive functions
			]
		
		]
			
		Engeneering[
		
			SoftwareEngeneering
			[
			
				architecturePatterns[
				
					DDD[
												
						//https://docs.microsoft.com/en-us/dotnet/standard/modern-web-apps-azure-architecture/common-web-application-architectures
						//https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html
						Hexagonal_Clean_Onion_architecture[
						
							layers_decomposition[

								UserInterface
								(controllers,filters,views,viewmodels,startup)->
									controllers,viewmodels
								Infrastructure 
								(EF,data access impl (repository),infr specific service impl (logger,notifier))->
									repositories, implimentation services
								ApplicationCore
								(Entities,Interfaces,Services,DTOs)->
									entity interfaces, domain services and iterfaces

							]
							
							dependency_flow[

								applicationCore<-infrastructure
									infrastructure<-UI
								applicationCore<-UI
								applicationCore<-tests

							]

						]
					
						//https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/ddd-oriented-microservice
						MSA_DDD (application,domain,infrastructure layer)[
						
layers_decomposition {

//upper depends on lower 

	Application Layer (
		from domain: use enity obj, repository int/contr
		deom infrastructure: repository impl throught DI
	)-> 
		web api, network access, API contracts, commands and handlers, queries, micro ORM (dapper)	
		
	Infrastructure layer 
	(use entity objects to update DB and other DB, cash or infr) ->
		Data persistance 
			Repository Implementation
		ORMS and data acces 
			EF, NoSql
		Other infrastructure impl
			Logging, crypto, search engine etc.
			
	Domain layer ->
		domain entity model, POCO classes, domain entities data + behaviour,
		DDD patterns[domain aggregate,aggregate  root,  Value obj,repositories contracts/interfaces for DI]
}

layers_dependencies{
Domain layer 	<- Infrastructure layer  
Domain layer , Infrastructure layer  <- Application Layer
			
	
}

						]
						
					]
					
		  
			   
				   
				]
											
				reverseEngenering[
				
					https://en.wikipedia.org/wiki/Radare2
					https://www.pelock.com/articles/reverse-engineering-tools-review
					https://www.foo.be/cours/dess-20122013/b/Eldad_Eilam-Reversing__Secrets_of_Reverse_Engineering-Wiley(2005).pdf
					http://shop.oreilly.com/product/9780596005450.do
					https://courses.ece.ubc.ca/cpen442/previous_years/2007_1_spring/modules/term_project/reports/2007/software_cracking.pdf
					
					debuggers[
					https://en.wikipedia.org/wiki/Interactive_Disassembler
						https://en.wikipedia.org/wiki/GNU_Debugger
						https://en.wikipedia.org/wiki/Kernel_debugger			
						https://en.wikipedia.org/wiki/SoftICE
					]
					
					cracking[
						https://en.wikipedia.org/wiki/Software_cracking
					]
				]
				
				webDevelopment[
					
					webDesign[
						
						prototypes[
							
							https://medium.com/@denysergushkin/20-%D0%B8%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D1%82%D0%B8%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BE%D1%82-%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE%D0%B3%D0%BE-%D0%B8-%D0%B3%D1%80%D1%8F%D0%B7%D0%BD%D0%BE%D0%B3%D0%BE-wireframe-%D0%BA-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%BC%D1%83-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D1%82%D0%B8%D0%BF%D1%83-210f223323fe
							https://mobirise.com/_l/bootstrap-website-builder/?gclid=EAIaIQobChMIgJrLp-6H3AIVhYQZCh3Buwh6EAEYASAAEgJAKPD_BwE
							
						]
						
						Mockups[
							
							https://www.creativebloq.com/ux/3-way-create-website-mockups-11513936
							
						]
						
					]
										
				]
						
				devops[
					
					CI[
						https://github.com/marketplace/category/code-quality
						https://about.gitlab.com/features/gitlab-ci-cd/
					]
								
					npm proxy[
					
						npm set strict-ssl false –g
						npm config set registry "http://registry.npmjs.org/" -g
						npm config set proxy http://msk1.unix.nspk.ru:3128 –g

						npm --registry http://nexus..ru:8081/nexus/content/repositories/npmjs/ install -g react react-dom

					]
				
				]			
				
				https://en.wikipedia.org/wiki/Software_engineering
				
				CI_continiousIntegration_strategies[
									
					//Pure CI build on a dollar day
					https://www.jamesshore.com/Blog/Continuous-Integration-on-a-Dollar-a-Day.html
					//Trunk based development
					https://paulhammant.com/2013/04/05/what-is-trunk-based-development/
					
					//Continious Isolation
					https://paulhammant.com/2017/02/14/fake-news-via-continuous-isolation/
					
					//CI theatre
					https://www.gocd.org/2017/05/16/its-not-CI-its-CI-theatre.html
				]			
				
				workflow[
					//minimal valueable project strategy
					MPV[
						https://medium.freecodecamp.org/how-we-went-from-three-failed-projects-to-1200-users-in-just-one-week-9db9624ccdf7
						//front portfolio design
						https://medium.freecodecamp.org/the-portfolio-hack-that-will-make-everyone-want-to-hire-you-58079cfed0b
					]
				]
			
			]
		
			mech
			[
				//solidworks CAD atm
				https://www.youtube.com/watch?v=osW5RnYIVoc
				//FEM FDM FVM differencies
				https://www.machinedesign.com/fea-and-simulation/what-s-difference-between-fem-fdm-and-fvm
			]

			electro
			[
				https://www.youtube.com/watch?v=qVeERT4nyz8
				
				//resitor detector
				https://www.audiomania.ru/content/art-1464.html
				
				companies[
					//НИИТФА
					http://niitfa.ru/
					//ИПМТ ДВО РАН
					http://www.imtp.febras.ru/razrabotki/78.html?task=view
				]
				
				examples[
					http://www.imtp.febras.ru/razrabotki/78.html?task=view
					http://www.imtp.febras.ru/razrabotki/76.html?task=view
				]

				
			]
		
		]
		
		GuidesRoadmaps[
			
			rabbitmqTutor[
							
				t1[
					dotnet new console --name Send
					dotnet restore
					cd Send
					dotnet run

					dotnet new console --name Receive
					dotnet restore
					cd Receive
					dotnet run

					dotnet add package RabbitMQ.Client
					dotnet restore


					cd C:\worflow\progs\rabbitmqHW\Receive
					dotnet run
					command.layouts.partner_layout_list.get
					command.layouts.partner_layout_list.get

					cd C:\worflow\progs\rabbitmqHW\Send
					dotnet run
				]

				t2[
					dotnet new console --name NewTask
					dotnet new console --name Worker

					cd NewTask
					dotnet add package RabbitMQ.Client
					dotnet restore

					cd ../Worker
					dotnet add package RabbitMQ.Client
					dotnet restore
				]
				
			]
						
			Clojure[
				http://www.clojurebook.com/
				https://hackr.io/tutorials/learn-clojure
				https://clojure.org/community/community_stories
			]

			DART[
					//Dart Google tool
					https://www.dartlang.org/			
					//dart
					https://en.wikipedia.org/wiki/Dart_(programming_language)	
					//flutter 
					https://en.wikipedia.org/wiki/Flutter_(software)
				]	

				.NET
				[

					//differencies between standarts
					.NET_CORE_STANDART
					[

						https://msdn.microsoft.com/en-us/magazine/mt842506.aspx
						
						.net framework - windows
						.net core - win,linux,macOs console + ASP.NET core
						.net standart - libs for .net framework, core & xamarin

					]
					
					C#
					[
						//code sourcebase 
						https://referencesource.microsoft.com/#mscorlib/system/collections/generic/dictionary.cs,523713dd12290314
						
						//async await profiling
						https://stackify.com/csharp-async-await-task-performance/
						//type vs gettype performance comparison
						https://blogs.msdn.microsoft.com/vancem/2006/10/01/drilling-into-net-runtime-microbenchmarks-typeof-optimizations/		
						//unit test comparison
						http://www.anarsolutions.com/automated-unit-testing-tools-comparison/
						//in readonly
						https://blogs.msdn.microsoft.com/seteplia/2018/03/07/the-in-modifier-and-the-readonly-structs-in-c/
						//async ui synch context
						https://medium.com/bynder-tech/c-why-you-should-use-configureawait-false-in-your-library-code-d7837dce3d7f
						//Windows Drivers
						https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/
						
						
						//hashs
						http://eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#fnv
						[
							typeof -> compile time
							
							.GetType() -> runtime
							is -> runtime
							
						]
					
						patterns[
						//enumPattern		
						https://www.infoworld.com/article/3198453/c-sharp/how-to-implement-a-type-safe-enum-pattern-in-c.html									
						
						singleton[
						
							https://csharpindepth.com/articles/singleton
							public sealed static class SingleTone
							{
								private SingleTone(){}
								
								public static SingleTone Instance {get{return Internal.instance()}};
								
								private class Intenal(){
									static Internal(){
										
									}
									
									internal static readonly SingleTone instance = new SingleTone();
								}
							}
							
						]
						
					]
					
						.NET_tools_locations[

							C:\Windows\Microsoft.NET\Framework64\v4.0.30319
							ilasm -> C# source code to IL
							nGen.exe -> IL to CPU source generator
							csc.exe -> compiler 
							scs.rsp - default command keys for csc.exe compiler
							
							"C:\Program Files (x86)\MSBuild\14.0\Bin\csc.exe"
							csc.exe -> rosylyn compiler
								sample usage
								[
									public sealed class Programm{
										public static void Main(){
											System.Console.WriteLine("programm started");
										}
									}
									
"C:\Program Files (x86)\MSBuild\14.0\Bin\csc.exe" -out:C:\111\move\src.exe C:\111\move\src.cs
"C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe" -out:G:\disk\Files\git\CIL\src.exe G:\disk\Files\git\CIL\src.cs
//roslyn
"G:\disk\Progs\rosylin\Microsoft.Net.Compilers.3.1.1\tools\csc.exe" -out:G:\disk\Files\git\CIL\src.exe G:\disk\Files\git\CIL\src.cs
"C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\ildasm.exe" G:\disk\Files\git\CIL\src.exe

								]

							C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.7.2 Tools
							ildasm.exe -> IL to C# source code
							PEVerify -> verifies assembly on unsafe codes
							
						]						
						tipsNtricks[
							{} //<------ Adding a Nop allows a breakpoint here.
							
							exceptionThrowing[
								try
								{
									MethodB();
								}
								catch (Exception ex)
								{
									//Option 1 - Overrides original stack trace
									throw ex;

									//Option 2 - Keeps original stack trace
									throw;

									//Option 3 - Keeps original stack trace and adds aditional information
									throw new Exception("Additional information...", ex);

										
								}
							]
						
						]						
						UtilsAndSites[
						
							//decompiler
							https://sharplab.io/
							
							//IlSpy
							https://github.com/icsharpcode/ILSpy/releases
							
							//web copilers
							//decompiler
							https://sharplab.io/
							https://try.dot.net/
							
							sharplab[
								
								basicMemgraphProg
								{
								
									using System;
									using System;
									using System.Collections.Generic;
									using System.Linq;
									using System.Text;
									using System.Threading.Tasks;

									public static class Program
									{
										public static void Main(){
											Console.WriteLine("runned");
											MemGraph.GO();
										}
										
									}

									public static class MemGraph {
										
										public static void GO(){
											var a = new Object[]{1,2,3} ;
											var b = new int[]{1,2,3} ;
											
											Inspect.MemoryGraph(a,b);
										}
									}
								
								}

							]
						
						]
						
						frameworks[
						
							quartz[
										
								//Quartz Template

								---
								await scheduler.Start();
								*<
								await scheduler.Shutdown();


								---
								HelloJob : IJob
								public Task Execute(IJobExecutionContext context)


								---
								IJobDetail job = JobBuilder.Create<HelloJob>()
									.WithIdentity("job1", "group1")
									.Build();

								// Trigger the job to run now, and then repeat every 10 seconds
								ITrigger trigger = TriggerBuilder.Create()
									.WithIdentity("trigger1", "group1")
									.StartNow()
									.WithSimpleSchedule(x => x
										.WithIntervalInSeconds(10)
										.RepeatForever())
									.Build();

								// Tell quartz to schedule the job using our trigger
								*<
								await scheduler.ScheduleJob(job, trigger);
							]
						
						]
						
						shorthands[
						
							//if_else_ifnull 
							var a = b ?? c;
							var a = b ? c : d;
							var a = b?.c : d;
							
						]

						fieldVsProperty[
							o- changing public fields need calling code recompilation
								while public properties look the same
							o- easier to work with reflections
							
							//autoimplemented read-only prop
							{get; } = Guid.NewGuid();
							public P(string input) => _input= input;
						]						
						valuetypes[
							
							bite 8bit -128 127
							ubite 8bit 255
							short 16bit -32768 32767	
							ushort 16bit 65535
							int 32bit -2 147 483 648 +2 147 483 647
							uint 32bit 4 294 967 295
							long 64bit -9 223 372 036 854 775 808  +9 223 372 036 854 775 807
							ulong 64bit 18 446 744 073 709 551 615		
							
							float 32bit ~6-9 digits
								+- 1.5x10^-45 - 3.4X10^38
							double 64bit ~15-17 digits
								+- 5.0x10^-324 - 1.7x10^-308
							decimal 128bit ~128 bit ~25-29 digits
								+- 1.0x10^-28 - +-7.9x10^28
							
							char 16bit
							
							byte[
								AND 1 & 1 -> 1
								OR  1|0 & 0|1 -> 1
								NOT 1 -> 0 , 0 -> 1
							]
						]	
						methods[
							o- (int a, int b = 42) option values also need recompilation of client code
						]
						inheritance[
						
							o- overrides is considered as new implementation of base class
								so equal names first call is base
									method(int a)
									override method(doub b)
								first call is base method(int a)
									((base)inst).method() -> call overriden
							calls overriden version on:
								o- base <- child calls override only 
									on override of virtual 
								o- Iinterface <- child 
									if child explicit interface implements
									
						]
						collections[
					
							//iqueriable vs ienumerable
							https://developerhandbook.com/entity-framework/in-the-spotlight-demystifying-iqueryable-entity-framework-6/		
							//ienumerable
							https://danielwertheim.se/c-someenum-tostring-measured-to-be-400x-slower/
							
							https://medium.com/@kunaltandon.kt/ienumerable-vs-icollection-vs-ilist-vs-iqueryable-in-c-2101351453db

							IList<T>:ICollection<T>:IEnumerable<T>
							
							IQueriable<T>;IEnumerable<T>
							[
								> contains expression tree
								> with EF executes filtered SQL
							]
							IEnumerable<T>[
								> inmemory collection
								> executes where agains DB but hen filters in memory
							]
							
							Filtering
							Fucnt<T,bool>

							ICollection<T>
							Add,remove,update
							Count - O(1)

							IList<T>
							insert,remove
													

							IQueriable<T>
							Expression<Funct<T,bool>>
								
							
							list[
							
								.sort[
									https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1.sort?redirectedfrom=MSDN&view=netframework-4.7.2#System_Collections_Generic_List_1_Sort
									
									O (n log n) on avarage
									O (n2) in worst case
									
									n < 16 elem -> insertion sort
									n > 2 log n (n inpt arr length) -> heapsort alg
									else -> quicksort
									unstable -> not preserve equal item order
									
								]
								
								.addRange[
									
									if count+ > count cur -> rellocating to new arr
									
									if cann add without capacity increase O(n)
									
									else O(n + m) m- added, n - count
									
								]
								
								.contains-> linear search O(n)
								.convertAll -> linear search O(n)			
								.find -> linear search O(n)
								
							]
							IEnumerableICollectionILst[
								https://medium.com/@kunaltandon.kt/ienumerable-vs-icollection-vs-ilist-vs-iqueryable-in-c-2101351453db
									IEnumerable{- no crud,no count + Filter,enumerate}
									ICollection
									{
									count O(1), + enumerate,count,filter,crud
										generates Func<T,bool>
									}
									IList{:Ienumerable + :ICollection + insert in the middle ?O(n)}
									IQueryable{
										:ICollection
										generates Expression<Func<T,bool>>
									}
									
								IenumerablevsIlist[
									https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections
									https://stackoverflow.com/questions/1072614/should-i-always-return-ienumerablet-instead-of-ilistt
								]
							]
							Dictionary[
							
HashTable.Contains 
Dictionary.ContainsKey 
IComparer<T> -> using Item[Key] hash indexer
dictionary Source code 

https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/shared/System/Collections/Generic/Dictionary.cs

Add
FindEntry 369
Initialize 467
TryInsert 478

private struct Entry{
	public int next;
	public uint hashCode;
	private TKey key;
	private TValue value;
}

private int[]? _bukets;
private Entry[]? _entries;
							]
							
						]
						StringBuilder[
						
							.Length - current saved object
							.Capacity - buffer, doubled on exseed up to maxCap, can be set
								then ArgumentOutOfRangeException
							.MaxCapacity - adjust buffer until this, can be set on creation
							16 2 bln characters
								contains buffer, can be set at create time, 
								when it owerflows new larger buffer is allocated, and old copied to new
								mutates existing string
							
							indexing by Chars[int32] cant hit performance on large 
							 call 
								ToString()
								or 
								new StringBuilder(old,length);
							
							Searching:
								search before adding to StringBuilder
									- cannot find index
								
								ToString() before search
									- cumberstone ifcalled often
								
								use indexer Chars[Int32]
									- O(n^2) cumberstone for large number of chars 
										poor performanse

						]
						
						types[
							
							typeof() - instance type
							GetType() - runtime 
							is - runtime in inheritance tree
							
							is to bool
							if( a is type)
							as to null
							if((b as type) != null)
								
							is[
							//runtime 
							
	(true for compile and runtime types upper by hierarhy)
	cl1 : cl0
	cl2 : cl1

	true
	new cl1 is cl0, cl1 -> true
	new cl1 is cl2, cl1 -> false

	new cl2 is cl0,cl1,cl2 -> true

	new cl1 = cl2 is cl0,cl1,cl2 -> true


	//Init in type check
	(o is Person p ){
		p.Prop
	}
							]
							
						]
						
						performance[
							//nameof 
							http://www.erikschierboom.com/2015/12/31/csharp6-under-the-hood-nameof/
							//linqVsForLoop
							http://www.schnieds.com/2009/03/linq-vs-foreach-vs-for-loop-performance.html
						]
			
						async[
						
							links[

//asynchronous programming patterns							
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/
//system threading
https://docs.microsoft.com/en-us/dotnet/api/system.threading?view=netframework-4.7.2
//taks
https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks?view=netframework-4.7.2
//async in depth
https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
//asynchronous programming
https://docs.microsoft.com/en-us/dotnet/csharp/async
//introduction to sync
https://msdn.microsoft.com/en-us/magazine/dn802603.aspx
//should my db calls be async
https://blogs.msdn.microsoft.com/rickandy/2009/11/14/should-my-database-calls-be-asynchronous/
//Understanding Async, Avoiding Deadlocks
https://medium.com/rubrikkgroup/understanding-async-avoiding-deadlocks-e41f8f2c6f5d


http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html
http://blog.stephencleary.com/2012/02/async-and-await.html
https://msdn.microsoft.com/en-us/magazine/mt238404.aspx
https://msdn.microsoft.com/en-us/magazine/jj991977.aspx
https://stackify.com/csharp-async-await-task-performance/
https://docs.microsoft.com/en-us/dotnet/framework/network-programming/asynchronous-server-socket-example
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/
https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/?view=aspnetcore-2.1
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task?view=netframework-4.7.2

							]
																					
						//guidelines
						-> no global static objects , cause lead to eadlocks
						-> multiple invocated method must have userSate object with locked collection						
						-> there may be no thread
						only OS<->kernel comunication BaseClassLib BCL, I/O Completion Port//) IOCP,
						(Input output request Packet) IRP , Defered Procedure Call (DPC), Asynchronous PC APC
						BCL, overlap IOPC,APC, IRP ,DPC,Interrupt Service Routine (ISR)
						IPC interprocess comunication
						http://blog.stephencleary.com/2013/11/there-is-no-thread.html
						-> cannot be tested in .net console test from .net web api UI
						
						https://medium.com/rubrikkgroup/understanding-async-avoiding-deadlocks-e41f8f2c6f5d
						-> no .Result & no sync<->async calls						
						never user ...Async.Result() -> synch way, deadlock in asp.net WEB API
						
						//asynhronous programming module
							APM[
							
								//Blocking app
								IAsyncResult r = ... .beginInvoke(synhronous parameter,asyncCallback,stateObject)
								r.WaitOne();							
								.endInvoke(args[0],null,null)
								
								//async callback
								AsyncCallback callBack = new AsyncCallback(CallbackMethod);
								Dns.BeginGetHostEntry(host, callBack, host);
								public void CallbackMethod (IAsyncResult result){}
								
							]
							EAP[
							
								//implementation
								https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/component-that-supports-the-event-based-asynchronous-pattern
								//client
								https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern
								
								//single invoke
								simple method (string param)
								//multiple invoke
								simple method with userstate param(string param,object userState)
								methodComplete event ()
								
								//special delegate
								SendOrPostCallback, executes on the ThreadPool
								AsyncOpertion
								HybridDictionary
								
								
							]
						
						]
						multithread[

							TaskSheduller taskScheduler = TaskSheduler.FromCurrentSynchronizationContext();
							
						]
						parallel[
							
							links[
								//TPL dataflow 
								http://blog.i3arnon.com/2016/05/23/tpl-dataflow/
								//dataflow pipe
								//TPL Dataflow Home on the DevLabs Portal
								http://msdn.microsoft.com/en-us/devlabs/gg585582#
								//TPL Forum on MSDN:
								http://social.msdn.microsoft.com/Forums/en-US/tpldataflow/threads
								//parallel
								//PFX Team Blog:
								http://blogs.msdn.com/b/pfxteam/								
								//Parallel Computing - It's All About the SynchronizationContext
								https://msdn.microsoft.com/en-us/magazine/gg598924.aspx
						
							]
							
						]
						rx[
						
							//Rx
							http://www.introtorx.com/

						]						
						customBodyAttributes[
							https://weblog.west-wind.com/posts/2012/Aug/30/Using-JSONNET-for-dynamic-JSON-parsing
							https://www.dotnetcurry.com/aspnet-mvc/1368/aspnet-core-mvc-custom-model-binding
							https://blogs.msdn.microsoft.com/jmstall/2012/04/18/mvc-style-parameter-binding-for-webapi
							https://stackoverflow.com/questions/17645877/webapi-bind-from-both-uri-and-body
						]						
						DI[
							//factory invoke 		
							https://autofac.readthedocs.io/en/latest/advanced/delegate-factories.html
						]
						EF[
							//EF migrations
							https://coding.abel.nu/2012/03/ef-migrations-command-reference/
								dotnet ef migrations add LocalExpress --context sbDbEntities
								dotnet ef database update --context sbDbEntities
							]
							
						LINQ[
Immediate execution:
    Aggregate, All, Any, Average, Contains, Count, ElementAt, ElementAtOrDefault, Empty, First, FirstOrDefault, Last, LastOrDefault, Max, LongCount, Min, SelectMany, SequenceEqual, Single, SingleOrDefault, Sum, ToArray, ToDictionary, ToList, ToLookup. 
Deferred execution
    AsEnumerable, Cast, Concat, DefaultIfEmpty, Distinct, Except, GroupBy, GroupJoin, Intersect, Join, OfType, OrderBy, OrderByDescending, Range, Repeat, Reverse, Select, SelectMany, Skip, SkipWhile, Take, TakeWhile, ThenBy, ThenByDescending, Union, Where. 

//Left join
LINQ
	var leftJoin = 
	from s in t
	join c in t2 on t.A equals t.B into z
	from c in z.DefaultIfEmpty()
	select new {
		A = s?.A, 
		b = c?.B
	}
						]
	
						GC[
							o- three phases mark, sweep, compact
							o- three heaps, increase live time decrease cleanuo time
								shortleaved -> long leaved
							o- LOH more then 85 mb, different policy
							
						]

						DIcontainers[
							https://autofac.org/
							http://docs.automapper.org/en/stable/Getting-started.html							
						]
						msa[
							CQSR,Event Sourcing
							https://koukia.ca/a-microservices-implementation-journey-part-1-9f6471fe917
							https://koukia.ca/a-microservices-implementation-journey-part-2-10c422a4d402
							
							CQRS
							http://cqrs.nu/
							
							//developping MSA
							https://visualstudiomagazine.com/articles/2015/09/30/microservices-csharp.aspx
							
							//msa template
							https://github.com/begriffs/microservice-template
							https://begriffs.com/posts/2015-02-15-microservice-template.html
							
						]
						mvc[
		
							//read picture as byte stream
							https://stackoverflow.com/questions/36135012/how-we-can-get-image-byte-from-other-website-by-uri-in-mvc-and-c
							//asp.net using a different model in a partial view than in its parent?
							https://stackoverflow.com/questions/22534224/asp-net-using-a-different-model-in-a-partial-view-than-in-its-parent
							//partial view update
							https://stackoverflow.com/questions/19392212/how-to-use-jquery-or-ajax-to-update-razor-partial-view-in-c-asp-net-for-a-mvc-p
			
							//turn lazy loading off 
							context.ContextOptions.LazyLoadingEnabled = false;
								
							mvc_razor_picture[
								var base64 = Convert.ToBase64String(Model.Picture);
								var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

								<div id="planeditblock2">
									<!--<img class="plan" id="dragNdrop" src="@Url.Content(Model.PictureUrl)"/>-->
								</div>
							]
						]									
						moq_containers[
							fakeiteasy
							https://fakeiteasy.readthedocs.io/en/stable/creating-fakes/
						]						
						mapping[
														
							//automapper
							http://docs.automapper.org/en/stable/Getting-started.html
							https://kevsoft.net/2016/02/24/automapper-and-autofac-revisited.html
							//EmitMapper
							https://github.com/MetSystem/EmitMapper
							
						]						
						validation[			
							fluentvalidation
							https://fluentvalidation.net/
						]
						
						wcf[
						
							//service level fault attribute to wsdl publish
							http://dkturner.blogspot.com/2007/11/wcf-contract-level-faultcontract.html
							
							code[
								[AttributeUsage(AttributeTargets.Interface, AllowMultiple = false, Inherited = true)]
					public class StandardFaultsAttribute : Attribute, IContractBehavior
					{
						// this is a list of our standard fault detail classes.
						static Type[] Faults = new Type[]
						{
							typeof(AuthFailure),
							typeof(UnexpectedException),
							typeof(UserFriendlyError)
						};

						public void AddBindingParameters(
							ContractDescription contractDescription,
							ServiceEndpoint endpoint,
							BindingParameterCollection bindingParameters)
						{
						}

						public void ApplyClientBehavior(
							ContractDescription contractDescription,
							ServiceEndpoint endpoint,
							ClientRuntime clientRuntime)
						{
						}

						public void ApplyDispatchBehavior(
							ContractDescription contractDescription,
							ServiceEndpoint endpoint,
							DispatchRuntime dispatchRuntime)
						{
						}

						public void Validate(
							ContractDescription contractDescription,
							ServiceEndpoint endpoint)
						{
							foreach (OperationDescription op in contractDescription.Operations)
							{
								foreach (Type fault in Faults)
								{
									op.Faults.Add(MakeFault(fault));
								}
							}
						}

						private FaultDescription MakeFault(Type detailType)
						{
							string action = detailType.Name;
							DescriptionAttribute description = (DescriptionAttribute)
								Attribute.GetCustomAttribute(detailType, typeof(DescriptionAttribute));
							if (description != null)
								action = description.Description;
							FaultDescription fd = new FaultDescription(action);
							fd.DetailType = detailType;
							fd.Name = detailType.Name;
							return fd;
						}
					}
							]
						
						]
						structsVsClasses[

-> with grain of salt points
	It logically represents a single value, similar to primitive types (int, double, etc.).
	It has an instance size under 16 bytes.
	It is immutable.
	It will not have to be boxed frequently.

							https://samrueby.com/2016/09/05/when-should-you-use-a-struct-instead-of-a-class/
							https://blogs.msdn.microsoft.com/ericlippert/2009/04/27/the-stack-is-an-implementation-detail-part-one/
							https://stackoverflow.com/questions/1082311/why-should-a-net-struct-be-less-than-16-bytes
							
						]
						
						caller member name attribute[
							https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.callermembernameattribute?view=netframework-4.7.2
			
						]
						
						extensionMethods[
							extension interfaces methods resolved only when implementing class lacks signature
						]
						litr[
								{CLR,IL, JIT, Source code and compiler workflows, tools, standards}
								[
									CLR -> manged module for 32x or 64x PE32, PE32+
									C# -> compiler -> managed module
									Basic -> basic compiler -> -=-
									IL source -> IL assembler -> -=-
									
									IL - JIT compiler-> CPU instr
									
									Managed module IL + metadata(GC collected datatypes) 
										(Data execution prevention DEP, Address space layput randomization ASLR)
									[
										PE32, PE32+ header -> windows header simmilar to COFF format , indicates file type 
										GUI, CUI, DLL
										
										CLR header -> header, flags, methodDef, entry point (Main )
										
										metadata -> tables of types and methods deined, table with types and members refrenced
										(
											o- always embeded in exe
											o- removes need in c/c++ header files
											o- intelisense, typechecking, GC
										)
										
										
										IL code -> code compiled from source. CLR at runtime copmiles IL to CPU instr
									]
									
									clr works with assembly [
										manifest - assembly metadata table containing files representing the assembly
										public export types implemented by asm files
										resource or data files associated with the asm
									]
									
									IL - heigher level language then most CPU machine
									all CLR facilivies available
										o- access and manipulate obj type
										o- create and init objs
										o- call virt methods on objects
										o- manipulate arr directly
										o- err handling
										
									p. 16
									EXECUTION - 
										before main executes CLR allocates internal datastructure to managed ref types access
										internal structure for each method with its implementation address
										on initialization sets each entry to undocummented function incide CLR => JITcompiler
										
										Main - first call to first method-> JITcompiler function call
										
										JITcompiler -> compiles native IL code to native CPU instr
											(knows method and type on call)
										-> searchs asm metadata for clled method IL
										-> native CPU instr saved to dynamic mem block
										-> goes back to CLR internal datastruc and replaces reference to method with addr of compile mem block
										-> jumps to mem block of compiled
									
									p. 18
									DEBUG MODE		
										-> generates nop IL instr, for breakpoints placement
											//optimize[+/-] /debug[+/-] 
									compiler switch:
										//default -> /optimize- /debug- -> ILcode(unopt) JIT native( opt)
										//-> /optimize- /debug(+/full/pdbonly) -> ILcode(unopt) JIT native( unopt)
										//-> /optimize+ /debug(-/+/full/pdbonly) -> ILcode(opt) JIT native( opt)
									
									p. 19-20
									.PDB (Programm database) - helps debug find local vars and map IL instr to source.
									
									System.Runtime.ProfileOptimization -> causes CLR to record methods optimized by JIT
										on multiple CPU would compiles concurrently
									
									IL -> 
										o- stackbased, no registers, easy to target CLR
										o- typeless
										o- verification while CLR compiles IL to CPU source 
											varification(
												o- parameter number & type check
												o- return val usage				
											)
									
									p. 21
									Virtual address space VAS ->
									
									CLR -> offers ability to execute several AppDomains in single OS process
									
									unsafe code -> 
										/unsafe -> can work on memory directly
										o- JIT compiler checks assembly befor compile unsafe on 
											System.Security.Permissions.SecurityPermission 
											and 
											System.Security.Permissions.SecurityPermissionFlag’s SkipVerification 
										
										throws -> 
											System.InvalidProgramException or a System.Security.VerificationException
									p. 23-24
										NGen.exe -> 
											o- usefull for start optimizing 
											o- asm loaded into multiple processes
											o- %SystemRoot%\Assembly genned asembly with native code location
									
										CLR searchs for precompiled native file and uses it, JIT compiles code only on absence
										
											x- no intellectual prop prot 
											x- rassinhronization of (CLR ver, CPU type, Win ver, asm ID)
											x- not creates optimiations and can perform slower/
										
										MPGO.exe - startup time optimization
									
									p. 25-26
										Framework class library FCL -> DLL asm with type def and some funcionality
											empl. System type with Object
										
										most_usefull_libs[
											System - basic types
											System.Data - comunicating with database and processing
											System.IO 
											System.Net - low-level networ communication, protocols
											System.RuntimeInteropServices - unmanaged code, COM, win32 functions or DLLs
											System.Security - protecting data and resources
											System.Text - 
											System.Threading - asynchronous operations
										]
									
									p. 27-29
										Common Type System CTS -> 
											Types:
												Field, Method, Property (validation, readonly), Event
											
											Visibility rules:
												Private
												Famility/protected (derived types)
												Family and assembly(derived if def in asm, not in C# but in IL)
												Assembly(Internal)
												Family or assembly(protected internal) derieved exist in asm
												Public				
											CTS defines inheritance rules, virtual methods, obj lifetime.
											Type can dereive from once base class
											
											Sustem.Object 
												o- compare intances for equality
												o- get hash
												o- shalow (bitwise) copy
												o- get string representation
												
										ECMA-334,335

									p.30
										Common Language Specification CLS ->
											o- defines rules for languages
											o- language types accessible from other languages, to be CLS compliant
											
											check for cpmliance with CLS ->
												[assembly:CLSCompliant(true)]
										
											Cross-Language Interoperability ->
												https://docs.microsoft.com/en-us/previous-versions/730f1wy3(v=vs.100)
											
											o- defines everything as field(data) or method(behaviour)
												all language concepts compiler translates into fields and methods
												(enum, oper overload, conversion oper, index, 
												delegates, events, construct, finilizers) from source code
											
									p.34
										Interoperability with unmanaged code ->
											o- call unmanaged code in DLL 
												CreateSemaphore kernel32.dll
											
											o- access COM components
												TlbImp.exe  converts COM lib types to CLR asm
											
											o- unmanaged code can use managed type (server)
											
											(WinRT) from win8 seamles comunication with NET due to ECMA spec
								]
								
								chapter_2
								{assembly build, deploy}
								[
									p. 38
									DLL hell - new versions of programms ovewrite older versions
									complicated installation/uninstallation - files copied, registry updated
												
									System.Console. System.Console, IL in MSCorLib.dll
									
									Compiling console app with writeline with source.cs csc.exe ->
										passing reference to MSCorLib.dll			
										@MyProject.rsp - response file with command keys list
											o- multiple support
											o- local overrides global
									
									p. 42 - 43
										.exe ->
										contains metadata, CLR header, IL. 					
										
										CLR header :
											o- maj min ver numbers, flags
											o- mehodDef token informs if CUI,GUI or win store exe
											o- size and offsets of metadata tables
											o- IMAGE_COR20_HEADER on CorHdr.h format of CLR header
											
										METADATA: 
											several defenition tables, reference, manifest tables
												
											defenitionTables:[
												
											ModuleDef:
												entry defining module,
												includes module's file, extension, module ver GUID,
												helps CLR locate file at runtime
											TypeDef:
												entry for each type in module.
												Typename, base tpye, access modifiers
												indexes to MethodDef, FieldDef, PropertyDef, EventDef
											MethodDef:
												entry for every method in modeule. 
												method name, access modif, 
												signature offset within module to it's IL code
												referents to ParamDef
											FieldDef:
												entry for fields, acces modif, names
											ParamDef: 
												entry for each parameter. flags (in,out, retval), type, name
											PropertyDef:
												properties, flags, type, name
											EventDef:
												event, flags,name
												
											]
											
											referenceTables[
												AssemblyRef:
													entry for each asm , name, version, culture, publick key token, hash.
													CLR ignores hash
												ModuleRef:
													entry for PE module, name, extension, binds to types impl in modules in calling asm
												TypeDef:
													type name and ref.
														ANOTHER TYPE -> TypeDef; 
														ANOTHER MODULE -> ModuleRef; 
														SAME MODULE -> ModuleDef
													If type impl within ANOTHER TYPE, reference indicates 
														TypeDef entryid 
													If impl in ANOTHER MODULE ref indicates 
														ModuleRef entry
													If impl in the SAME MODULE ref indicate 
														ModuleDef entry
												MemberRef:
													one entry for each field, prop, method, event referenced by module
													name, signature, points to TypeRef
											]
								
									p. 44 - 48
										ILDASM:
										ctrl-m on exe -> metainfo 
											metadata, statistics
									
									p. 48
										Combine modules to form asm 
										
								]
								
							

							http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
						]
					
					]
			
					.CORE[
						
						//CORE 2.2 vscode omnisharp issue
						use net sdk 2.2.105 to scaffold launch.json on build
						
						//call module functions from mvc view
						https://stackoverflow.com/questions/43285725/unable-to-access-function-bundled-by-webpack
		
						//webapi
						https://stackify.com/asp-net-core-web-api-guide/
						
						dotnet ef migrations add initial
						https://docs.microsoft.com/ru-ru/ef/core/managing-schemas/migrations/
						
						//automapper
						https://dotnetcoretutorials.com/2017/09/23/using-automapper-asp-net-core/
						
						//ef CORE LOGGING
						http://rion.io/2016/10/19/accessing-entity-framework-core-queries-behind-the-scenes-in-asp-net-core/
						
						EF[
			
							DataAnnotations[
							
								System.COmponentModel.DataAnnotations
								System.COmponentModel.DataAnnotations.Schema
								
								[Table("TestDicTwo", Schema = "dic")]
								[Key]
								[Column("Id")]

							]
							
							https://docs.microsoft.com/en-us/ef/core/modeling/relationships
							https://www.entityframeworktutorial.net/efcore/fluent-api-in-entity-framework-core.aspx			
							FluentAPI[

								/*Mark key */
								builder.Entity<AddressDAL>().HasKey(s=>s.Id);
								
								/*rename property */
								builder.Entity<AddressDAL>().Property(s => s.Id).HasColumnName("AddressId");

								/*Rename table */
								builder.Entity<RouteVertexDAL>().ToTable("RouteVertex");

								/* Generate value in db*/
								builder.Entity<AddressDAL>().Property(s => s.Id).ValueGeneratedOnAdd();
								
								/*Custom foreign key name violating convention*/
								modelBuilder.Entity<TestDicOne>()
								.HasOne(p => p.DicTwo)
								.WithMany(p => p.DicsOne)
								.HasForeignKey(k => k.IdTwo);
										
								/*Custom foreign key naming*/
								modelBuilder.Entity<TestDicOne>()
								.Property(p => p.IdTwo).HasColumnName("IdDicTwo");

							]
						
						]
						
						reference DLL
						[
							https://medium.com/@tonerdo/referencing-a-net-dll-directly-using-the-net-core-toolchain-16f0af46a4dc
							add to core.scproj
						
							  <ItemGroup>
								<Reference Include="MyAssembly">
								  <HintPath>HP.ArchiveBalancingService.DataContracts.dll</HintPath>
								</Reference>
							  </ItemGroup>
						]
						
						mvc[
		
							https://elanderson.net/2018/04/run-multiple-projects-in-visual-studio-code/
							start several localhost endpoints [
								add to launch.json
								"env": {
									"ASPNETCORE_ENVIRONMENT": "Development",
									"ASPNETCORE_URLS": "http://localhost:5001"
								}
{								
									WebHost.CreateDefaultBuilder(args)
									//http host for Fidler http test
									.UseUrls("http://localhost:5000")
								
								 
							]
							
							//partial views
							parent_child_enumerable[
								
								//index.chtml
								@model IEnumerable<ModelItem>
								@Html.Partial("parent",Model)
								
								//parent.cshtml
								@model IEnumerable<ModelItem>
								@foreach (var item in Model)
								{
									@Html.DisplayNameFor(m=> item.Name);
									@Html.Partial("child",item);
								}
								
								//child.cshtml
								@model ModelItem
								@Html.DisplayNameFor(m=> Model.Name) :
								@Html.DisplayFor(m=> Model.Name);
								
							]
							DifferentParentChildModelCollection[
							
								@model ParentModel				

								@foreach(var i in Model.ChildrenList){
									@if(i.GetType().Equals(typeof(ChildModel))){
										<div>  
											@Html.Partial("ChildOne",i)
										</div>           
									}
								}
								
							]
							
							GenerationAndScafolding[
							
dotnet new mvc -o G:\disk\Files\git\Core\chat --auth Individual

dotnet tool install -g dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet restore


//help gen view
dotnet aspnet-codegenerator [area|controller|view|identity] -h
dotnet aspnet-codegenerator identity -h
//gen area dotnet aspnet-codegenerator area exampleArea
//gen controller
dotnet aspnet-codegenerator controller -name ExampleController -actions -api -outDir Scafolded\Controllers -namespace scafolded
//gen view empty 
dotnet aspnet-codegenerator view exampleview empty -l defaultlayout -outDir scafolded\views -namespace scafolded


dotnet aspnet-codegenerator identity -h
//list files
dotnet aspnet-codegenerator identity -lf -f

Account.Login
Account.Logout
Account.Manage._Layout
Account.Manage.Index

dotnet aspnet-codegenerator identity -fi [Account.Logout;Account.Logout] -f

dotnet aspnet-codegenerator identity -f -fi "Account.Manage.Index;Account.Manage._Layout;Account.Register;Account.Login;Account.Logout"


dotnet aspnet-codegenerator controller -name AccountController -actions -api -outDir API\Areas\Identity\Controllers -namespace chat.Infrastructure.Controllers
dotnet aspnet-codegenerator view Register Create -m RegisterUserAPI -l defaultlayout -outDir API\Areas\Identity\views -namespace chat.API
dotnet aspnet-codegenerator view Room empty -l defaultlayout -outDir API\Areas\Identity\views -namespace chat.API

							]
						
					
								dotnet ef migrations add LocalExpress --context sbDbEntities
								dotnet ef database update --context sbDbEntities
							]
			
							Boilerplate[
								dotnet add package/Install-Package
								
								Microsoft.EntityFrameworkCore.SqlServer
								
								//CLI tools 
								//for [dotnet ef ...] command style from VScode
								Microsoft.EntityFrameworkCore.Design
								
								//PMC tools
								//for [Add-Migration, Update-Database ..] command style from cmd
								Microsoft.EntityFrameworkCore.Tools
								
								vsCodeTool[
dotnet add package Microsoft.AspNetCore.Mvc.Core
dotnet add package Microsoft.EntityFrameworkCore
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Tools
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.Tools

dotnet add package Microsoft.Extensions.Configuration
dotnet add package Microsoft.Extensions.Configuration.FileExtensions
dotnet add package Microsoft.Extensions.Configuration.Json
dotnet add package Microsoft.Extensions.DependencyInjection.Abstractions
dotnet add package Quartz

dotnet restore 
dotnet build
dotnet --info
								]
								
							]
												
							//ef CORE LOGGING
							http://rion.io/2016/10/19/accessing-entity-framework-core-queries-behind-the-scenes-in-asp-net-core/
								
						]
										
						core_JS_module_load[
							!!!
							if app exports default
							then on index new via default
							references
							
							//react aggregate root
							//renders final comp
							GameBoard.jsx
							{		
								import * as React from 'react'

								export default class GameTutorial {
									 ReactDOM.render()
								}
							}
							
							//aggregate root for webpack
							//imports all modules
							app.js
							{
								import { GameTutorial } from '../ReactTutorial/Containers/GameBoard'			
								
								export class App 
							}
							
							//endpoint for builded packs
							index.cshtml[
								<script src="~/dist/wp/reactGame.bundle.js" type="text/javascript"></script>
								
								 let rg = new reactGame.App();
								<script>
								  let rg = new reactGame.App();
								  rg.Init();
								</script>
							]
							
							//init via webpack module name
							.js
								export {AppTwo}
							.webpack.js name:
								appTwo
							.cshtml
								var app = new appTwo.AppTwo();
							
						]
						
						rep[
							//the omnisharp server is still initializing or has exited unexpectedly
							//install omnisharp from vsix
							https://github.com/OmniSharp/omnisharp-roslyn/issues/1258
							https://github.com/OmniSharp/omnisharp-vscode/releases/download/v1.16.1-beta1/csharp-1.16.1-beta1.vsix
						]
						
					]
					
					CIL[
					
					
						ecma335
						[

							II.10.3.4
							149

							I i = new B(); b.foo1();

							I i = new C(); c.foo1();
							A a = new C(); c.foo2();
							B b = new C(); c.foo1();

							I id = new D(); d.foo1();
							A ad = new D(); d.foo2();

							III.4.2
							422
							callvirt -> call method associated at runtime with object
								method chosen on the exact type of token rather then compile-time metadata
								
						]

						//CLR via C#
						http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
						//specification
						http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf

						//guides with 
						https://www.i-programmer.info/programming/other-languages/933-getting-started-with-il.html?start=1
						https://www.codeproject.com/Articles/362076/Understanding-Common-Intermediate-Language-CIL

						//ilasm folder
						C:\Windows\Microsoft.NET\Framework64\v4.0.30319
						
						//ildasm
						developer console 
						
						//compile 
						ilasm.exe G:\disk\Files\git\CIL\hello.il
						
					]
						
					//roslyn compiler
					https://github.com/dotnet/roslyn/wiki/Roslyn%20Overview
					
					tools[
					
//perfview
https://github.com/microsoft/perfview/blob/master/documentation/Downloading.md
//ILSpy
https://github.com/microsoft/perfview/blob/master/documentation/Downloading.md

					]
					
				]

				JS
				[
					
					https://developers.google.com/web/
					//slice immutable
					//splice mutates 
					//delete prop
					delete Employee.firstname;
					
					//date string by format
					date.toLocaleDateString(options?);
					//date to UTC date
					date.UTC	
	
					code[
						
						shorthands[
							//ternary
							if..else
							let v = c ? x :
							//shortcircuit
							//!(if c null,undefined,'',0)
							let v = c || x;
							//decl shrt 
							let x,y,z =3;
							//if(truthy)
							//if(!truthy)
							//arrays 
							for(let i of arr)
							//fucnt shrothands
							f = p => console.log("val",p);
							setTimeout(() => console.log("val"),1000);
							arr.forEach(s=>console.log(s));
							//implicit return
							f2 = p => ( p); 
							//default param
							f3 = (p0,p1=1,p2="a") => ((p0*p1)+p2); //f3(2) =>"2a"
							//template str
							let p0 ="Var";
							let c0=`a${p0}`; //console.log(c0); => aVar
							//destructuring
							let p = {v0:"v0",v2:"v02",v4:"v4"}		
							let {v0,v2,v4} = p
							//rest syntax
							let a0 = [1,2,3];
							let b0 = [...a0];
							a0[2]=10;
							let c0 = [a0,b0]
							console.log(a0) => [1, 2, 10]
							console.log(b0) => [1, 2, 3]
							console.log(c0) => {[],[]}
							//map,foreach,filter
							let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
							function f3(arr,pred){
								let ret=[];
								arr.forEach(s => {						
									if(pred(s)){
										ret.push(s);
									}
								});
								console.log(ret)
								
								let ret2=[];
								ret2=arr.map(s => {						
									if(pred(s)){
										return s;
									}else{return null;}
								});
								console.log(ret2)
								
								let ret3;
								ret3=arr.filter(pred);
								console.log(ret3);
							}		
							f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
							//Math.floor(4.9)
							~~4.9
							
						]
					
						//map,foreach,filter
						[
							let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
							function f3(arr,pred){
								let ret=[];
								arr.forEach(s => {						
									if(pred(s)){
										ret.push(s);
									}
								});
								console.log(ret)
								
								let ret2=[];
								ret2=arr.map(s => {						
									if(pred(s)){
										return s;
									}else{return null;}
								});
								console.log(ret2)
								
								let ret3;
								ret3=arr.filter(pred);
								console.log(ret3);
							}		
							f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
							
						]
						
						//merge
						[
							let o5 = ({...o1},{...o2})
							console.log(o5)	
							
							const merge = (...args) => ({...args})
							let o6 = merge (o1,o2)
							console.log(o6)
							
							f3 = (p0,p1=1,p2="a") => ((p0*p1)+p2)
							
							let p = {v0:"v0",v2:"v02",v4:"v4"}		
							let {v0,v2,v4} = p
							console.log(v4)
						
						]
						
						//map_forEach
						[
						
							let arr1 = [{v:"v0",n:"n0"},{v:"v1",n:"n1"},{v:"v2",n:"n2"},{v:"v2"}];		
							function f3(arr,pred){
								let ret=[];
								arr.forEach(s => {						
									if(pred(s)){
										ret.push(s);
									}
								});
								console.log(ret)
								
								let ret2=[];
								ret2=arr.map(s => {						
									if(pred(s)){
										return s;
									}else{return null;}
								});
								console.log(ret2)
								
								let ret3;
								ret3=arr.filter(pred);
								console.log(ret3);
							}
							f3(arr1,s=>s.v==="v0" || typeof s.n==='undefined')
						]
						
						//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
						assign[			
							let o1 = {k:"key1",k2:"key2"}
							let o2 = {k:"key3",k2:"key4"}
							let o3 = Object.assign(o1,o2,{val:"v1"})
							
							console.log(o1)
							console.log(o2)
							console.log(o3)
						]
						
						//spread syntax
						//rest parameter
						https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax
						[
							let o1 = {k:"key1",k2:"key2"}
							let o2 = {k:"key3",k2:"key4"}
							let o3 = Object.assign(o1,o2,{val:"v1"})
							let o4 = {...o1,...o2}
							
							console.log(o1)
							console.log(o2)
							console.log(o3)	
							console.log(o4)	
							
							//merge
							let o5 = ({...o1},{...o2})
							console.log(o5)	
							
							const merge = (...args) => ({...args})
							let o6 = merge (o1,o2)
							console.log(o6)			
						]
						
						Destructuring Assignment Shorthand
						[
						
							https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
							https://www.sitepoint.com/shorthand-javascript-techniques/
							
							var o = {p: 42, q: true};
							var {p, q} = o;

							console.log(p); // 42
							console.log(q); // true

							// destructuring with defaults
							const {prop1="val1",prop2="val2"} = params;
							
						]
						
						recursiveArraySearch[
							recursiveArraySearch(arr, constraint){
								var ret;
								if(arr && arr.length>0){
									arr.forEach(function nested(a){
										if (constraint(a)){
											ret=a; 
										}
										if(Array.isArray(a.children)){
											a.children.forEach(nested);
										}
									});
								}
								return  ret;
							}
						]
						
						importExport[
						
							export default
							export {} - object
							
							import t
							import {t} - object
							
						]
					
						...args rest arguments
						map(array)		
						assign(target,source)
						
						let obj = {
							...objToCopy,
							prop
						}
									
						document_load_event[
							document.addEventListener("DOMContentLoaded",check,false);
						]					
								
						fetchAPIExml
						[

							function fu()
							{

								//let request = new Request('https://www.mozilla.org/favicon.ico');

								let header = new Headers({
									'Access-Control-Allow-Origin': '*',
									'Content-Type': 'multipart/form-data',
									//'Cookie': '.AspNetCore.Antiforgery.YEUXIw3HZOc = CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9 - Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2 - x - H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8; .ASPXANONYMOUS = s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1; .ASPXAUTH = 9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'
								});
								let sentData = {
									method: 'GET',
									mode: 'cors',
									headers: {'c':'c'}
								};
								
								var myHeaders = new Headers();
								myHeaders.append('Content-Type', 'text/html; charset=utf-8');
								myHeaders.append(
									//'Cookie', '.AspNetCore.Antiforgery.YEUXIw3HZOc=CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8; .ASPXANONYMOUS=s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1; .ASPXAUTH=9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'
							'.AspNetCore.Antiforgery.YEUXIw3HZOc','CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8'
								)
								
								myHeaders.append(
							'.ASPXANONYMOUS','s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1'
								)
								
								myHeaders.append(
							'.ASPXAUTH','9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'
								)
								
								
								let _request = new Request(`http://localhost:49897/GeoPosition/GetCategoryServiceTypes?categoryId=039e061b-b3a6-4e31-ab9a-d20352f87230`, 
								{ method: 'GET', credentials: 'include' });

								document.cookie='.AspNetCore.Antiforgery.YEUXIw3HZOc=CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8;'
								document.cookie='.ASPXANONYMOUS=s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1;'
								document.cookie='.ASPXAUTH=9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'

								_request.headers = myHeaders;
								console.log('request')
								console.log(_request.url)
								console.log(_request.method)
								console.log(_request.headers.get('.ASPXANONYMOUS'))
								console.log('cookie')
								console.log(document.cookie)	
								console.log(_request)

								fetch(_request)
								.then(
									//response => response.json(),		
									response=>console.log(response),
									err => console.log('Redux dispatch error:', err)
								)
								.then(			
									json => {
										console.log(json);
										json
									}
									//dispatch(ChieldrenReceived(id,json))
								);
								
							}

						]
					
						workingFetchAjax
						[
							
							function fu()
							{

								//let request = new Request('https://www.mozilla.org/favicon.ico');
								
								var myHeaders = new Headers();
								myHeaders.append('Content-Type', 'text/html; charset=utf-8');		
								
								let _request = new Request(`http://localhost:49897/GeoPosition/GetCategoryServiceTypes?categoryId=039e061b-b3a6-4e31-ab9a-d20352f87230`, 
								{ method: 'GET', credentials: 'include' , mode:'no-cors'});

								document.cookie='.AspNetCore.Antiforgery.YEUXIw3HZOc=CfDJ8Ou_8W44IelJgfoicChT_VId8E1F7M2W0LjUD9-Cynd0dDOY5IFA56_rareAJL3Zy8gCbOlQ2A_XtpRcJ4_2nK6V2-x-H3co_PZEHwq83uUCPeLFeJyV97wWZTIYLxu0ZX0P8EYbE2bzTLrUuBHElt8;'
								document.cookie='.ASPXANONYMOUS=s8aMXdv61AEkAAAAZDVhNzg0YTUtZmE0MC00NTYzLTg1OTAtNDUyMmNlMTMwYjFjhVOdCG1RAuh4BDI8J_HOhTXe6xtXJHUiI6jWbMsB53k1;'
								document.cookie='.ASPXAUTH=9B9DC2BEDC90BC80218C5119D81A61C1111B413E17239627A9609F735CEE0178169FD783A39E1E5F25F1A999AD1A21FAA6C4108FEB2D93590D15B1E02330A6DBB6360B18FDCDBFCF2827B5D38ED35D31B8B457E1979EAE3E8D05179E85E31426804620C1DF24FBCB0753716BCE16F7AA8329E1FCE8E8AEEBEA4C9515276530379D69AD43FD3476551665E2F281AD1B31D0DD7FC4991569A532F0CDC286C031E28F34CEBE4EC0AF57030131AB4AB283E95DFC6B730CAE866A0D98613EAED704B77586CE499415C91F45538792CB485699F13E46520B703BA3CA26CEA83EF5D459'

								fetch(_request)
								.then(response => response.json())		
								.then(
									j => {
										console.log(j);
										console.log(JSON.stringify(j));
									}
									//dispatch(ChieldrenReceived(id,json))
								);
								
							}

							ajax[
							
								$.ajax({
								method: "GET",
								url: "http://localhost:49897/GeoPosition/SearchCategories?parentId=039e061b-b3a6-4e31-ab9a-d20352f87230"
								})
								.done(function( ret ) {
								console.log( "done: ");
								console.log(ret)
								})
								.fail(function(c){
								console.log("fail")
								console.log(c)
								});
								
							]
							
						]
						
						overall[
							
							//slice immutable
							//splice mutates 
										
									
							//delete prop
							delete Employee.firstname;

							importFromModulesExport[

							export default
							export {} - object

							import t
							import {t} - object

							]

							...args rest arguments
							map(array)		
							assign(target,source)

							let obj = {
							...objToCopy,
							prop
							}

							document_load_event[
							document.addEventListener("DOMContentLoaded",check,false);
							]
							
							loadFiles[
								let dt = e.dataTransfer
								let files = dt.files
							]
							
							setTimeoutInsideFor[
							
								for(var i=0;i<2;i++){
								console.log("for:" + i)
									setTimeout(function cb( ){
										console.log("timed out 2:" +i)
										
										setTimeout(function cb3( ){console.log("timed out 3:" +i)},3000)
										
									},2000)
								}

							]
							
						]
					
					]						
					
					TnT[
						
						MVCintegrate[
							//js modules in view init
							var app = new HP.MoscowVideo.Modules.GeopositionTreeConfig.default();
							app.Init();
						]						
						
						asm.js ?perspective
						pnacl,nacl become obsolette

						c++ to wasm
						https://developer.mozilla.org/en-US/docs/WebAssembly/C_to_wasm
						web gamedev intro
						https://developer.mozilla.org/en-US/docs/Games/Introduction

						LLVM
						emscripten->webassembly
						emscripten
						https://emscripten.org/index.html
						webassembly
						https://webassembly.org/docs/semantics/#linear-memory
						asm.js
						http://asmjs.org/
						https://github.com/emscripten-core/emscripten
					]
					
					IIFE[
						https://www.sitepoint.com/demystifying-javascript-closures-callbacks-iifes/
					]
										
					moduleSystem[
						
						//babel
						https://babeljs.io/docs/en/usage
						//bundling minification
						https://medium.freecodecamp.org/anatomy-of-js-module-systems-and-building-libraries-fadcd8dbd0e
						//service workers 'fetch' event
						https://salomvary.com/es6-modules-in-browsers.html
						//migrate to gulp 4
						https://www.joezimjs.com/javascript/complete-guide-upgrading-gulp-4/
	

					]
					
					frameworks[
												
						npm[

							npm install -D -E clean-webpack-plugin@0.1.19
							-E - disable semantic versioning
							@ - use exact version

						]
						
						webpack[
	
							lit[
								
								//webpack via gulp								
								https://pawelgrzybek.com/using-webpack-with-gulpjs/
								
								//multi folder outpit [name]/[name]
								https://stackoverflow.com/questions/32145164/webpack-variable-output-path		
								
								https://www.valentinog.com/blog/webpack-tutorial/
								https://medium.freecodecamp.org/part-1-react-app-from-scratch-using-webpack-4-562b1d231e75
								
								//webpack_playgrouund
								https://generatewebpackconfig.netlify.com/
								
								//webpack vs gulp + config 
								https://www.toptal.com/front-end/webpack-browserify-gulp-which-is-better
								
								//webpack + ract
								https://stackoverflow.com/questions/33956201/how-to-import-and-export-components-using-react-es6-webpack
								
								//new mvc with npm + react
								https://codeburst.io/how-to-use-webpack-in-asp-net-core-projects-a-basic-react-template-sample-25a3681a5fc2
								//core webpack react + hotmodules autoupdate
								https://medium.com/@deanvniekerk/simple-net-core-webpack-and-react-overview-using-vs-code-5522da657b35
								//webpack + react jsx
								https://www.twilio.com/blog/2015/08/setting-up-react-for-es6-with-webpack-and-babel-2.html
										
								//dotnet new
								https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new?tabs=netcore21
								
							]
							
							npmAndCore[
							
								dotnet mvc new
								npm init -y
								//webpack
								npm install webpack --save-dev
								npm install -D webpack-cli		
								//webpack + babel minify
								npm install @babel/core @babel/preset-es2015 @babel/preset-env babel-loader babel-minify-webpack-plugin aspnet-webpack --save-dev
								//react
								npm install react react-dom @babel/preset-react --save-dev
							
								//new mvc template
								dotnet mvc new
								//package.json init
								npm init -y
								//webpack install
								npm install webpack --save-dev
								npm install -D webpack-cli
								//run default from scripts wbp of package.json
								npm run wbp
								
								//babel with webpack
								npm install @babel/core @babel/preset-es2015 @babel/preset-env --save-dev
								npm install babel-loader babel-minify-webpack-plugin --save-dev
								npm install aspnet-webpack --save-dev
								
								//react
								npm install react react-dom --save-dev
								npm install @babel/preset-react --save-dev
							
								//before start 
								dotnet publish -c Release
							]
									
							configActionNComments[
																
								url_loader for gif,png
								[
								
									//new preset for bundling gif and png nested inside css as URLs
									https://stackoverflow.com/questions/45848055/image-you-may-need-an-appropriate-loader-to-handle-this-file-type
									npm install --save url-loader
									{
										test: /\.(png|jpg|gif)$/i,
										use: [
										  {
											loader: 'url-loader',
											options: {
											  limit: 8192
											}
										  }
										]
									}

								]
								
								jquery_from_jstree_local_jquery
								[
								
									https://stackoverflow.com/questions/45330231/webpack-cant-resolve-jquery
									//for require("jquery") references in jstree
									
									//in webpack.config.js
									  plugins: [
										  // This makes it possible for us to safely use env vars on our code
										  new webpack.DefinePlugin({
											$ : "jquery",
											jQuery : "jquery",
											"window.jQuery" : "jquery"
										  })
										],    
										externals: {
										  // require("jquery") is external and available
										  //  on the global var jQuery
										  "jquery": "jQuery"
										},
									
									//in app.js
									import $ from '../../lib/jquery/dist/jquery.min.js';
									window.jquery = $;
									window.$ = $;

								]
								
								start
								[
									
									//hotmodule
									npm install aspnet-webpack webpack-hot-middleware webpack-dev-middleware -D
									//changes in 
									webpack.config->
										entry: {main:'./wwwroot/js/wpCheck/app.js'},
									startup.cs->
										using Microsoft.AspNetCore.SpaServices.Webpack;
										
										#if DEBUG
											app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions
											{
												HotModuleReplacement = true
											});
										#endif
										

									react.jsx as .js
									in app.js
									import ReactComponent from '../rctcheck/reactcomponent';
									
									//in DOM render event
									ReactDOM.render(
									<Message />,
									document.getElementById('basicreactcomponent')
											
									//remove node modules		
									https://stackoverflow.com/questions/48768236/how-to-tell-webpack-to-ignore-node-modules-both-core-and-installed-from-npm
									npm install webpack-node-externals
									//in webpack.config
									const nodeExternals = require('webpack-node-externals');
									externals: [nodeExternals()],
									);
									
									npx webpack
									//custom config
									npx webpack --config webpack.custom.js
								]
							
							]
							
							issues[
								//not reads react jsx to js
								
								//read nested import from loaded js  from js file folder, 
								//add to webpack.config
								'@': path.resolve(__dirname)
								//load path
								import '@/scripts/Plugins/jstree/jquery.jstree';
							]
							
						]
					
						gulp[
			
							lit[
							
								//integrate react
								https://jonsuh.com/blog/integrating-react-with-gulp/
								
								//webpack from gulp
								https://pawelgrzybek.com/using-webpack-with-gulpjs/
								
								//move to gulp 4 
								https://www.joezimjs.com/javascript/complete-guide-upgrading-gulp-4/
								
								//plugins
								https://www.tutorialspoint.com/gulp/gulp_useful_plugins.htm		
								
								https://medium.com/devux/minifying-your-css-js-html-files-using-gulp-2113d7fcbd16
								https://gulpjs.com/docs/en/getting-started/working-with-files
								
								https://www.npmjs.com/package/gulp-bundle
								
							]
							
							npm[
							
								npm install del --save-dev
								npm install gulp --save-dev
								npm install gulp-cli -g
								npm install gulp -D
								npm install gulp-autoprefixer --save-dev
								npm install gulp-csso --save-dev
								npm install gulp-htmlmin --save-dev
								npm install gulp-sass --save-dev
								npm install gulp-uglify --save-dev
								npm install run-sequence --save-dev
								
							]
							
							//custom gulp file
							gulp --gulpfile gulpNew.js
							
							issues[
							
								//react files to jsx
								//npm install gulp gulp-concat babel-core babel-preset-es2015 gulp-babel gulp-uglify gulp-pug gulp-less gulp-csso gulp-clean rimraf --save-dev
								
							]
							
						]
						
						
						NODEjs[
							https://nodejs.org/en/docs/guides/
						]
						
					
						AngularIO[
							
							code[
								//piped parameter
								<div>{{'Var.VarName' | PipeName }}</div>
								[attr]="'Var.VarName' | PipeName"
							]
							
							lit[
								
								//angular routing and injection	
								https://angular-2-training-book.rangle.io/handout/modules/lazy-load-di.html
								https://plnkr.co/edit/C1QKHk9Uijtxtb13UU9t?p=preview
								https://medium.com/@cyrilletuzi/understanding-angular-modules-ngmodule-and-their-scopes-81e4ed6f7407	
				
								//angular observables
								https://scotch.io/tutorials/angular-2-http-requests-with-observables
				
								//styles
								https://alligator.io/angular/style-binding-ngstyle-angular/
								//angular 2 custom themes
								https://medium.com/atom-platform/angular-6-dynamic-themes-without-a-library-c21dfb2cb580	
				
								//events
								//events list
								https://lishman.io/angular-2-event-binding
								https://medium.com/claritydesignsystem/four-ways-of-listening-to-dom-events-in-angular-part-1-event-binding-3ec7e9f51a1d					
								https://houssein.me/event-and-style-binding-in-angular2
								https://www.radzen.com/blog/angular-event-bubbling/
								//css					
								https://blog.angular-university.io/angular-ngclass-ngstyle/
								
								//materialDesign
								https://benjii.me/2018/05/material-design-stack-angular/
								https://medium.com/codingthesmartway-com-blog/angular-material-and-angular-6-material-design-for-angular-6b1a3ee476f0
								
								//custom dome event
								https://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm
								
							]
							
						]
						
						rxjs
						[

								debounceTime(delayTime)
									-> handle only one action in burst

								takeUntil (observable)
									-> emits until observable action emits

								subject.subscribe(receiver)
								sibject.next(val) -> receiver(val){val...}

								observable
										single|miltiple
								pull function iterator
								push promise observable

								Subjects o- multicast observable

							]
							
							
						ReactJS[
	
								!!!action input signature must correspond to default reducer initialization
							
						
							
							overall
							[

								//pass props
								<Template propName={propParent}>

								tpl connect(mapStateToPropsmmapEventsToProps)(Template)
								<div>
									<tpl/>
								<div/>
								
								react -> local state (forms, UI)
								redux -> global state (cach users, post draft )
									Container Component
									<- Presentation Component[
										const t = (props) => (<tag>{}<tag/>);
									]
								Container Component <- Redux store
								
								this.props.name -> receive name variable passed to component

								this.state -> {object for internal state}
								
								componentDidMount() -> runs after constructor
								componentWillUnmount <- runs when comp removed from DOM
								//https://reactjs.org/docs/state-and-lifecycle.html
								setState -> Indirect, async, merge
									-> //indirect
									setState({objProp:value}) instead this.state.objProp = value
									->//async
									// Wrong
										this.setState({
										  counter: this.state.counter + this.props.increment,
										});
										// Correct
										this.setState((state, props) => ({
										  counter: state.counter + props.increment
										}));
										// Correct
										this.setState(function(state, props) {
										  return {
											counter: state.counter + props.increment
										  };
										});
									-> //merged
										componentDidMount() {
											fetchPosts().then(response => {
											  this.setState({
												posts: response.posts
											  });
											});

											fetchComments().then(response => {
											  this.setState({
												comments: response.comments
											  });
											});
										}
								
								-> pass state as props to child component
								
								setTimeout -> postpone activation
								
								//conditional component nestion
								{this.state.isToggleOn ? 'ON' : 'OFF'}
									
								//https://reactjs.org/docs/events.html
								onClickCapture -> register event in capture phase
								
								//https://reactjs.org/docs/handling-events.html
								-> () lambda functions instead of bind do extra re-render when passed to child
								
								//https://reactjs.org/docs/forms.html
								-> form
								this.setState({value: event.target.value});
								//partial form update
								this.setState({
									[name]: value
								});
								
								//https://reactjs.org/docs/lifting-state-up.html
								-> lifting state up
									pass method from parent to child prop childPropName={parentHandlerFunc}
									call child prop this.props.childPropName
								
								//Overal component logic
								container -> no html; contains wrapping <div>; data and behaviour to presentation; render;
								presentation -> only render and very simple logic;
							]
		
							react_boilerplate_guideline
							[
							
								- new webpack app entry
								- new js for entry
								- new view,controller
								- on appJs 
									//import from JSX
									import HelloMessage from './Templates/hellomessage';
									init method above react render
								- import bundle in view
									init [webpackAppName].[appClass].[init function wrapper for reactdom]
								
							]
							
							//react,webpack,babel
							cmd[	

								npm install --save react
								npm install --save redux
								npm install --save react-redux
								npm install --save react-dom

								npm install --save-dev webpack

								npm install --save-dev @babel/preset-react
								npm install --save-dev @babel/preset-env 

								npm install --save-dev @babel/plugin-proposal-class-properties		
								npm install --save @babel/polyfill
								npm install --save-dev @babel/core @babel/cli @babel/preset-env
								//>>> babel 7 is crusial
								npm i babel-loader@7 -D
								
								npm install -D babel-loader @babel/core @babel/preset-env webpack
								npm install -D @babel/core @babel/preset-env webpack
								
								npm audit fix
								
								//hot load
								npm install --save-dev html-webpack-plugin
								npm install webpack-dev-server --save-dev			
								npm install --save-dev clean-webpack-plugin
								npm install --save-dev react-hot-loader
								npx webpack-dev-server --hotOnly
								
								//hot rebuild
								npx webpack --watch
								
								//show references
								npx npm-why babel/core 
							]
							
							reactComps[
							
								Container Component
									<- Presentation Component[
										const t = (props) => (<tag>{}<tag/>);
									]
								Container Component <- Redux store
							]
							
							Syntax
							[

								//pass props
								<Template propName={propParent}>

								tpl connect(mapStateToPropsmmapEventsToProps)(Template)
								<div>
									<tpl/>
								<div/>

								
								//https://reactjs.org/docs/events.html
								onClickCapture -> register event in capture phase
								
							]

							funcs[
									
								this.props.name -> receive name variable passed to component
								this.state -> {object for internal state}
								
								componentDidMount() -> runs after constructor
								componentWillUnmount <- runs when comp removed from DOM
								
										//https://reactjs.org/docs/events.html
								onClickCapture -> register event in capture phase
								
								//https://reactjs.org/docs/handling-events.html
								-> () lambda functions instead of bind do extra re-render when passed to child
								
								//https://reactjs.org/docs/forms.html
								-> form
								this.setState({value: event.target.value});
								//partial form update
								this.setState({
									[name]: value
								});
								
								//https://reactjs.org/docs/lifting-state-up.html
								-> lifting state up
									pass method from parent to child prop childPropName={parentHandlerFunc}
									call child prop this.props.childPropName
								
								//Overal component logic
								container -> no html; contains wrapping <div>; data and behaviour to presentation; render;
								presentation -> only render and very simple logic;
							]			
							
							stateFlow[
								componentDidMount() -> runs after constructor
									componentWillUnmount <- runs when comp removed from DOM
									//https://reactjs.org/docs/state-and-lifecycle.html
									setState -> Indirect, async, merge
										-> //indirect
										setState({objProp:value}) instead this.state.objProp = value
										->//async
										// Wrong
											this.setState({
											  counter: this.state.counter + this.props.increment,
											});
											// Correct
											this.setState((state, props) => ({
											  counter: state.counter + props.increment
											}));
											// Correct
											this.setState(function(state, props) {
											  return {
												counter: state.counter + props.increment
											  };
											});
										-> //merged
											componentDidMount() {
												fetchPosts().then(response => {
												  this.setState({
													posts: response.posts
												  });
												});

												fetchComments().then(response => {
												  this.setState({
													comments: response.comments
												  });
												});
											}
									
									-> pass state as props to child component
							]
							
							templates[
							
								Conditional component nesting
								ContainerBoilerplate
								PresentationBoilerplate
								...get from reactreduxcore
								
								ConditionalNestedComponent
								[

									methodA()
									{
										<div>Element</div>
										{methodB(condition)}
									}
									methodB(cond)
									{
										if(cond){
											return(
												<div>Conditional element</div>
											)
										}
									}			

								]
								
								
							
							]
							
							toread[
								react components
								[
									https://blog.bitsrc.io/11-react-component-libraries-you-should-know-178eb1dd6aa4
									http://react-toolbox.io/#/components/time_picker
									https://react-bootstrap.github.io/layout/grid/
									https://material-ui.com/demos/lists/
									https://v2.grommet.io/accordion
								]
							]
							
							code_examples[
							
								//nested tree with 4 folder arch
								https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/tree-view
							
							]
		
							CSS_component_libs[
							
								tree_css_eamples[
									https://react.rocks/tag/TreeView
								]
		
								//acordion example
								https://v2.grommet.io/accordion?c=DwQQxmD2BOAmCWkB2A+AUAAg6CMHIAUBDJAUwBsNyiAjCgXgCJizKBGR9LLYAIUgAeGAA5FYTALakEAVwmMMNImADWAc2iQZScY3Lw1ACwAuAWgBMnTNx4AVUgOMoA8mWAB6e4643s4KHCISCwUVLQMzCShHD48-EKiulKy8orK6prauvpGZpax3MBeTq6kHsUFHvE+Hv54QSHkle7V1rW4gYRRTW11ncHdYXTkTI0Y+dZxgiJiktLwcgpKqhpaOkw5JhZWvtgVtgDukOUOTpPYLYI17n34A6zo7QF3KEA
							
								https://v2.grommet.io/accordion
							]
							
						]
							
						Redux[

								import { Provider } from 'react-redux'
								import store from './redux/store'
								
								subscribe to store
									true: subscribe to the values that mapStateToProps extracts from the store, 
										and re-render only when those values have changed
									false: not re-render when the store changes
									
								inject action creators 
									true: receive all of the action creators you inject with mapDispatchToProps 
										as props and automatically dispatch the actions upon being called
									false: receive props.dispatch that you may use to manually dispatch action
								
								funcs[
									(state, action) => state

									function ctr(state,action){
										switch(action.props){

										}
									}
									
									//subscribe,dispatch,getState
									const red = combineReducers({ctr,ctr2})
									store = createStore(ctr);
										optional->createStore(combineReducers,initialState,applyMiddleware)
									str.subscribe()			
									str.dispatch({action.Prop:val})
									
									//connect(mapToProps,mapToState)(Component)
								]
								
								https://blog.isquaredsoftware.com/presentations/workshops/redux-fundamentals/ui-layer.html#/4
								BasicUIintegration
								[
								
									// 1) Create a store
									const store = Redux.createStore(counter)

									// 2) Subscribe to store updates
									store.subscribe(render);

									const valueEl = document.getElementById('value');

									// 3. When the subscription callback runs:
									function render() {
										// 3.1) Get the current store state
										const state = store.getState();

										// 3.2) Extract the data you want
										const newValue = state.toString();

										// 3.3) Update the UI with the new value
										valueEl.innerHTML = newValue;
									}

									// 4) Display the UI with the initial store state
									render();

									// 5) Dispatch actions based on UI inputs
									document.getElementById("increment")
										.addEventListener('click', () => {
											store.dispatch({type : "INCREMENT"});
										})
								]
								
							]
							
							
						react+redux_impl [
			
							npm install --save react
							npm install --save redux
							npm install --save react-redux
							
							flow[
								-> map props in action to object, map props from object to state in reducer
								
								view -[action]-> dispatcher -> store -> view

								view-[action]->store
								state = reducer(state,action);

								store -> createStore(),dispatch(), getState()
								this.state -> store.getState();
							]
							
							binding[
							
								//binding from container -> presentation
								<TextBox oninputfunc={this.textchangedaction} text={this.state.initialText}/>
								//binding from createStore
								oninputfunc: (e) => {
									dispatch(TextChangedWithValue(e.target.value));
								}
								//in presentation component props value
								onChange={props.oninputfunc} value={props.text}
								
							]
							
							folder_shema[

								presentation -> container -> redux [
									action, action creators, connect
								]
								reducer(state,acton) => state from switch 
								store (action) => actrion from reducer
								
								//
								index.js -> entry point with create store , render, provider tag
								//redux
								/actions -> action classes
								/reducers -> const (state,action) => switch
								/reducers/index.js -> combineReducers
								//react + redux
								/presentation -> presentations const t =() => {}, validation
								/continers -> mapStateToProps , mapDispatchToProps,
									connect(mapStateToProps , mapDispatchToProps)(PresentationComp)

							]
							
							patterns_shema[

								presentation -> 

								cnontainer -> 
									mapState{map state to props}
									mapDispatch{map events to actions}
									const ComponentNew = connect(mapState,mapDispatch)(Component);
									export default connect({Component})(ComponentNew)
										
									const App = () => (
									  <div>
										<ComponentNew />
										<OtherComponents />
									  </div>
									);

								actionType ->
									actionBuilder
									reducer(state,action){switch}

								const reducerForStore = combineReducers({
								  propNameOne: reducerOne,
								  propNameTwo: reducerTwo,
								});

								const store = createStore(reducerForStore);

								import{ Provider } from'react-redux';
								const WrappedApp = () => (
								  <Provider store={store}>
									<App />
								  </Provider>
								);

							]
							
							sample[
												
								import React from 'react';
								import uuid from 'uuid';
								import { createStore, combineReducers } from 'redux';
								import { Provider, connect } from 'react-redux';

								presentation.action

								mapStateToProps -> binds state props to presentation props
								mapDispatchTorops -> binds presentation action to action type

								const ThreadTabs = connect(
								  mapStateToProps,
							
								mapDispatchTorops
								)(presentation);

								container

								//connect results to app with tags
								const App = () => (
								  <div className='ui segment'>
									<ThreadTabs />  
								  </div>
								);

								//app to redux wrapper
								const WrappedApp = () => (
								  <Provider store={store}>
									<App />
								  </Provider>
								);

								//export wrapperapp
								export default WrappedApp;

							]
						
						]
						//small redux
						Formik[
							https://jaredpalmer.com/formik/
						]
						
						socketIO[
							
							//chat app
							https://medium.com/@REPTILEHAUS/angular-2-and-socket-io-chat-app-f56afb9ceeb2
							
						]
						
						signalR in asp code + TS[
							https://docs.microsoft.com/en-us/aspnet/signalr/overview/getting-started/introduction-to-signalr
							https://docs.microsoft.com/en-us/aspnet/core/tutorials/signalr?view=aspnetcore-2.2&tabs=visual-studio
						]
						
						zone.js[
							https://www.youtube.com/watch?v=3IqtmUscE_U
							https://blog.angularindepth.com/i-reverse-engineered-zones-zone-js-and-here-is-what-ive-found-1f48dc87659b
							https://medium.com/@MertzAlertz/what-the-hell-is-zone-js-and-why-is-it-in-my-angular-2-6ff28bcf943e
						]
						
						mapbox[

							urls[
								<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/leaflet.markercluster.js'></script>
								<script src='https://api.mapbox.com/mapbox.js/v3.1.1/mapbox.js'></script>
								<link href='https://api.mapbox.com/mapbox.js/v3.1.1/mapbox.css' rel='stylesheet' />

								//
								<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/leaflet.markercluster.js'></script>
								<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.css' rel='stylesheet' />
								<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.Default.css' rel='stylesheet' />
							]
										
							code[
								//rotation
								https://www.mapbox.com/mapbox.js/example/v1.0.0/rotating-controlling-marker/
								// use the CSS transform rule if available
								this._icon.style[L.DomUtil.TRANSFORM] += ' rotate(' + this.options.angle + 'deg)';
								
							]

							alliases_fromLibSource[
								1:corslite
								7:mapbox
								17:leaflet
								map.initialize->
								_initLayout:1063

							]

						]
						
						JqueryAlternatives[
							https://www.catswhocode.com/blog/umbrella-js-a-tiny-yet-powerful-alternative-to-jquery	
							https://zeptojs.com/
							https://mootools.net/
						]

						
						nodeJSwebFrameworks[
							
							//https://nodesource.com/blog/next-nuxt-nest/
							//next js
							https://nextjs.org/
							//nuxt
							https://nuxtjs.org/
							//nest js (above Express)
							https://docs.nestjs.com/							
							
							//https://nodesource.com/blog/Express-Koa-Hapi
							https://expressjs.com/
							https://koajs.com/
							https://hapijs.com/
							
						]
						
						GraphQL[
							//GraphQL
							https://graphql.github.io/learn/queries/
							https://github.com/alumbra/alumbra
							https://github.com/graphql/graphiql
							https://fullstackmark.com/post/17/building-a-graphql-api-with-aspnet-core-2-and-entity-framework-core
						]
						
						ORMs[
						
							//JS ORMs
							//mongoose
							https://mongoosejs.com/
							//sequelize
							http://docs.sequelizejs.com/
							//typeORM
							https://github.com/typeorm/typeorm
							//prisma
							https://www.prisma.io
							https://github.com/prisma
							//hasura
							https://hasura.io/
							
						]
					
					]
					
					testing[				
						JasmineKarma[
							https://codecraft.tv/courses/angular/unit-testing/jasmine-and-karma/
						]				
					]
					
					JS_libs
					[
						//drag ndrop
						https://shopify.github.io/draggable/docs/
						https://github.com/Shopify/draggable/tree/master/src/Draggable
						
						//json graph edit
						https://gojs.net/latest/samples/stateChart.html
						
						//trash
						https://davidwalsh.name/drag-drop-elements-trash-mootools
						
						//feathers player
						https://docs.feathersjs.com/
					]	
				
		
					Lit[
		
						//miminizing reflows on DOM
						[
							.createDocumentFragment(), classList.add({}) ,display: none;
							Timeline
						]
						https://www.sitepoint.com/10-ways-minimize-reflows-improve-performance/
						
						//CSS flexbox
						https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox
							
							flex container -> display : felx/inline-flex
								makes children FLEX_ITEMS
							
							Main-axis -> flex-direction:column
							Cross axis -> flex-direction:row;
						
							initial display:flex  RULES ->
								flex-direction:row;
								from start
								not stretch to main axisshrink along cross axis
								flex-basis:auto;
								flex-wrap:nowrap;
						
						//CSS GRID
						https://medium.com/the-andela-way/using-css-grid-and-box-alignment-properties-to-build-form-layouts-b5f7ade6e73d
												
					
						> - child combinator, applied to children
					
					
						//css compatible colors
						http://paletton.com/#uid=75C0W0klllljw6Jkre1mfsEnaGR
						//CSS animated 
						http://www.transformicons.com/
						//css tranlate
						https://codepen.io/kattixie/pen/ezzGKY
						https://codepen.io/adamaoc/pen/PwevMj
						//svg
						https://www.sitepoint.com/add-svg-to-web-page/
						https://www.w3.org/wiki/SVG_Links
						https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform
						https://developer.mozilla.org/kab/docs/Web/SVG
						https://teropa.info/blog/2016/12/12/graphics-in-angular-2.html
						
					]
				
				]
				
				C[
		
					//TCC compiler
					https://bellard.org/tcc/
					//cpp
					https://www.cprogramming.com/tutorial/function-pointers.html
		
						
					HW[
						
						
							/* Welcome to the Interactive C Tutorial.
						Start by choosing a chapter and
						write your code in this window. */

						#include <stdio.h>

						#define BOOL char;
						#define TURE 1;
						#define FALSE 0;

						static int cnt=0;

						struct point {
							int x;
							int y;
						};

						typedef struct { 
							int x;
							int y;
						} point2;

						typedef struct {
							int * id;
							char * name;    
						} person_;

						int main() {   	    
							
							pCheck();
							malloc_();
							
							//tests();
							return 0;
						}

						void tests(){
							hws();
							arrays();
							chars();
							staticCall();
							pntr();
							strcts_();
							adding();
						}
						void malloc_(){
							person_ * p = malloc(sizeof(person_));
							p->id=1;
							free(p);
						} 
							
						void pCheck(){
							person_ p;
							prCh(&p);
							printf("person %d :",p.name);
							p.name="pn";
							printf("person %d :",p.name);
							printf("\n");
							
						}
						void prCh(person_ * p_){
							p_->name="name1";
						}
						void move_(point2 * p){
							p->x++;
							p->y++;
						}

						void addP(point2 p){
							p.x++;
						}
						void addP_(point2 * p){
							(*p).x++;
						}
						void addX(int x){
							x++;
						}
						void addX_(int * x){
							(*x)++;
						}
						void adding(){
							int x=2;
							addX(x);
							printf("n before %d \n",x);
							addX_(&x);
							printf("n after %d \n",x);
							
							point2 p;
							p.x=6;
							p.y=7;
							
							addX(p.x);
							printf("p.x before %d \n",p.x);
							addX_(&p.x);
							printf("p.x after %d \n",p.x);
							
							addP(p);
							printf("p before %d \n",p.x);
							addP_(&p);
							printf("p after %d \n",p.x);
							
							printf("p before moove %d %d\n",p.x,p.y);
							move_(&p);
							printf("p after moove %d %d\n",p.x,p.y);
							
						}
						void strcts_(){
							struct point p;
							p.x=3;
							p.y=4;
							printf("val %d %d \n",p.x,p.y);
							
							point2 p2;
							p2.x=5;
							p2.y=5;
							printf("val %d %d \n",p2.x,p2.y);
							
						}
						void pntr(){
							int a=3;
							int * ptr=&a;
							*ptr+=1;
							printf("value a: %d \n",a);
							printf("pointer to a: %d \n",ptr);
							printf("pointer deref to a: %d \n",*ptr);
						}
						void staticCall(){
							   stcnt(3);
						}
						void stcnt(int i_){
							for(int i =0;i<i_;i++){
								cnt+=1;
							}
							printf("%d",cnt);
						}

						void hws(){
							  //hw
							printf("Hello, World!");
							
							//ints
							int foo;    
							int bar=1;
							int a=0,b=1,c=2,d=3;
							int z=a+b+c+d;    
							printf("%d",z);
							printf("\n");
							
						}
						void arrays(){
							 //arrays
							int number[3];
							number[0]=10;
							number[1]=20;
							number[2]=30;
							printf("%d",number[0]);
							printf("\n");
							
							int mtarr[1][2];
							mtarr[0][0]=11;
							printf("%d",mtarr);
							printf("\n");
							
							int arr2[3][4] = {  
						   {0, 1, 2, 3} ,   /*  initializers for row indexed by 0 */
						   {4, 5, 6, 7} ,   /*  initializers for row indexed by 1 */
						   {8, 9, 10, 11}   /*  initializers for row indexed by 2 */
							};
						}
						void chars(){
							
							char * name = "John Smith";
							char name2[] = "John Smith";
							int age=27;
							printf("%s name is age %d",name2,age);
							printf("\n");
							
							if(strncmp(name2,"John",4)==0){
								printf("John is OK");
								printf("\n");
							}else{
								printf("John is NOT OK");
								printf("\n");
							}
							
							char dest[20]="Hello";
							char src[20]="World";
							strncat(dest,src,3);
							printf("%s\n",dest);
							strncat(dest,src,20);
							printf("%s\n",dest);
							

						}
							
				
					]
					
			]
								
			FullStack[
				//ultimate full stack guide
				https://codeburst.io/the-ultimate-guide-to-learning-full-stack-web-development-in-6-months-for-30-72b3854a7458
				//Full-stack roadmap 2018
				https://codeburst.io/the-2018-web-developer-roadmap-826b1b806e8d
				//Full-stack guide 2018
				https://codeburst.io/the-ultimate-guide-to-learning-full-stack-web-development-in-6-months-for-30-72b3854a7458
			]
						
			GIT[
				https://medium.freecodecamp.org/understanding-git-for-real-by-exploring-the-git-directory-1e079c15b807
				https://git-scm.com/book/en/v2
				
				git_branching_strategies[
				
				
					//practice guy, new MS tutorials for Azure high grade
					https://docs.microsoft.com/en-us/azure/devops/repos/git/git-branching-guidance?view=vsts
					//straight to the point , main veriations
					https://www.javacodegeeks.com/2015/11/git-branching-strategies.html
					//multydev consistency rare detailed concept,colorfull chart,  Vincent Driessen
					https://nvie.com/posts/a-successful-git-branching-model/
					//reupgrade of Vincent Driessen matreial
					https://jp-lambert.me/git-gitflow-and-continuous-integration-for-dummies-5e4300148fbf
					//constructive critics of  Vincent Driessen
					https://github.com/petervanderdoes/gitflow-avh/issues/287				
					//atlassian guide for CI
					https://www.atlassian.com/continuous-delivery/continuous-delivery-workflows-with-feature-branching-and-gitflow
				]
			
			]
			
			DB[
			
				SQL[
				
					//postgres Firststeps
					https://www.postgresql.org/docs/8.3/static/app-postgres.html
					//mssql kill db
					https://dba.stackexchange.com/questions/2387/sql-server-cannot-drop-database-dbname-because-it-is-currently-in-use-but-n
					
						
					UPDATEvsINSERTDELETE[
						https://stackoverflow.com/questions/1271641/in-sql-is-update-always-faster-than-deleteinsert
					]
					
					MS_TSQL[
						
						joinTypes_sql[

							/*
							[] []
							[ ([]) ] inner join 
							([ []) ] left outer join 
							([ )[] ] left outer join with exclusion
							[ ([] ]) right outer join
							[ []( ] ) right outer join woith exclusion
							{[ )[] ] semi join where exists
							*/
							
							use testDb

							
							drop table TableOne;
							drop table TableTwo;


							create table TableTwo (
								ID int,
								Name varchar(250),

								primary key (ID)
							)

							create table TableOne (
								ID int,
								TableTwoID int,
								Name varchar(250),
								
								primary key (ID),
								foreign key (TableTwoID) references TableTwo(ID)

							)

							insert into TableTwo(Id,Name) values (0,'Name1');
							insert into TableTwo(Id,Name) values (1,'Name2');
							insert into TableTwo(Id,Name) values (2,'Name3');
							insert into TableTwo(Id,Name) values (3,'Name4');
							insert into TableTwo(Id,Name) values (4,'Name5');

							insert into TableOne(ID,Name, TableTwoID) values (1,'Value2',1);
							insert into TableOne(ID,Name, TableTwoID) values (2,'Value3',1);

							insert into TableOne(ID,Name, TableTwoID) values (3,'Value4',2);

							insert into TableOne(ID,Name, TableTwoID) values (4,'Value5',null);
							insert into TableOne(ID,Name, TableTwoID) values (5,'Value6',null);


							select * from TableOne
							select * from TableTwo 



							/*
							[ ([]) ] inner join
							*/
							select * from TableOne t
							inner join TableTwo t2 on t.TableTwoID = t2.ID 

							/*
							([ []) ] left outer join 
							([ )[] ] left outer join with exclusion
							*/
							select * from TableOne t
							left outer join TableTwo t2 on t.TableTwoID = t2.ID 
							where 1=1 and t.TableTwoID is not null

							/*
							[ ([] ]) right outer join
							[ []( ] ) right outer join woith exclusion
							*/
							select * from TableOne t
							right outer join TableTwo t2 on t.TableTwoID = t2.ID 
							where 1=1 and t.TableTwoID is not null



							/*
							semi join 
							[ [(]) ]
							*/
							select * from TableOne t
							where exists (
								select 1 from TableTwo t2 where t.TableTwoID = t2.ID 
							)

							select * from TableTwo t
							where exists (
								select 1 from TableOne t2 where t2.TableTwoID = t.ID 
							)



							/*
							([ [] ])
							with Id,Fk null/not null immitating inner and left
							*/
							select * from TableOne t
							full outer join TableTwo t2 on t.TableTwoID = t2.ID
							where 1=1
							--and t.Id is null 
							--and t.TableTwoID is null 


							/*
							cartesian 
							[]*[]
							*/
							select * from TableOne ,TableTwo

							select * from TableOne cross join TableTwo


						
						]
						
						scripts[

							analytical[
															
								adjacentTables[
									use [testdb]
									drop table GeographicalCategoryAdjancy
									drop table GeographicalCategory


									create table GeographicalCategory 
									(
									ID uniqueidentifier, 
									Name varchar(50),
									PRIMARY KEY (ID)

									)

									create table GeographicalCategoryAdjancy
									(
									ID uniqueidentifier,
									Depth int,
									ParentID uniqueidentifier,
									ChildID uniqueidentifier

									PRIMARY KEY (ID),
									FOREIGN KEY (ParentID) REFERENCES GeographicalCategory(ID),
									FOREIGN KEY (ChildID) REFERENCES GeographicalCategory(ID)
									)

									declare @idA uniqueidentifier;
									declare @idB uniqueidentifier;


									set @idA = newid();
									insert into GeographicalCategory values (@idA,'Nm1');
									set @idB = newid();
									insert into GeographicalCategory values (@idB,'Nm2');
									insert into GeographicalCategoryAdjancy values (newid(),0,null,@idA);
									insert into GeographicalCategoryAdjancy values (newid(),1,@idA,@idB);

									set @idB = newid();
									insert into GeographicalCategory values (@idB,'Nm3');
									insert into GeographicalCategoryAdjancy values (newid(),1,@idA,@idB);

									set @idA = newid();
									insert into GeographicalCategory values (@idA,'Nm4');
									insert into GeographicalCategoryAdjancy values (newid(),2,@idB,@idA);


									select @idA=ChildID  from GeographicalCategoryAdjancy where ParentID is null;
									set @idB = newid();
									insert into GeographicalCategory values (@idB,'Nm0');
									update GeographicalCategoryAdjancy set ParentID = @idB where ParentID is null;
									update GeographicalCategoryAdjancy set Depth = Depth+1 where Depth>=0;
									insert into GeographicalCategoryAdjancy values (newid(),0,null,@idB);


									--select top(1) @idA=ChildID from GeographicalCategoryAdjancy where Depth=2;
									--set @idB = newid();
									--insert into GeographicalCategory values (@idB,'Nm5');


									select * from GeographicalCategoryAdjancy order by Depth asc;
									select * from GeographicalCategory order by Name asc;


								]
								
								selectMaxPopulationInCityByCountry
								[
								
									use testDb

									drop table Cities;
									drop table Countries;
									drop view MaxCountriesPopulation;

									create table Countries(
										ID int,
										Name varchar(50)

										primary key (ID)
									)

									create table Cities(
										ID int,
										CityName varchar(50),
										PeopleCount int,
										CountryID int

										foreign key (CountryID) references Countries(ID)
									)


									insert into Countries (ID,Name) values (0,'CountryOne');
									insert into Countries (ID,Name) values (1,'CountryTwo');
									insert into Countries (ID,Name) values (2,'CountryThree');
									insert into Countries (ID,Name) values (4,'CountryThree');

									insert into Cities (ID,CityName,PeopleCount, CountryID) values (0,'CityOne',100,0);
									insert into Cities (ID,CityName,PeopleCount, CountryID) values (1,'CityTwo',200,0);
									insert into Cities (ID,CityName,PeopleCount, CountryID) values (3,'CityThree',300,0);

									insert into Cities (ID,CityName,PeopleCount, CountryID) values (4,'CityFour',400,1);
									insert into Cities (ID,CityName,PeopleCount, CountryID) values (7,'CitySeven',700,1);

									insert into Cities (ID,CityName,PeopleCount, CountryID) values (5,'CityFive',500,2);
									insert into Cities (ID,CityName,PeopleCount, CountryID) values (6,'CitySix',200,2);



										
										create view MaxCountriesPopulation as 

										with cte as (

											select
												cr.Name,ct.CityName,ct.PeopleCount
												/*
												,RANK() over(partition by cr.Name order by ct.PeopleCount) as R
												,DENSE_RANK() over(partition by cr.Name order by ct.PeopleCount) as DR
												,ROW_NUMBER() over(order by cr.Name) as RN
												*/
											from Countries cr
											join Cities ct on cr.ID = ct.CountryID

										) 

										select 
										c2.Name,c2.CityName,c2.PeopleCount as PC
										from cte as c2 
										join (

											select 
											c1.Name,max(c1.PeopleCount) as PC
											from cte as c1 
											group by c1.Name

										) t on t.Name = c2.Name and t.PC = c2.PeopleCount
										;

										


										create view LargestCityInCountryByPopulation as

										with cte as (
											select
											cr.Name,ct.CityName,ct.PeopleCount	
											from Countries cr
											join Cities ct on cr.ID = ct.CountryID
										) 

										select 
											c1.Name,c1.CityName, t.PeopleCount
										from cte as c1
										inner join (
											select 
												CityName,Max(PeopleCount) as PeopleCount
											from cte
											group by CityName
												having Max(PeopleCount)  = (
													select 
														Max(PeopleCount) as PeopleCount
													from cte	
												)
										) t on t.CityName = c1.CityName ;



										select * from MaxCountriesPopulation;
										select * from LargestCityInCountryByPopulation;

								]
																
								rowversion[
								
									CREATE TABLE MyTest (myKey int PRIMARY KEY  
										,myValue int, RV rowversion);  
									GO   
									INSERT INTO MyTest (myKey, myValue) VALUES (1, 0);  
									GO   
									INSERT INTO MyTest (myKey, myValue) VALUES (2, 0);  
									GO  

									select * from MyTest

									update MyTest
									set myValue = 0
									where myKey = 2

								]
								
								generateDateTime[

									declare @i int = 0;
									declare @dt datetime = '20190101';
									while @i < 10
									begin
										set @i = @i + 1;
										select 
											dateadd(DAY,@i,SYSDATETIME())
											,dateadd(day,@i,@dt)
										;
									end;

								]
								
								datesAndTruncate[
								
select
dateadd(DAY,1,SYSDATETIME())
,DATEDIFF(dd,SYSDATETIME(),SYSDATETIME())
,DATEPART(dd,SYSDATETIME())

/*year,month,day start*/
,DATEADD(yy,datediff(yy,0,getdate()),0)
/*year,month,day add*/
,dateadd(yy,1,DATEADD(yy,datediff(yy,0,getdate()),0))

								]

							]

							maintenance[
								
								killAllConnections[
									DECLARE @kill varchar(8000) = '';  
									SELECT @kill = @kill + 'kill ' + CONVERT(varchar(5), session_id) + ';'  
									FROM sys.dm_exec_sessions
									WHERE database_id  = db_id('newOrderDB')

									EXEC(@kill);

								]
								
								hashIndexStat[
									//https://docs.microsoft.com/en-us/sql/database-engine/determining-the-correct-bucket-count-for-hash-indexes?view=sql-server-2014
									SELECT   
									object_name(hs.object_id) AS 'object name',   
									i.name as 'index name',   
									hs.total_bucket_count,  
									hs.empty_bucket_count,  
									floor((cast(empty_bucket_count as float)/total_bucket_count) * 100) AS 'empty_bucket_percent',  
									hs.avg_chain_length,   
									hs.max_chain_length  
									FROM sys.dm_db_xtp_hash_index_stats AS hs   
									JOIN sys.indexes AS i   
									ON hs.object_id=i.object_id AND hs.index_id=i.index_id
								]
								
								//locked objects
								EXEC sp_lock; 
								//column rename
								EXEC sp_rename 'Sales.SalesTerritory.TerritoryID', 'TerrID', 'COLUMN';
								
								
								search_object_by_name[

									SELECT DISTINCT
										OBJECT_SCHEMA_NAME(sc.[object_id]) [name], 
										so.[type] [type],
										OBJECT_NAME(sc.[object_id]) [object_name]
									FROM
										sys.sql_modules sc
									INNER JOIN
										sys.objects so on so.object_id = sc.object_id
									WHERE
										sc.definition LIKE '%ObjectName%'
								]
								
							
								selectIndexStat[
								
									select 
										top(10)
										*
									FROM sys.indexes as h
									INNER JOIN sys.tables t on h.object_id=t.object_id

								]
								
								selectSnapshotStat[
									select	
									t.is_read_committed_snapshot_on ,
									t.snapshot_isolation_state,
									t.* 
									from sys.databases t
								]
								
								
							]

						]
												
						theory [
							
							ACID
								atomicity - transactions
								consistency - constraints,cascades,trigers, Referential integrity - Primary-foreignKey refs
								isolation - transaction isolation levels
								durability - commites guarantee

							serializable	
								most strict
							repeatable read
								+ phantom read (rows can appear from T1 to T2)
							read commited
								+ non repeatable read (rows can disappear or updates from T1 to T2)
							read uncommited 
								+ dirty read (read uncommitted data)

							snapshot

							optimistic concurency
								begin
								read/write
								check 
									? if other commit or read/write rollback
									: commit;
								
								o - compared by rownumber 
									rowversion type in table createion
								
									CREATE TABLE MyTest (myKey int PRIMARY KEY  
									,myValue int, RV rowversion)
							
							plans[
								o- table scan can be effective when large percent of rows result
								
							]
							
							Indexes[
								
								inMemoryTables
								[

									Hash:
										o- 	SQL has one hash F() for all hash keys, 
												bell curve sitribution
												realistic ration 30% of all buckets contain 2 keys
												
										small bucketcount:
											o- increase collisions and chainlength result in lookup time increase
										large bucketcount:
											o- increase memory utilization , impact full index scan performance
											
										performance is :
											OK- when where has concrete value for index column					
											NOT_OK- when wher ehas range or one column value of two_cloumn index
											
												
										MemoryOptimisedTables 
										
											o- balance between empty buckets - non optimal b-tree	
												and chain_length - a lot NONUNIQUE items in one bucket 
											
											o- bucket_count x2 x4 rowcount if no grow x10 if growth expected
											o- bucket count lower then unique keys leads to large chain length
											o- large chain_length affects lookup operations, SELECT, UPDATE
											o- large number of nonunique keys lead to collisions 
												USE NONCLUSTERED INDEX
												hight bucket count x20-x100 to unique index
											
										SmallTables
											o- if lookup and insert are predominnant performance opertaion 
												use bucket count x2-x3
											o- if index scans
												use bucketcount close to ~~ index count
										
										BigTables
											
											
										
											table 250 mln rows 4 hash indexes
											250mln rows * 4 indexes * 8 bytes ~~ 32GB
											
											full table scan are not performance critical
											
											o- for memory utilization optimize 
												bucket count close to number of index keys
											o- for point lookup optiomize 
												bucketcount x2-x3		
								]
								
								onDiskTables
								[
									clustered
										o- sorts columns in one order per table in b-tree
										o- better performance on columns which rare or not updated 
										o- column with hight value unique increase performance
										
										o- separate from data rows
										o- contains nonclustered key values with ref to data row with value
										o- for heap row locator is pointer to row
										o- for clustered row locator is clustered index key
										
									nonclustered
										o- strores key and pointer RowLocator
											for HeapTable row locator pointer to row
											for clustered table rowlocator clustered index key
										
								]
										
							]
							
							APPLY[

								cross apply outer apply equals inner/outer join with more 
								efficiency and can query functions ->
								select * from t outer apply func(t.param)

							]

						]
						
					]
					
				]
				
				NoSql[
				
					mongoDB[
						//mongodb
						https://www.codementor.io/pmbanugo/working-with-mongodb-in-net-1-basics-g4frivcvz
						https://docs.mongodb.com/ecosystem/drivers/csharp/
						https://www.codeproject.com/Articles/1223461/AOP-Method-and-property-interception-in-Csharp
						https://www.youtube.com/watch?v=PFQnNFe27kU
						https://www.youtube.com/watch?v=wgdBVIX9ifA			
						http://index-of.es/Varios/Sam%20Newman-Building%20Microservices-O%27Reilly%20Media%20(2015).pdf			
						https://thenewstack.io/led-amazon-microservices-architecture/
						//transactoins 
						https://docs.mongodb.com/manual/core/transactions/
						
						courses[
							
							//m001
							https://university.mongodb.com/mercury/M001/2018_September/chapter/Chapter_1_Introduction/lesson/594f8ee9e1c27e0eeecf6263/tab/594f8ef204a5d1ec8a58dcdf
							//m040
							https://university.mongodb.com/courses/M040/about
							//m201
							https://university.mongodb.com/courses/M201/about
							//m121
							https://university.mongodb.com/mercury/M121/2018_September/syllabus
							//m101 NET dev
							https://university.mongodb.com/courses/M101N/about
							//exam 
							https://university.mongodb.com/certification/developer/about
							//study guide 
							https://university.mongodb.com/exam/guide#crud
						
						]
						
						mongodbConcurency[
							Applications must ensure that only one thread at a time executes these operations in a client session.
							https://docs.mongodb.com/manual/core/causal-consistency-read-write-concerns/
							https://docs.mongodb.com/manual/faq/concurrency/
						]
						
						code[
							overall[
							db.snapshots.insertMany( [
								{"_id" : "001","PrevId" : null,"LayoutId" : "100"}
								,{"_id" : "002","PrevId" : 001,"LayoutId" : "100"}
								,{"_id" : "003","PrevId" : 002,"LayoutId" : "100"}
							]);


							db.cards.insert(
							{
								"_id" : "100",
								"Tags" : [ 
								"mall"
								],
								"PartnerId" : "testpartner",
								"LastId" : "001",
								"Status" : "ready"
							})

							db.snapshots().find({_id:"001"})

							db.snapshots.remove( {_id:"001"} )
							db.cards.remove( {_id:"100"} )
							]
						]
						
					]
				
				]
			
			]
						
			Graphics[
				//recommendations
				https://www.jeremyong.com/c++/vulkan/graphics/rendering/2018/03/26/how-to-learn-vulkan.html
				//TIP to graphics pipeline
				https://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/
				
				//SDM
				https://docs.microsoft.com/en-us/windows/desktop/DxTechArts/common-techniques-to-improve-shadow-depth-maps
				
				booksSearch[
					https://www.amazon.com/Real-Time-Rendering-Fourth-Tomas-Akenine-Mo-ebook/dp/B07FSKB982/ref=mt_kindle?_encoding=UTF8&me=&qid=
					https://www.twirpx.com/file/1491248/
				]
				
				
				OpenGL[
					//tutorials
					http://ogldev.atspace.co.uk/index.html
				]
				
				Vulkan_API[
					//Source list 
					https://www.khronos.org/vulkan/
					//Quick refernce
					https://www.khronos.org/files/vulkan11-reference-guide.pdf
					//How to learn vulkan
					https://www.jeremyong.com/c++/vulkan/graphics/rendering/2018/03/26/how-to-learn-vulkan.html
					//sources
					https://github.com/KhronosGroup/Khronosdotorg/blob/master/api/vulkan/resources.md
					//tutorial
					https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Validation_layers
					//vulkan 30 minutes
					https://renderdoc.org/vulkan-in-30-minutes.html
					//intel 
					https://software.intel.com/en-us/articles/api-without-secrets-introduction-to-vulkan-preface
					//examples
					https://github.com/SaschaWillems/Vulkan
					https://github.com/LunarG/VulkanSamples
					//specification
					https://www.khronos.org/registry/vulkan/specs/1.1/pdf/vkspec.pdf
					//sample codes NVidia
					https://developer.nvidia.com/Vulkan
					
				]
			
			]
			
			wireshark[
				https://www.howtogeek.com/104278/how-to-use-wireshark-to-capture-filter-and-inspect-packets/
				https://wiki.wireshark.org/
			]
			
			MSA[
				//msa implementation CQRS, Net BUS, EventStore
				https://koukia.ca/a-microservices-implementation-journey-part-1-9f6471fe917
				https://koukia.ca/a-microservices-implementation-journey-part-2-10c422a4d402
				
				//cqrs
				http://cqrs.nu/
			]
			
			devops[
			//devops tools periodic table
				https://xebialabs.com/periodic-table-of-devops-tools/
			]
			
			ML[
				http://course18.fast.ai/ml
				
				//ML overview
				https://skymind.ai/wiki/neural-network
				//tensorflow c++ API
				https://www.tensorflow.org/guide/extend/cc
				//SciSharp ports of ML libs to sharp
				https://github.com/SciSharp
			]			
		
			//progressive web Apps
			PWA[
				https://medium.com/@amberleyjohanna/seriously-though-what-is-a-progressive-web-app-56130600a093
			]
			
			Docker[
			
				overall[
//->
echo -e "FROM busybox\nCOPY /hello /\nRUN cat /hello" > Dockerfile 
//<-

mkdir myproject && cd myproject
echo "hello" > hello
(echo FROM busybox && echo COPY /hello / && echo RUN cat /hello) > Dockerfile
docker build -t helloapp:v1 .

mkdir dockerfiles context
move Dockerfile dockerfiles && move hello context
docker build --no-cache -t helloapp:v2 -f dockerfiles/Dockerfile context


mkdir di 
cd di

(echo FROM mcr.microsoft.com/windows/servercore:ltsc2019 && echo LABEL maintainer="jshelton@contoso.com" && echo RUN dism.exe /online /enable-feature /all /featurename:iis-webserver /NoRestart && echo RUN echo "Hello World - Dockerfile" > c:\inetpub\wwwroot\index.html ) > Dockerfile"

docker build -t mvccoresb .
docker run -d -p 8080:80 --name myapp mvccoresb

//inspect 
docker logs -f <container ID>
docker images

				]
				
			]
			
			interop[
				//interop and call c++ from c#
				https://docs.microsoft.com/en-us/dotnet/framework/interop/
			]
			
		]

		
		
		learningProgramms[
		
			cis 2750 computer science
			[
				//project example
				https://www.andrewjudd.ca/professional/academics/cis2750#milestone2
			]
			
			//5months
			cpp[

				 Введение[
				Система сборки: build, test and deploy.
				Поиск распространяемых пакетов. Кастомный модуль для наших пакетов.
				Домашние задания: 1
				ДЗ
				Сборка и публикация пакета. Написать программу выводящую на консоль единственную строку

				Hello, World!

				Сформировать готовый для установки deb-пакет со скомпилированной программой и выложить его в репозиторий.
				Прислать ссылку на репозиторий в github и ссылку на репозиторий с
				пакетом.
				Будет здорово, но не обязательно
				Добавить версионность в пакет и сообщение.
				Запустить на этапе сборки тесты.
				Может пригодиться
				Выложить исходные тексты в репозиторий на github.
				Залогиниться на https://travis-ci.org/ и включить для своего репозитория
				автоматическую сборку.
				Залогиниться на https://bintray.com/ 
				(For an Open Source Account и аккаунт
				github). Создать новый репозиторий - имя произвольное, тип Debian, Default
				Licenses любая. После создания отредактировать включив GPG sign.
				Создать в созданном репозитории новый пакет - имя произвольное,
				ссылка на контроль версии может быть указана как - (просто чтобы было
				заполнено).
				По ссылке https://bintray.com/profile/edit в пункте API Key скопировать
				ключ. В настройках репозитория в https://travis-ci.org создать переменную,
				например BINTRAY_API_KEY, и в качестве значения API Key. Это
				позволит не указывать явно ключ в исходниках.


				Пример на github:
				https://github.com/vvz-otus/hw02.cpp01_2
				Только ваш проект называться будет helloworld (а не cpp01_2:)
				Широкоиспользуемые фичи C++11 стандарта. auto. Замыкание - Лямбда-функции. Кортежи.
				Некоторые небольшие, на первый взгляд, нововведения настолько меняют язык, что диву даешься :
				Широкоиспользуемые фичи C++11 стандарта. rvalue и lvalue ссылки. Move semantic. Variadic Templates. POD.
				5 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				ДЗ-02. C++14. 1.
				Выполнить задание описанное в 02.homework.pdf

				2.
				Зарегистрироваться в http://acm.timus.ru
				Решить первые пять простых задач:
				1001 1000 1785 1293 2012

				3. Опционально!
				Реализовать constexpr-функцию нахождения ближайшей большей степени двойки
				https://goo.gl/CBfjE9
				Рассмотрим полезные нововведения 14 стандарта.
				9 июля, 20:00 — 21:30
				Обзор C++17 - а чего же там эдакого? Часть 1.
				На дворе 21-й век, и как-то уже не модно заниматься разработкой на C++98 из прошлого века.
				Однако C++11 и даже C++14 также больше не являются финальной точкой развития. Пора приступать к изучению C++17!

				На этом занятии мы рассмотрим нововведения стандарта C++17. Даже не будем стараться охватить своим взором абсолютно все нововведения, но всё-таки посмотрим довольно много всего.

				Итак, по окончанию этого занятия слушатели получат представление о следующих фишках C++17.

				Сначала посмотрим в сторону шаблонов. Как попытались облегчить жизнь разработчиков обобщённого кода?
				1. Свёртка списка параметров теперь стала гораздо проще. Появился соответствующий синтаксис - отставить написание промежуточных функций или создания массивов.
				2. Теперь можно писать auto в параметры шаблона. Да, раньше было нельзя. Да, это действительно удобно. Покажем на примерах.
				3. Автоматический вывод параметров шаблонов сделает код короче и (есть надежда) понятнее. Однако, правила автоматического вывода понятными не стали. Посмотрим на реализацию deduction guide и ужаснёмся. А потом сделаем это самостоятельно.

				Не только шаблоны и стандартная библиотека были обновлены. Также изменения коснулись некоторых общих конструкций языка.
				1. Долой ifdef, даёшь constexpr if! Достаточно нескольких примеров, чтобы восхититься.
				2. inline переменные как попытка избежать проблем extern. Редкая проблема, посмотрим, поймём, забудем до востребования.
				3. Раньше было нельзя, а теперь можно - constexpr с лямбдами.
				4. Может, пригодится - инициализаторы внутри операторов if и switch.
				5. Порядок вычислений стал более упорядочен. Мелочь, а приятно. Теперь не всё UB, что таковым кажется.
				6. Вложенные пространства имён экономят бумагу (и табуляции).
				7. Старый добрый alignas теперь с новыми гарантиями.
				8. Structured bindings или что-то вроде std::tie, но не совсем.
				9. __has_include в помощь разработчикам библиотек.
				10. Атрибуты. Новые атрибуты. Не знали, что есть старые? Ничего - рассмотрим все.
				11. Надоело писать банальные сообщения об ошибках? Теперь можно не писать. Встречайте static_assert с одним аргументом.
				12 июля, 20:00 — 21:30
				Обзор C++17 - а чего же там эдакого? Часть 2.
				На дворе 21-й век... Но это Вы уже знаете и так.

				На этом занятии продолжим рассмотрение нововведений стандарта C++17. Впереди ещё много много интересного - не переключайтесь :.

				Над стандартной библиотекой трудятся лучшие умы сообщества. Поэтому и изменений довольно много.
				1. Посмотрим на std::filesystem. Что-то напоминает? Или нет? Для тех, кто раньше использовал boost - самое то.
				2. std::shared_ptr с массивами теперь работает также прекрасно, как и std::unique_ptr. Не поняли, о чём речь? Объясним в деталях.
				3. std::scoped_lock как альтернатива довольно неудобному std::lock. Достаточно одного простого примера, чтобы понять суть.
				4. std::optional - нечто, чего может и не быть.
				5. std::any - нечто, что может быть чем угодно.
				6. std::variant - нечто, что знает, чем оно является. И тоже что-то напоминает...
				7. std::string_view - классная штука или новая опасность?
				8. std::byte на замену uint8_t при работе с памятью. Семантика улучшена.
				9. std::invoke и std::is_invocable - ценителям шаблонов.
				10. Мало им было std::to_string и itoa, теперь есть ещё и std::to_chars и std::from_chars. Посмотрим, что изменилось. И почему вообще цифры буквами записать так сложно.
				11. std::as_const - тоже для любителей шаблонов. Постараемся придумать кейс использования.
				12. Уже оценили std::begin, std::end? Нет? Самое время! Встречайте - std::size, std::data и std::empty. Попробуем пообещать себе использовать.
				13. Логические метафункции - поймут только знатоки. Посмотрим, восхитимся и забудем. Довольно узкая тема.
				14. emplace_back теперь возвращает ссылку. Отставить emplace_back + back! Наконец-то.
				15. Searcher functors - для тех, кто знает, что такое алгоритм Бойера – Мура или алгоритм Бойера — Мура – Хорспула. Немного погрузимся, но совсем чуть-чуть.
				16. Даёшь больше математики! Не знаете, что такое Дзета-функция Римана? А стандарт C++17 знает. Чисто для информации - на занятиях использовать не будем.
				17. try_emplace и insert_or_assign в std::map - оценят только те, кто наступал на грабли. Покажем на примере.
				18. Хотите узнать, чем std::apply отличается от std::invoke? Приходите - поговорим об этом.
				19. Много проблем с std::initializer_list? Их решить призван метод std::make_from_tuple.
				20. Кто-нибудь пользовался std::not1 и std::not2? Теперь можно пользоваться ещё одной функцией - std::not_fn. Не пользовались? Попробуем на занятии.
				21. Пересадка элементов контейнеров гораздо проще пересадки органов - std::extract спешит на помощь! Заодно посмотрим на merge-метод.
				22. std::is_integral<T>::value - теперь можно короче: std::is_integral_v<T>. Шаблоны становятся чуть менее страшными.
				23. Параллельные алгоритмы теперь не только в параллельных вселенных. Больше не нужно изобретать велосипедов (хотя бы части).


				Есть также возможности языка, которые больше таковыми не являются. Кое-что было безжалостно выпилено из стандарта.
				1. Попрощаемся с триграфами (а кто-то узнает о том, что они были).
				2. Простимся с std::auto_ptr (надеюсь, никто и не пользовался).
				3. Незаслуженно забудем std::random_shuffle.
				4. Узнаем, что теперь нельзя делать перфиксный и постфиксный инкременты для типа bool (да, раньше можно было).
				5. Больше не будем использовать спецификацию исключений.
				16 июля, 20:00 — 21:30
				Вглубь реализации умных указателей.
				Подводные камни и оптимизации.
				19 июля, 20:00 — 21:30
				Идея аллокаторов.
				Стандартный аллокатор и его недостатки. Различные методы управлением памятью: достоинства и недостатки.
				23 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				ДЗ-03. allocator. 1. Выполнить задание описанное в 03.homework.pdf
				2. На acm.timus.ru выполнить 1409, 1877, 2001, 1264, 1787
				Что это и зачем? Как выглядит в C++: макросы и шаблонная магия. Примеры. Type traits в STL. SFINAE
				26 июля, 20:00 — 21:30


				]

				 Архитектура[
				Принципы проектирования ПО
				UML. Принципы: SoC, DRY, YAGNI, KISS, TDA, LoD, SOLID
				30 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				ДЗ-04.doxygen. 1. Выполнить задание описанное в 04.homework.pdf
				2. Решить первые 15 задач на acm.timus.ru (от простых к сложным)
				3. Предоставить РЕВЬЮ ДЗ-02 от двух коллег (которые его выполнили)
				4. Опционально: предоставить примеры, из своей практики, использования Принципов Проектирования
				GRASP. Часть 1
				Рассмотрим: Indirection, Low Coupling, Polymorphism, Protected Variations.

				Дополним всё это безобразие: Creator, Controller, Pure Fabrication, Information Expert, High Cohesion
				2 августа, 20:00 — 21:30
				Шаблоны GoF. Часть 1.
				Порождающие шаблоны проектирования.
				6 августа, 20:00 — 21:30
				Шаблоны GoF. Часть 2.
				Структурные шаблоны проектирования.
				9 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Решаем фрагмент прикладной задачи используя изученные подходы..
				Шаблоны GoF. Часть 3.
				Поведенческие шаблоны проектирования. 1 часть
				13 августа, 20:00 — 21:30
				Шаблоны GoF. Часть 4.
				Поведенческие шаблоны проектирования. 2 часть
				16 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Решаем фрагмент прикладной задачи используя изученные подходы..
				Антипаттерны
				Разберем антипаттерны программирования (кодирования), ООП, проектирования и антипаттерны в других областях
				20 августа, 20:00 — 21:30
				STL. Часть 1.
				Структуры данных STL
				23 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Реализуем алгоритм используя разные структуры. Оцениваем читаемость и эффективность..
				STL. Часть 2
				Алгоритмы
				27 августа, 20:00 — 21:30
				Boost. Часть 1
				Контейнеры
				30 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Создаем набор повседневных утилит..
				Boost. Часть 2
				Алгоритмы
				3 сентября, 20:00 — 21:30

				]

				 Параллельные вычисления[
				Многопоточность
				Потоки. Критические секции и методы синхронизации: мьютексы, семафор, условные переменные, барьеры. Пулы потоков.
				6 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Реализуем алгоритм максимально задействовав все имеющиеся ядра CPU..
				Шаблоны 5
				Concurrency pattern. Active Object, Balking, Barrier, Double-checked locking, Guarded suspension, Leaders/followers, Monitor Object, Reactor, Read write lock, Scheduler, Thread pool, Thread-local storage.
				10 сентября, 20:00 — 21:30
				Асинхронное программирование
				Архитектура асинхронных сервисов. Низкоуровневая поддержка асинхронного выполнения кода.
				13 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Читаем RSS нескольких сервисов..
				Lockfree DS
				Неблокирующие структуры данных и алгоритмы. BOOST Lockfree
				17 сентября, 20:00 — 21:30

				]

				 Сеть[
				Сетевое взаимодействие
				Сокеты. Протоколы: TCP и UDP. Сериализация. HTTP. Json. Zmq. Protobuf.
				20 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Клиент и сервер для реализации внешнего kv хранилища..
				Асинхронный ввод/вывод
				Библиотеки и практики работы с неблокирующей передачей данных
				24 сентября, 20:00 — 21:30

				]

				 Хранилища[
				РСУБД
				Использование РСУБД. Подключение и работа с БД
				27 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Высокоуровневый клиент для работы с pg.
				Key Value
				Идея NoSQL. Aerospike, redis, leveldb
				1 октября, 20:00 — 21:30
				Много данных
				Map reduce
				4 октября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				На реальном примере выявить навигационные запросы..
				ORM
				ООП при работе с базами данных. Паттерны DAO и Repository
				8 октября, 20:00 — 21:30

				]

				 ML[
				Dlib. Часть 1.
				Кластеризация, тематическое моделирование.
				11 октября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Разбить заголовки прочитанных rss на группы.
				Dlib. Часть 2.
				Регрессия
				15 октября, 20:00 — 21:30
				Dlib. Часть 3.
				Классификация
				18 октября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				На реальном примере выявить поведение характерное для ботов..


				]

			]
			
			certificates[
				https://sps.northwestern.edu/advanced-graduate-certificate/
			]		
			
			algorithms[
				https://www.coursera.org/specializations/data-structures-algorithms
			]
							
			MachineLearning[
			 
				 Введение в нейронные сети и глубокое обучение[
				В первом модуле участники познакомятся с нейронными сетями и задачами которые можно решить с их помощью, а так же воспользуются фреймворком pyTorch для создания первой нейронной модели.
				Искусственный интеллект и другие задачи которые можно решать с помощью нейронных сетей
				Участники узнают что такое искусственные нейроны для того, чтобы понимать из чего состоят искусственные нейронные сети
				Смогут определять какие задачи можно решить с помощью нейронных сетей для того, чтобы формализовать абстрактные задачи от заказчика
				Научатся пользоваться и искать необходимые функции в библиотеке pyTorch для того чтобы иметь возможность реализовывать нейронные сети.
				Домашние задания: 1
				ДЗ
				Введение в PyTorch. 1. Используя скрипт salt.py посчитать хэш от своего имени. Суть задания подтвердить запуск докера.
				2. Сделать свой transform, переводящий данные в распределение N(0, 1) и выложить код в Slack. Проверить код 3х коллег и отписаться в ветку к выложенному коду.
				Теоретические основы обучения нейронных сетей
				Участники вспомнят(узнают) необходимую теорию для того чтобы успешно пройти данный курс
				Узнают как реализовать свою первую модель машинного обучения для того чтобы уметь решать задачу классификации
				Домашние задания: 1
				ДЗ
				Логистическая регрессия на pyTorch. В файле log_reg.ipynb изменить код таким образом, чтобы решить ту же самую задачу, а именно обучить логистическую регрессию, на двумерных данных
				Погружение в pyTorch
				Участники узнают о том как происходит обучение нейронных сетей в pyTorch для того чтобы реализовывать глубокие нейронные сети
				Познакомятся с фреймворком pyTorch для того чтобы искать необходимые классы и методы
				4 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Классификация рукописных цифр 1. 1. Дополнить код однослойной полносвязной сети для классификации рукописных цифр
				2. Изменить архитектуру классификатора добавив дополнительные слои
				Переобучение и регуляризация нейронных сетей
				Участники узнают что такое переобучение и как с ним бороться для повышения эффективности своих моделей
				7 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Переобучение 1. Добиться от классифкатора рукописных цифр переобучения за счет изменения архитектуры и гиперпараметров.
				Взрыв и затухание градиентов
				Участники научатся бороться с проблемой взрыва/затухания градиентов для того чтобы обучать глубокие нейронные сети
				11 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Нормировка 1. Реализовать инициализацию весов сети классификатора методами Хе/Ксавьера и сравнить эффективность с инициализацией по-умолчанию

				]

				 Основные архитектуры и методы обучения нейронных сетей.[
				Участники поработают с базовыми архитектурами нейронных сетей, и научатся решать типичные задачи анализа данных.
				Основные архитектуры нейронных сетей: Автокодировщики
				Участники узнают какие задачи можно решать с помощью автокодировщиков и смогут их создавать для решения этих задач
				14 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Автокодировщик. Дополнить код автокодировщика
				Основные архитектуры нейронных сетей: Сверточные сети
				Участники смогут создавать сверточные нейронные сети для решения задач компьютерного зрения
				Применять операцию обратную свертке для реализации сверточных автокодировщиков
				18 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Сверточный классификатор. 1. Реализовать многослойный сверточный классификатор рукописных цифр
				2. Оптимизировать гиперпараметры модели
				Основные архитектуры нейронных сетей: Рекуррентные сети
				Участники смогут создавать рекуррентные сети для решения задач обработки последовательностей и естественных языков
				21 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Создаем Википедию. Дополнить код модели посимвольной генерации
				Адаптивные методы градиентного спуска
				Участники научатся применять продвинутые методы градиентного спуска для ускорения обучения нейронных сетей
				25 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Адаптивные методы градиентного спуска. Сравнить SGD, RMSProp и ADAM для задачи классификации изображений одежды.
				Нарисовать графики ошибки для 3 методов на тренировочном и тестовом множестве с дисперсией для разных запусков.
				Ошибки в реализации нейронных сетей
				Участники научатся применять методы идентификации ошибок в реализации нейронных сетей для успешного применение нейросетей.
				28 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Переобучение 2. Добиться переобучения сверточной сети для задачи классификации изображений одежды с учетом новых методов обучения

				]

				 Современные архитектуры нейронных сетей[
				В этом модуле мы разберем и реализуем ключевые архитектуры нейронных сетей для решения типичных задач компьютерного зрения, обработки естественных языков, анализа графов и т.д. А так же подробно рассмотрим общие концепции используемые при проектировании и обучении современных архитектур.
				Обзор: Inception и ResNet
				Участники gознакомятся с одной из самых популярных глубоких архитектур компьюетрного зрения и узнают за счет чего можно обучать очень глубокие нейронный сети
				1 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Блоки из нейросетей. Реализовать блоки аналогичные Inception и skip-connections для задачи классификации изображений или текстов
				Глубокие рекуррентные сети
				Участники расширят свои знания в области рекуррентных нейронных сетей и научатся применять общие концепции используемые в глубоких нейронных сетях для повышения эффектиности моделей
				4 августа, 10:00 — 11:30
				Metric-learning и обучение без примеров
				Участники познакомятся с идеей выучивания метрик для решения задач ранжирования и поиска, а так же узнают как использовать данный подход в условиях недостаточной обучающей выборки
				8 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Сиамские сети. Реализовать модель DSSM для поиска цифр с google street view по запросам в виде рукописных цифр
				Обзор: внимание, множества и сегментация
				Участники научатся работать с множествами при обучении нейронных сетей, узнают об общей концепции внимания и смогут решать задачу сегментации.
				11 августа, 10:00 — 11:30
				Нейронные сети для работы с графами
				Участники научатся использовать графовые типы данных для решения задач анализа на графах
				15 августа, 20:00 — 21:30


				]

				 Состязательные нейронные сети[
				В завершении курса мы разберем один из найболее мощных современных фреймворков обучения нейронных сетей и примеры его использования.
				Введение в теорию информации
				Участники познакомятся с базовыми элементами теории информации для успешного прохождения этого модуля и улучшения понимания современных архитектур нейронных сетей
				18 августа, 10:00 — 11:30
				Генеративные Состязательные Сети
				Участники познакомятся с фреймворком состязательных сетей на примере задачи порождения примеров аналогичных тренировочному множеству.
				22 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				GANs. Реализовать модель генерации рукописных цифр
				Состязательный Автокодировщик и условная генерация
				Участники познакомятся с новыми техниками применения состязательного фреймворка для повышения эффективности решения задач порождения данных
				25 августа, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Условная генерация. Реализовать генерацию рукописных цифр заданного класса
				Domain Adaptation
				Участники познакомятся с мощным подходом решения одинаковых задач на разных датасетах, для повышения точности решения в случае недостаточности данных
				29 августа, 10:00 — 11:30
				Домашние задания: 1
				Обзор: Fader Network и CAAE
				Участники познакомятся с наиболее актуальными состязательными моделями и техниками
				1 сентября, 10:00 — 11:30

				]

			]
			
			//artificial intelligence, machine learning, deep learning, neural networks
			AI ML DL NN
			[

				artificial intelligence vs machibe learning vs deep learning
				https://skymind.ai/wiki/neural-network

				edx
				//harvard machine learning
				https://www.edx.org/course/data-science-and-machine-learning-capstone-project
				//Python Data Science
				https://www.edx.org/professional-certificate/python-data-science
				//data science
				https://www.edx.org/professional-certificate/harvardx-data-science

				corsera
				https://courses.edx.org/courses/course-v1:HarvardX+PH125.8x+2T2018/courseware/b8c4fdd4e2324e65a7c9660caa5c8193/4b71b896b7dc48ab8a8a60e4f732b7c0/?child=first
				//neural networks
				https://www.coursera.org/learn/neural-networks-deep-learning?action=enroll

				//brilliant neural networks
				https://brilliant.org/practice/learning-problems-for-neural-networks/?p=2

			]
			
			http://rubyquiz.com/
			http://www.4clojure.com/
			https://www.topcoder.com/ 
			http://leetcode.com/
			https://www.hackerrank.com/
			https://projecteuler.net/
			https://www.codewars.com/
			http://codekata.com/
			https://code.google.com/codejam/
			
			https://www.hackerrank.com/interview/interview-preparation-kit/warmup/challenges
			https://leetcode.com/problemset/all/
			
			KATAs[
				http://osherove.com/tdd-kata-1/
				https://github.com/garora/TDD-Katas/blob/develop/Src/cs/FizzBuzzKata/TestFizzBuzz.cs
				https://www.codeproject.com/Articles/886492/Learning-Test-Driven-Development-with-TDD-Katas
				https://www.kaggle.com/
				https://www.codewars.com/
				http://codingdojo.org/kata/
				http://codekata.com/
				https://www.hackerrank.com/interview/interview-preparation-kit/warmup/challenges
				https://leetcode.com/problemset/all/

				//from novice-to intermediate
				https://www.coderbyte.com/
				https://www.codewars.com/
				https://codesignal.com/
				https://www.codingame.com/start
				https://www.topcoder.com/challenges/
				https://www.hackerrank.com/
				https://leetcode.com
				https://www.codechef.com/
				https://www.geeksforgeeks.org/
				http://codeforces.com/
				
			]
		
		]

		sources[
		
			/stack compare
			https://stackshare.io/
			//vanture cmps list
			https://www.crunchbase.com
			
			//IBM Patterns
			https://developer.ibm.com/code/patterns/
			
			//SMTP
			https://stackoverflow.com/questions/11457722/creating-an-smtp-server-c-sharp
			
			//Interceptor pattern
			https://www.codeproject.com/Articles/1223461/AOP-Method-and-property-interception-in-Csharp
			
			//DI Automapper with autofac
			https://www.paraesthesia.com/archive/2014/03/25/automapper-autofac-web-api-and-per-request-dependency-lifetime-scopes.aspx/
			https://lostechies.com/jimmybogard/2009/05/12/automapper-and-ioc/					
			
			//MSA template
			https://github.com/begriffs/microservice-template
		]

		Examples[
			
			//dashbord web sockets
			https://knowledge.safe.com/articles/1112/live-spatial-dashboard.html
			//HTML5 plupload
			http://www.plupload.com/
			//web api
			https://www.sitepoint.com/10-html5-apis-worth-looking/			
			//10 rich text editors
			https://www.sitepoint.com/10-best-html-wysiwyg-plugins/
			//10 modules
			http://www.discoversdk.com/blog/10-angular-2-modules-and-tools-you-need-to-learn-in-2017
			//3d 
			https://www.3ds.com/ru/
		]				
				
		Code_Configs_Commands[
			
			MagicStrings[
				//jpg 
				FFD8FFD
			]
		
			SharkingFiddleringSoaping[
			
				SOAPUI[
					property_transfer[
			
			
	response xpath
	//*:AddCategoryResponse/*:AddCategoryResult/*:Result
	for 
	[

	<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
	   <s:Body>
		  <AddCategoryResponse xmlns="http://tempuri.org/">
			 <AddCategoryResult xmlns:a="http://schemas.datacontract.org/2004/07/IF.MoscowVideo.WebService.Core.ResultModels" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
				<a:ErrorMessage i:nil="true"/>
				<a:Result>6f4efb43-24a2-4a76-9396-b9b7bbc43b94</a:Result>
				<a:Success>true</a:Success>
			 </AddCategoryResult>
		  </AddCategoryResponse>
	   </s:Body>
	</s:Envelope>
	]

	request xpath
	//*:AddCategory/*:data/*:ParentId

	for [
	<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/" xmlns:if="http://schemas.datacontract.org/2004/07/IF.MoscowVideo.WebService.ApiServices.Utilities.DataModels" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
	   <soapenv:Header/>
	   <soapenv:Body>
		  <tem:AddCategory>
			 <!--Optional:-->
			 <tem:userId>4702DE72-04F2-454F-8176-2D0380305CFB</tem:userId>
			 <!--Optional:-->
			 <tem:data>
				<!--Optional:-->
				<if:Description>Desc</if:Description>
				<!--Optional:-->
				<if:Name>Name21</if:Name>
				<!--Optional:-->
					  <if:ParentId>6f4efb43-24a2-4a76-9396-b9b7bbc43b94</if:ParentId>
				<!--Optional:-->
				<if:ServiceTypeIds>
				   <!--Zero or more repetitions:-->
				   <arr:int>97</arr:int>
				   <arr:int>126</arr:int>
				<arr:int>123</arr:int>

				</if:ServiceTypeIds>
			 </tem:data>
		  </tem:AddCategory>
	   </soapenv:Body>
	</soapenv:Envelope>
	]
			
					]		
				]
								
				wireShark[
					//ui
					ip.addr==10.200.232.87
				]
		
			]
			
			WCF[
		
				LargeFilesUpload[
					 <!--Bindding for large files upload. Valid for MTOM-->
					<binding maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text">
					  <readerQuotas maxDepth="2000000" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
					</binding>
				]
		
			]
			
			MSsql[
				//table export
				https://stackoverflow.com/questions/20542819/how-to-export-all-data-from-table-to-an-insertable-sql-format
			]
			
			Nuget[
			
				vs_nuget_console[		
				
					nunitInstall[
					
						install-package NUnit.Runners -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.ConsoleRunner -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.Console -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.NUnit3TestAdapter -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.NUnitProjectLoader -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.NUnitTestAdapter -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.NUnit.Extension.NUnitV2Driver -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.Extension.NUnitV2ResultWriter -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
						install-package NUnit.Runners.Net4 -ProjectName HP.ArchiveBalancingService.Integration.MappingTest
					
					]
					
				]
				
				Build_nuget_package_cli[
		
//NUGET CLI
nuget list ArchiveBalancingService -Source http://10.178.3.70:99/nuget
nuget install HP.ArchiveBalancingService.DataContracts -SolutionDirectory C:\111\contracts -version 1.0.175

//pack package 
nuget pack C:\P\AR\HP.ArchiveService.DataContracts\HP.ArchiveBalancingService.DataContracts.csproj -OutputDirectory C:\111\contracts -version 1.0.175 -Properties Description=Release
C:\Users\i_neprintsev>nuget push C:\111\contracts\packages\HP.ArchiveBalancingService.DataContracts.1.0.175.nupkg -Source http://10.178.3.70:99

nuget setapikey P@ssw@rd -Source http://10.178.3.70:99/nuget

//CommandShell nuget
find-Package -Provider "http://10.178.3.70:99/nuget" -name "HP.ArchiveBalancingService.DataContracts" -RequiredVersion "1.0.136" 
install-Package -name "HP.ArchiveBalancingService.DataContracts" -RequiredVersion "1.0.174" -Scope CurrentUser
		
				]
		
			]
			
			net_core_dotnetnupackets
			[
				//EF
				dotnet add package Microsoft.EntityFrameworkCore --version 2.1.4 
				dotnet add package Microsoft.AspNetCore.Mvc.Core --version 2.1.3
				dotnet add package Microsoft.EntityFrameworkCore.SqlServer --version 2.1.4 
				
				//Configuration and json 
				dotnet add package Microsoft.Extensions.Configuration.FileExtensions --version 2.1.1 
				dotnet add package Microsoft.Extensions.Configuration.Json --version 2.1.1 
				
				dotnet restore
				
				https://docs.microsoft.com/ru-ru/ef/core/managing-schemas/migrations/
				dotnet ef migrations add initial
			]
			
			vs[
				//debugging source code
				https://blogs.msdn.microsoft.com/mcsuksoldev/2010/09/09/debugging-the-net-framework-source-code/
								
				repair[
					//Error: Evaluating the function 'function' timed out and needed to be aborted in an unsafe way
					https://docs.microsoft.com/en-us/visualstudio/debugger/error-evaluating-the-function-function-timed-out-and-needed-to-be-aborted-in-an-unsafe-way?view=vs-2017
					https://developercommunity.visualstudio.com/content/problem/15931/evaluating-the-function-systemreflectionassemblylo.html
					https://forums.autodesk.com/t5/revit-api-forum/use-managed-compatibility-mode-or-enable-native-code-debugging/td-p/6868592
					https://stackoverflow.com/questions/28551818/visual-studio-2013-debug-options-missing-under-configuration-options
				]
			
			]
			
			powershell[
				get-executionpolicy
				get-help set-executionpolicy
				set-executionpolicy remotesigned
			]
		
			EF[
			
				MIGRATE[
					enable-migrations				
					add-migration -ProjectName HP.CityMonitoring.IntegrationalTest -ConfigurationTypeName HP.CityMonitoring.IntegrationalTest IntegrationTestContextConfig
					Update-Database -ProjectName HP.ArchiveBalancingService.DAL -ConfigurationTypeName HP.ArchiveBalancingService.DAL.Migrations.Configuration -script
					
					//Update PSTGRE
					Update-Database -ConnectionStringName "Migrations_PSQL_2" -ConfigurationTypeName HP.ArchiveBalancingService.DAL.Migrations.Configuration -TargetMigration 201810180953103_SubtitlesAdd
				]
				
			]
			
			razor[
				attribute="@()"
			]
							
			vs_issues[
				
				https://stackoverflow.com/questions/20358747/transformxml-task-could-not-be-loaded-from-microsoft-web-publishing-tasks-dll
				http_dll_not_found[
					VisualStudioINstaller -> VS install Web net 4.7
					csproj -> UsingTask TaskName="TransformXml" -> \12\Web\ -> cahnge to -> v$(VisualStudioVersion)\Web\
				]
				CannotEvaluateTypes[
					WHAT:
						cannot evalueate expression in debug mode
					WHEN: 
						debuging unit tests in multi projext solution
					HOW:
						check to on
						Tools->Options->Debugging->General->Use Managed Compatibility Mode
				]
				
			]
			
			DI_Init[
			
				var builder = new ContainerBuilder();
				builder.RegisterModule(new CoreModule());
				builder.RegisterModule(new InstanceModule());
				builder.RegisterModule(new AutomapperModule());
			
			]	
			
			//react,webpack,babel
			cmd[	
				npm install --save react
				npm install --save redux
				npm install --save react-redux
				npm install --save react-dom

				npm install --save-dev webpack

				npm install --save-dev @babel/preset-react
				npm install --save-dev @babel/preset-env 

				npm install --save-dev @babel/plugin-proposal-class-properties		
				npm install --save @babel/polyfill
				npm install --save-dev @babel/core @babel/cli @babel/preset-env
				//>>> babel 7 is crusial
				npm i babel-loader@7 -D
				
				npm install -D babel-loader @babel/core @babel/preset-env webpack
				npm install -D @babel/core @babel/preset-env webpack
				
				npm audit fix
				
				//hot load
				npm install --save-dev html-webpack-plugin
				npm install webpack-dev-server --save-dev			
				npm install --save-dev clean-webpack-plugin
				npm install --save-dev react-hot-loader
				npx webpack-dev-server --hotOnly
				
				//hot rebuild
				npx webpack --watch
				
				//show references
				npx npm-why babel/core 
			]
			
		]

		//Decompose to Products,Companies,Tools
		CompaniesOrgsProductsAndTools[
			
			
			RussianIT[

				https://ntechlab.ru/
				https://www.roadarlabs.com/
				https://rite.ru/
		
			]
			
			//mremoteNc manual
			https://github.com/mRemoteNG/mRemoteNG/wiki/User-Manual
			//db viewver
			https://www.heidisql.com/
			
			//Hashimi MSA deploy SaaS
			https://www.hashicorp.com/
			
			//Business examples
			https://cssgradient.io/blog/css-gradient-examples/
		
			//learning API
			https://www.scaleapi.com/self-driving-cars
			
			//NodeCoppter
			http://www.nodecopter.com/				
			
			//roadmap institute
			https://www.roadmapinstitute.org/
			
			//NordicSemiconductors
			https://www.nordicsemi.com/eng
			
			http://www.appliedrobotics.com/
			https://www.sita.aero/innovation			
						
			//mremoteNc manual
			https://github.com/mRemoteNG/mRemoteNG/wiki/User-Manual
			//db viewver
			https://www.heidisql.com/
			
			
			
			stylecop
			https://blog.submain.com/stylecop-detailed-guide/
		
			WorldIT[
				https://www.thoughtworks.com/
				
				//clojure creator project
				https://cognitect.com/
			]
	
			static_analysis[
				stylecop
				https://blog.submain.com/stylecop-detailed-guide/
				//codacy
				https://app.codacy.com
			]
			
			code_quality[
				//sonarqube
				https://www.sonarqube.org/
			]
			
			docsoft[
				//doxygen
				http://www.stack.nl/~dimitri/doxygen/download.html
				//list of tools 10
				http://blog.liveedu.tv/code-documentation-tools/
				//list of tools 18
				https://www.process.st/software-documentation/
				
				https://swagger.io/
						
			]
			
			simsoftware[
				https://www.solidworks.com/products-and-solutions
				https://www.solidworks.com/category/electrical-design
				
				https://www.ansys.com/products
				http://www.mscsoftware.com/products
				http://simulation-solutions.com/index.html
				https://www.cm-labs.com/simulation-products/				
			]
			
			CADs[
				https://www.polyga.com/
			]
			
			CI_CD[
				https://circleci.com/product/
				//automation
				https://www.ansible.com/
			]
			
			clouds[
				https://www.noction.com/
			]
			
			msa_containers[
				//container orchestration framework
				https://kubernetes.io/
				//alernate 
				Kubernetes,Mesos,Docker Swarm,Nomad,Mesosphere DC/OS
				
				
			]
			serviceBus[
				https://buoyant.io
				//sidecar
				https://linkerd.io/
			]
			service_mesh[
				https://istio.io/
			]
			event_store[
				https://eventstore.org/
			]
			
			.NET_libs[			
				//topshelf
				https://topshelf.readthedocs.io/en/latest/#
				//emitmapper
				https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=2ahUKEwjfypWdjZreAhWniKYKHTDBDnAQFjABegQICBAB&url=https%3A%2F%2Farchive.codeplex.com%2F%3Fp%3Demitmapper&usg=AOvVaw0_lHfeypLG9ciEL5wA0PCz				
				https://github.com/MetSystem/EmitMapper
				//quartz				
				https://jayvilalta.com/blog/2014/06/04/understanding-the-disallowconcurrentexecution-job-attribute/
			]
						
			
			Prototyping[
			
				Moqups[
					//list of tools 
					https://www.creativebloq.com/web-design/top-10-prototyping-tools-2016-21619216
					http://uxmag.com/articles/comparing-popular-layer-based-and-code-based-prototyping-tools
					
					https://support.moqups.com/hc/en-us/sections/115000810925-Interactions
					https://pidoco.com/en/lp/clickable-mockups
					https://www.invisionapp.com/
					https://www.axure.com/support/training/core/4-interactive-prototyping
					https://webflow.com/cms
					
				]
				
			]
			
			Code_transpillers[

				//universal transpiler
				https://github.com/jarble/transpiler

				//code worker
				http://codeworker.free.fr/

				//jtransc
				https://github.com/jtransc/jtransc

			]

			parserGeberators[
				//ANTLR
				https://en.wikipedia.org/wiki/ANTLR
			]
			
			code_generators[
				https://tomassetti.me/code-generation/
				https://github.com/jaxio
			]
			
			site_generators[
				//website gen
				https://www.sitepoint.com/static-site-generators/
			]
			
			APIgenerators[
				//Generates GraphQL client for database
				https://www.prisma.io
			]
		
		]
		
		comunities[
			
			openSource[
				https://up-for-grabs.net/#/
				https://openhatch.org/
			]
			
			//blind
			companies insides
			https://www.teamblind.com/articles/Topics/?utm_source=adroll&utm_medium=display&utm_campaign=retargeting#signup

		]

		read[
			
			//illinois institute of technilogy desertations
			https://www.ideals.illinois.edu/handle/2142/10755

			Literature[
				
				//books share
				https://www.twirpx.com/search/
				bikesell_2@mail.ru
				q2w3e4


				Books[

					CLRviaCShrp
					[
					
						chapter_1
						[
							
							CLR -> manged module for 32x or 64x PE32, PE32+
							C# -> compiler -> managed module
							Basic -> basic compiler -> -=-
							IL source -> IL assembler -> -=-
							
							IL - JIT compiler -> CPU instr
							
							Managed module IL + metadata(GC collected datatypes) 
								(Data execution prevention DEP, Address space layput randomization ASLR)
							[
								PE32, PE32+ header -> windows header simmilar to COFF format , indicates file type 
								GUI, CUI, DLL
								
								CLR header -> header, flags, methodDef, entry point (Main )
								
								metadata -> tables of types and methods deined, table with types and members refrenced
								(
									o- always embeded in exe
									o- removes need in c/c++ header files
									o- intelisense, typechecking, GC
								)
								
								
								IL code -> code compiled from source. CLR at runtime copmiles IL to CPU instr
							]
							
							clr works with assembly [
								manifest - assembly metadata table containing files representing the assembly
								public export types implemented by asm files
								resource or data files associated with the asm
							]
							
							IL - heigher level language then most CPU machine
							all CLR facilivies available
								o- access and manipulate obj type
								o- create and init objs
								o- call virt methods on objects
								o- manipulate arr directly
								o- err handling
								
							p. 16
							EXECUTION - 
								before main executes CLR allocates internal datastructure to managed ref types access
								internal structure for each method with its implementation address
								on initialization sets each entry to undocummented function incide CLR => JITcompiler
								
								Main - first call to first method-> JITcompiler function call
								
								JITcompiler -> compiles native IL code to native CPU instr
									(knows method and type on call)
								-> searchs asm metadata for clled method IL
								-> native CPU instr saved to dynamic mem block
								-> goes back to CLR internal datastruc and replaces reference to method with addr of compile mem block
								-> jumps to mem block of compiled
							
							p. 18
							DEBUG MODE		
								-> generates nop IL instr, for breakpoints placement
									//optimize[+/-] /debug[+/-] 
							compiler switch:
								default -> /optimize- /debug- -> ILcode(unopt) JIT native( opt)
								-> /optimize- /debug(+/full/pdbonly) -> ILcode(unopt) JIT native( unopt)
								-> /optimize+ /debug(-/+/full/pdbonly) -> ILcode(opt) JIT native( opt)
							
							p. 19-20
							.PDB (Programm database) - helps debug find local vars and map IL instr to source.
							
							System.Runtime.ProfileOptimization -> causes CLR to record methods optimized by JIT
								on multiple CPU would compiles concurrently
							
							IL -> 
								o- stackbased, no registers, easy to target CLR
								o- typeless
								o- verification while CLR compiles IL to CPU source 
									varification(
										o- parameter number & type check
										o- return val usage				
									)
							
							p. 21
							Virtual address space VAS ->
							
							CLR -> offers ability to execute several AppDomains in single OS process
							
							unsafe code -> 
								/unsafe -> can work on memory directly
								o- JIT compiler checks assembly befor compile unsafe on 
									System.Security.Permissions.SecurityPermission 
									and 
									System.Security.Permissions.SecurityPermissionFlag’s SkipVerification 
								
								throws -> 
									System.InvalidProgramException or a System.Security.VerificationException
							p. 23-24
								NGen.exe -> 
									o- usefull for start optimizing 
									o- asm loaded into multiple processes
									o- %SystemRoot%\Assembly genned asembly with native code location
							
								CLR searchs for precompiled native file and uses it, JIT compiles code only on absence
								
									x- no intellectual prop prot 
									x- rassinhronization of (CLR ver, CPU type, Win ver, asm ID)
									x- not creates optimiations and can perform slower/
								
								MPGO.exe - startup time optimization
							
							p. 25-26
								Framework class library FCL -> DLL asm with type def and some funcionality
									empl. System type with Object
								
								most_usefull[
									System - basic types
									System.Data - comunicating with database and processing
									System.IO 
									System.Net - low-level networ communication, protocols
									System.RuntimeInteropServices - unmanaged code, COM, win32 functions or DLLs
									System.Security - protecting data and resources
									System.Text - 
									System.Threading - asynchronous operations
								]
							
							p. 27-29
								Common Type System CTS -> 
									Types:
										Field, Method, Property (validation, readonly), Event
									
									Visibility rules:
										Private
										Famility/protected (derived types)
										Family and assembly(derived if def in asm, not in C# but in IL)
										Assembly(Internal)
										Family or assembly(protected internal) derieved exist in asm
										Public				
									CTS defines inheritance rules, virtual methods, obj lifetime.
									Type can dereive from once base class
									
									Sustem.Object 
										o- compare intances for equality
										o- get hash
										o- shalow (bitwise) copy
										o- get string representation
										
								ECMA-334,335
									Common Language Specification CLS ->
										o- defines rules for languages
										o- language types accessible from other languages, to be CLS compliant
										
										check for cpmliance with CLS ->
											[assembly:CLSCompliant(true)]
									
										Cross-Language Interoperability ->
											https://docs.microsoft.com/en-us/previous-versions/730f1wy3(v=vs.100)
										
										o- defines everything as field(data) or method(behaviour)
											all language concepts compiler translates into fields and methods
											(enum, oper overload, conversion oper, index, 
											delegates, events, construct, finilizers) from source code
										
								p.34
									Interoperability with unmanaged code ->
										o- call unmanaged code in DLL 
											CreateSemaphore kernel32.dll
										
										o- access COM components
											TlbImp.exe  converts COM lib types to CLR asm
										
										o- unmanaged code can use managed type (server)
										
										(WinRT) from win8 seamles comunication with NET due to ECMA spec
							
						]
						
						chapter_2
						{assembly build, deploy}
						[
							p. 38
							DLL hell - new versions of programms ovewrite older versions
							complicated installation/uninstallation - files copied, registry updated
										
							System.Console. System.Console, IL in MSCorLib.dll
							
							Compiling console app with writeline with source.cs csc.exe ->
								passing reference to MSCorLib.dll			
								@MyProject.rsp - response file with command keys list
									o- multiple support
									o- local overrides global
							
							p. 42 - 43
								.exe ->
								contains metadata, CLR header, IL. 					
								
								CLR header :
									o- maj min ver numbers, flags
									o- mehodDef token informs if CUI,GUI or win store exe
									o- size and offsets of metadata tables
									o- IMAGE_COR20_HEADER on CorHdr.h format of CLR header
									
								METADATA: 
									several defenition tables, reference, manifest tables
										
									defenitionTables:[
										
									ModuleDef:
										entry defining module,
										includes module's file, extension, module ver GUID,
										helps CLR locate file at runtime
									TypeDef:
										entry for each type in module.
										Typename, base tpye, access modifiers
										indexes to MethodDef, FieldDef, PropertyDef, EventDef
									MethodDef:
										entry for every method in modeule. 
										method name, access modif, 
										signature offset within module to it's IL code
										referents to ParamDef
									FieldDef:
										entry for fields, acces modif, names
									ParamDef: 
										entry for each parameter. flags (in,out, retval), type, name
									PropertyDef:
										properties, flags, type, name
									EventDef:
										event, flags,name
										
									]
									
									referenceTables[
										AssemblyRef:
											entry for each asm , name, version, culture, publick key token, hash.
											CLR ignores hash
										ModuleRef:
											entry for PE module, name, extension, binds to types impl in modules in calling asm
										TypeDef:
											type name and ref.
												ANOTHER TYPE -> TypeDef; 
												ANOTHER MODULE -> ModuleRef; 
												SAME MODULE -> ModuleDef
											If type impl within ANOTHER TYPE, reference indicates 
												TypeDef entryid 
											If impl in ANOTHER MODULE ref indicates 
												ModuleRef entry
											If impl in the SAME MODULE ref indicate 
												ModuleDef entry
										MemberRef:
											one entry for each field, prop, method, event referenced by module
											name, signature, points to TypeRef
									]
						
							p. 44 - 48
								ILDASM:
								ctrl-m on exe -> metainfo 
									metadata, statistics
							
							p. 48
								Combine modules to form asm 
						]
						
					]

				]
					
				
				dodopizzaLit[

					Основы программирования:
					SOLID:
					Роберт С. Мартин, Мика Мартин "Принципы, паттерны и методики гибкой разработки на языке C#"
					Паттерны:
					Сергей Тепляков "Паттерны проектирования на платформе .NET"
					Основные структуры данных, их плюсы и минусы + Алгоритмическая сложность:
					Тюкачев, Хлебостроев: "C#. Алгоритмы и структуры данных"
					Адитья Бхаргава "Грокаем алгоритмы"

					Базы данных:
					Мартин Грубер "Понимание SQL"
					Мартин Клеппман "Высоконагруженные приложения"
					http://www.sql-ex.ru/?Lang=0


					Бэкенд:
					CQRS and Event Sourcing: Dominic Betts, Julián Domínguez, Grigori Melnik, 
					Fernando Simonazzi, Mani Subramanian "Exploring CQRS and Event Sourcing" (http://download.microsoft.com/download/e/a/8/ea8c6e1f-01d8-43ba-992b-35cfcaa4fae3/cqrs_journey_guide.pdf)
					Уязвимости и защита: Майкл Ховард, Дэвид Лебланк "Защищенный код"

					Тестирование:
						The art of unit testing
						Working effectively with unit tests
						xUnit test patterns
					Фронтенд:
						Современный учебник Javascript
						Getting Started – React

				]


					//https://ungrid.unal.edu.co:8888/img/Microservices_Designing_Deploying.pdf
					
					//c++
					https://www.micc.unifi.it/bertini/download/programmazione/TICPP-2nd-ed-Vol-two-printed.pdf
					https://www.micc.unifi.it/bertini/download/programmazione/TICPP-2nd-ed-Vol-one-printed.pdf
					
					//penetration testing
					https://repo.zenk-security.com/Others/The%20Hackers%20Handbook.pdf
					https://doc.lagout.org/security/The-Hacker-Playbook-Practical-Guide-To-Penetration-Testing-2014.pdf
					
					//Building Microservices				
					https://www.quora.com/What-are-the-best-sources-to-learn-on-microservices
					//sam newmann building microservices designing fine-grained systems pdf
					http://index-of.es/Varios/Sam%20Newman-Building%20Microservices-O%27Reilly%20Media%20(2015).pdf
					
					//enterprise architecture
					https://sparxsystems.com.au/resources/user-guides/guidebooks/enterprise-architecture.pdf
					
					//CLR via sharp
					http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
					//algorithms
					https://mcdtu.files.wordpress.com/2017/03/introduction-to-algorithms-3rd-edition-sep-2010.pdf
					//code complette
					https://khmerbamboo.files.wordpress.com/2014/09/code-complete-2nd-edition-v413hav.pdf
					//reverse engeneering .net apps
					http://epublications.uef.fi/pub/urn_nbn_fi_uef-20131001/urn_nbn_fi_uef-20131001.pdf
					
					//The Art of Unit Testing: with Examples in .NET
					https://www.amazon.com/dp/1933988274/?tag=stackoverfl08-20
					//pragmatic programmer
					https://pragprog.com/book/tpp/the-pragmatic-programmer
					//appreticeship patterns
					http://shop.oreilly.com/product/9780596518387.do
					//passionate programmer
					https://pragprog.com/book/cfcar2/the-passionate-programmer
					//reverse engeneering
					https://www.foo.be/cours/dess-20122013/b/Eldad_Eilam-Reversing__Secrets_of_Reverse_Engineering-Wiley(2005).pdf
					
					//But How Do It Know
					http://www.buthowdoitknow.com/
					//microarhitecture overall
					http://www.iro.umontreal.ca/~aboulham/F1214/Unit_2modif.pdf
					//A Minimal TTL Processor for Architecture Exploration
					http://www.bradrodriguez.com/papers/piscedu2.htm
					
					//Computer Structures:Readings and  Examples 
					http://gordonbell.azurewebsites.net/cgb%20files/computer%20structures%20readings%20and%20examples%201971.pdf
					//Bell-ComputerEngineering
					http://www.bitsavers.org/pdf/dec/_Books/Bell-ComputerEngineering.pdf
					//Digital Logic and Microprocessor Design With VHDL
					https://theswissbay.ch/pdf/Gentoomen%20Library/Digital%20Design/Digital%20Logic%20%26%20Microprocessor%20Design%20With%20VHDL%20-%20Hwang.pdf
					
					//processor design
					http://www.gamezero.com/team-0/articles/math_magic/micro/index.html
					//microarchitecture overall
					https://web.njit.edu/~rlopes/Mod4.3.pdf
					
					//Computer Architecture: A Quantitative Approach by John L. Hennessy (Author), David A. Patterson (Author) 
					https://doc.lagout.org/Computer%20Architechture.pdf
					//the architecture of computer hardware,systems software and networking irv englander
					http://disi.unal.edu.co/dacursci/sistemasycomputacion/docs/SWEBOK/The%20Architecture%20Of%20Computer%20Hardware,%20Systems%20Software,%20&%20Networking%20An%20Information%20Technology%20Approach%204Th%20Ed%20-%20I%20Englander%20(Wiley,%202009)%20Bbs.pdf
					//DRAFT 1997 Parallel Computer Architecture: A Hardware/Software Approach by David Culler (Author), Jaswinder Pal Singh (Author), Anoop Gupta Ph.D. (Author) 
					http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.101.4418&rep=rep1&type=pdf
					//microelectornic circuits 
					http://prof.usb.ve/mirodriguez/electronico/0495667722MicroelecCircuits.pdf
					//Computer Organization and Architecture (8th Edition) 8th Edition by William Stallings (Author)
					https://inspirit.net.in/books/academic/Computer%20Organisation%20and%20Architecture%208e%20by%20William%20Stallings.pdf							
					
					//the art of testing
					http://barbie.uta.edu/~mehra/Book1_The%20Art%20of%20Software%20Testing.pdf
					
								
					//angular book
					http://www.nglesson.com/Livres/ng-book2-angular-5-r67.pdf

					//react book
					file:///F:/backup/workflow/files/lit/fullstack-react/fullstack-react.pdf

					find[
											
						//physics
						https://www.amazon.com/Modern-Classical-Physics-Elasticity-Statistical/dp/0691159025
						
						//C# 
						the absolutely awesome book on c# and .net
						
						//net core 
						exploring .net core with microservices
						https://www.manning.com/books/exploring-dot-net-core
						
						//the art of scalability 
						http://theartofscalability.com/
						
						//Computer Organization and Design ARM Edition: The Hardware Software Interface (The Morgan Kaufmann Series in Computer Architecture and Design) 1st Edition by David A. Patterson (Author), John L. Hennessy (Author)
						https://www.amazon.com/Computer-Organization-Design-ARM-Architecture/dp/0128017333/ref=pd_bxgy_14_img_2?_encoding=UTF8&pd_rd_i=0128017333&pd_rd_r=5J0QAGC16AG0PRGTYQFA&pd_rd_w=5uEsO&pd_rd_wg=4inIc&psc=1&refRID=5J0QAGC16AG0PRGTYQFA

						//Modern Processor Design: Fundamentals of Superscalar Processors Paperback – July 30, 2013
						https://www.amazon.com/Modern-Processor-Design-Fundamentals-Superscalar/dp/1478607831/ref=pd_sim_14_2?_encoding=UTF8&pd_rd_i=1478607831&pd_rd_r=YA8D8S3J61RB7JZM3KPK&pd_rd_w=9I2xq&pd_rd_wg=nr7JU&psc=1&refRID=YA8D8S3J61RB7JZM3KPK
						
						//CPU architecture
						https://www.amazon.com/gp/product/0615303765									
						
						//VHDL
						https://www.amazon.com/Effective-Coding-VHDL-Principles-Practice/dp/0262034220
						
						//signal and systems
						https://www.amazon.com/Signals-Systems-2nd-Alan-Oppenheim/dp/0138147574/ref=pd_bxgy_14_img_2?_encoding=UTF8&pd_rd_i=0138147574&pd_rd_r=2F70B0ANAGS4PNHPJA2H&pd_rd_w=yYttJ&pd_rd_wg=hmW8t&psc=1&refRID=2F70B0ANAGS4PNHPJA2H
						
						
						//Microelectronics Circuit Analysis and Design 4th Edition by Donald A Neamen (Author)
						https://www.amazon.com/Microelectronics-Circuit-Analysis-Design-Donald/dp/0073380644
						//Reactive Applications with Akka.NET
						https://www.manning.com/books/reactive-applications-with-akka-net
						//Entity Framework Core in Action
						https://www.manning.com/books/entity-framework-core-in-action?gclid=EAIaIQobChMIhpSe4f3X4QIVQ4eyCh3U1g_AEAEYASABEgKibPD_BwE
						//Math for Programmers
						https://www.manning.com/books/math-for-programmers?gclid=EAIaIQobChMIhpSe4f3X4QIVQ4eyCh3U1g_AEAEYASACEgKK0PD_BwE
					]
				
				]
				
			guides[
				
				customBodyAttributes[
					https://weblog.west-wind.com/posts/2012/Aug/30/Using-JSONNET-for-dynamic-JSON-parsing
					https://www.dotnetcurry.com/aspnet-mvc/1368/aspnet-core-mvc-custom-model-binding
					https://blogs.msdn.microsoft.com/jmstall/2012/04/18/mvc-style-parameter-binding-for-webapi
					https://stackoverflow.com/questions/17645877/webapi-bind-from-both-uri-and-body
				]
		
				mongodbConcurency[
					Applications must ensure that only one thread at a time executes these operations in a client session.
					https://docs.mongodb.com/manual/core/causal-consistency-read-write-concerns/
					https://docs.mongodb.com/manual/faq/concurrency/
				]
		
				msa[

					https://www.nginx.com/blog/nginmesh-nginx-as-a-proxy-in-an-istio-service-mesh/
					https://www.nginx.com/blog/what-is-a-service-mesh/
					https://www.nginx.com/blog/introducing-the-nginx-microservices-reference-architecture/
					https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
					https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/characteristics-of-microservices.html
				]
				msa_patterns[
					decomposition[
						sidecar proxy //sideckick
						https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar
						//ambassador
						https://docs.microsoft.com/en-us/azure/architecture/patterns/ambassador
						//circuit breaker
						https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
						https://www.nginx.com/blog/microservices-reference-architecture-nginx-circuit-breaker-pattern/
					]
				]
		
				//EF
				//codefirst
				http://www.entityframeworktutorial.net/code-first/code-based-migration-in-code-first.aspx			
				https://medium.com/@hoagsie/youre-all-doing-entity-framework-wrong-ea0c40e20502		
				https://docs.microsoft.com/en-us/nuget/tools/package-manager-console
				https://coding.abel.nu/2012/03/ef-migrations-command-reference/			
				//postgre
				http://www.npgsql.org/ef6/
				
				//expression trees
				https://blog.marcgravell.com/2008/10/express-yourself.html
			
			
				//overall low level recommendation
				ftp://ftp.wayne.edu/ldp/en/IO-Port-Programming/IO-Port-Programming.html#toc3
				//Linux kernel hacker guide
				http://www.oldlinux.org/Linux.old/docs/khg/khg-0.6.pdf
				//c++ hack guide
				https://tfetimes.com/wp-content/uploads/2015/04/hack.pdf
				//linux kernel
				https://www.tldp.org/LDP/tlk/tlk.html
				
				ddd[					
					https://www.infoq.com/articles/ddd-in-practice
				]
				
				MSDN_articles[
				
					MSA[
						event sourcing 
						{
							https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing
							event timestamp, iteration number, version format, event stream length
						}
						
						//materialized view
						https://docs.microsoft.com/en-us/azure/architecture/patterns/materialized-view
						//Introduction to Microservices
						https://www.nginx.com/blog/introduction-to-microservices/
					]
					ddd[
						https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/ddd-oriented-microservice
						https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/microservice-domain-model
					]
				]
				
				NGINX_articles[
					MSA[
						//FourTierArchitecture 4tier
						https://www.nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/
						//adopt msa at netflix
						https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
					]
				]
			
			]
			
			IBM_articles[
				//msa infr
				https://www.ibm.com/blogs/bluemix/2018/05/architecting-applications-microservices-general-principles/
			]
			
			articles[
			
				//Nahalem arhitecture
				https://www.researchgate.net/publication/235960679_The_Architecture_of_the_Nehalem_Processor_and_Nehalem-EP_SMP_Platforms
			
				//architecture of opensource applications
				http://www.aosabook.org/en/index.html
				
				https://medium.com/@rhamedy/key-habits-and-things-i-wish-i-knew-earlier-as-a-developer-43c9466a0407
			]
			
					
			blogs[
			
				https://medium.com/reverdev/why-we-moved-from-angular-2-to-vue-js-and-why-we-didnt-choose-react-ef807d9f4163
				https://medium.com/javascript-scene/the-shocking-secret-about-static-types-514d39bf30a3
				https://blog.angularindepth.com/the-new-angular-httpclient-api-9e5c85fe3361
				https://toddmotto.com/classes-vs-interfaces-in-typescript
				https://codecraft.tv/courses/angular/http/http-with-observables/
				https://medium.com/meduza-how-it-works/%D1%85%D0%BE%D1%87%D1%83-%D1%81%D0%B2%D0%BE%D0%B9-vpn-%D0%B7%D0%B0-5-%D0%BC%D0%B8%D0%BD%D1%83%D1%82-%D1%87%D1%82%D0%BE-%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C-5581e536650a
				https://medium.com/meduza-how-it-works/ddos-ab63424e595e
				https://hackernoon.com/
				https://www.ryanatkinson.io/
				https://rob.conery.io/
				https://lostechies.com/		
				//earlyCareer
				https://8thlight.com/blog/colin-jones/2017/10/24/advice-for-early-career-developers.html
				//martin fowler
				https://martinfowler.com/
				
				//twitter
				//Rich Hickey
				https://twitter.com/richhickey
				//Eric Normand
				https://twitter.com/ericnormand
				
				//cognitect labs
				https://twitter.com/gigasquid
				
				//robotics
				https://twitter.com/hashtag/robotics?src=hash
				
				//mxnet
				https://twitter.com/hashtag/MXNet?src=hash
				
			]						   
			
			journals[
				
				//IT
				https://www.theregister.co.uk/
				https://www.nextplatform.com/
				https://www.anandtech.com/
				https://dzone.com/
				http://www.aosabook.org/en/index.html
				
				//FIN
				https://www.marketwatch.com/
				
				//manga
				https://mangalib.me/shingeki-no-kyojin
			]
						
		]


		craft[
			
			woodworks[
				
				workshops[
				
					http://ooley.ru/map/delaivesch/
				
					https://delaivesch.ru/
									
					http://www.kalpa-vriksa.ru/workshop/coworking/
					http://rubankov.ru/workshop/coworking-msk/
					https://kedrosadmaster.ru/stolarniy_coworking
					https://remesla.vdnh.ru/residents/stolyarnaya-masterskaya-sm-47/
				]
				
				materials[
					https://moscow.petrovich.ru/search/e9e4a8b3-e397-11e6-95f7-00259036a192?q=%D0%B4%D0%BE%D1%81%D0%BA%D0%B0&razmer_poperechnogo_secheniya=40h95
				
					https://www.isolux.ru/brus-obreznoy-6000x100kh100-mm.html?description
					https://www.isolux.ru/stroymateriali/pilomateriali.html
				]
				
				equipment[
					rent[
						торцовочная пила
						http://instrumentov-arenda.ru/torcovochnaya-pila-makita-ls-1040
						фрезер
						http://instrumentov-arenda.ru/prokat_frezera
						
						фрезер
						http://www.mosprokat.com/product/kromochnyy-frezer-MAKITA-RT0700CX2/
						
						пила 
						http://prokat.msk.ru/arenda-oborudovaniya/torcovochnye-pily/torcovochnaya-pila-makita-ls-1440-/
						
					]
				]
											
				books[
					
					//find 
					The Essential Woodworker By Robert Wearing
					https://lostartpress.com/collections/books/products/the-essential-woodworker
					
					The Anarchist's Tool Chest By Christopher Schwarz		
					https://lostartpress.com/collections/books/products/the-anarchists-tool-chest
					
					https://www.popularwoodworking.com/wp-content/uploads/2011/02/ICDTBookHiResJune10.pdf				
					http://wood.woodtools.nov.ru/books/jjn_big_book_weekend/jjn_big_book_weekend.pdf
					http://wood.woodtools.nov.ru/books/6500_wood_proj/6500_wood_proj.pdf
					https://www.popularwoodworking.com/wp-content/uploads/2011/02/ICDTBookHiResJune10.pdf
				]
				
				learningProgramms[
					//wood,hand
					https://kedrosadmaster.ru/frezer_obuchenie
					//wood,overall
					http://dartruda.ru/edu
				]
				
				guides[
					https://blog.udemy.com/types-of-wood-joints/
					https://www.behance.net/gallery/24920333/Custom-Interlocking-Bed-Frame
					https://spunjinworks.com/2014/08/15/tatami-style-platform-bed/
					https://www.thewoodwhisperer.com/videos/platform-bed-pt-1-the-footboard/
					https://spunjinworks.com/2014/08/15/tatami-style-platform-bed/
					https://www.youtube.com/watch?v=ZVDGqMSmPMw
					https://5domov.ru/stroitelstvo/soedineniya-derevyannyih-detaley-11-vidov-soedineniy-dereva.html#10
				]
				
				joints[
					//types
					https://www.wwgoa.com/article/woodworking-joints-which-ones-should-you-use/
					//test 8:21
					https://www.youtube.com/watch?v=6cAUz_eCmbw
				]
				
				examples[
				
				//стол для торцовочной пилы
				https://www.youtube.com/watch?v=KtsoQrz74ZM
				https://teremizbrusa.ru/instrument/kak-sdelat-stol-dlya-tsirkulyarnoy-pilyi.html
				
				//клетка
				https://pikabu.ru/story/samodelnaya_vitrina_dlya_shinshillyi_5107553
				
				http://www.homedecorexpert.com/rabbet-joints-cut-tools-use.html
				http://sdelajrukami.ru/wp-content/uploads/2017/06/Stul-svoimi-rukami-15.jpg
				http://sdelajrukami.ru/wp-content/uploads/2017/06/Stul-svoimi-rukami-18.jpg
				http://www.ana-white.com/2010/04/plans-the-angle-chair-modern-simplicity-is-suprisingly-comfortable.html
				
					https://www.youtube.com/watch?v=5HWxG6z4WPw
					https://www.youtube.com/watch?v=iYprNM3Kr0k
					https://www.youtube.com/watch?v=LFypehZYSUw
					https://www.youtube.com/watch?v=oZrGjBUwUpw
					https://www.youtube.com/watch?v=gV4HSnCYVmg
					https://www.youtube.com/watch?v=I822PC9kW7Y
					https://www.youtube.com/watch?v=MYIk2aXM4BE
					
				]
								
			]
			
			electro[
				//block
				https://www.youtube.com/watch?v=F3_OeVjKHr0
				
				overclock[
					https://www.makeuseof.com/tag/cpu-overclocking/
				]
				
				
					powerSupply[
					//PC 24 pins
					https://overhard.ru/news/articles/stati/raspinovka_razemov_bloka_pitaniya/
					]
					
					stuff[		
	
						LED RGB Ball String
						//power supply
						http://diodnik.com/wp-content/uploads/2016/02/lab2_0.gif
								
					]
				
			]
			
		]
		
	
	}

	actual_Financial[
		
		bloombegrHiddenPageShow()[
			
		function sh(elem){
			elem.setAttribute("aria-hidden",false);
			elem.style.display="block";
		}

		function iter(elem){
			
			sh(elem);
				
			if(elem.children){
				for(var ch of elem.children){
					iter(ch);
				}
			}
			
			
			
		}

		var elems = document.getElementsByClassName('body-copy-v2 fence-body'); 

		for(var nd of elems){
			iter(nd);				
		}

				]				
				
		UStradewarOnChina[

		30.06.2018 wait for next week Trump decision tariff growth
		Summer end CHN MXC new tariffs on US goods

			2016 Iowa export CHN $ 2 bln 4% state economy. Second soybean prod after Illinois. 
			CHN 1 US soybean buyer 2017 $ 4 bln 62% US soybean export 
			US Trade partners tariffs on goods case futures drop?
			
			USA[
				PRO:
					can afford trading war
					very strong macro
					president approval, looks tougher
				CON:
					republicans -> agrcltr export
					North Dakota soy bean growers very sad
					GM cut jobs
			]

			CHN[
				PRO:
					strong juan control
					yuan drop down faster then extm 2015
			]
			
			GM General Motors
			SIE Siemens AG [50 000 US workers; $ 23 bln rev; ]
			DAI Diamler AG
			7203 Toyota JPN [10 plants in US; 136 000 empl; ]
			  apr 2018 CHN tariffs on 50$ US goods 
				[US soybean ftr CFD Grows]
				may 2018 MXC tariffs on US goods:[apl,burbon,pork - agricultural states voted fo Trump]
				cause:[US soybean ftr CFD drop]
				jun 2018 EUN tariffs on US goods:[rice,maize corn,orange guice]
				cause:[US soybean ftr CFD drop,maize drop]							
			
			14.05.19 - 
				25% tarrif on $300 bln CHN goods			
				CHN retaliated 5% - 20% on 2.43 US prod 
				S&P 500 
				
			=> 
				Higher tariffs drive up Def prefered measure of underlying inflation, 
					raising consumer prices
				can affect copper,iron orem steel prices
			
			apr 2018 CHN tariffs on 50$ US goods 
			[US soybean ftr CFD Grows]
			may 2018 MXC tariffs on US goods:[apl,burbon,pork - agricultural states voted fo Trump]
			cause:[US soybean ftr CFD drop]
			jun 2018 EUN tariffs on US goods:[rice,maize corn,orange guice]
			cause:[US soybean ftr CFD drop,maize drop]
			
		]
		
		USvsRusSanctions[
		
			april 2018 sancions agains keypeople => RUB/USD rise 57 to 63
			
			august 08 2018 overall sanction programm leak => RUB/USD rise from 63 to 66
			september 2018 sanctions implementation when senate off weekends
			
				<- Helsinki summit week Trump agains Putin, need internal solid neasures
				<- Novichock issues used as jurification (wooman death in 30 km from Scripal house)
			
		]
		
		statistics[
			US[
				//Labour
				https://www.bls.gov/home.htm
			]
		]
		
		RUS[
			Banks[
				MKB,CBOM
			]
		]			
		
	]
	
	global_facts[

		farming[
			Y2012
			chicken 32 bln
			cows 1.5 bln
			pig 1 bln
			sheep 1 bln
			
			83% farmland to feed, pasture, far, crops
			26% total earth area
			27% glob water consumption
			
			protein in feed to meat
			4% fo cows
			3% fed callories into beef
			
			CALLORIES LOST 97%
			
			1 kg steack 
			25 kg fraid
			15 ths litters water
			
			MEAT PROD END UP IN 18% people eat
			
			CROPS FED to ANIMALS estimate feed 3.5 bln people
			
		]
		
	]

я ни у кого не спрашивал
, мне тогда чашечку кофе
, и стало четверг
, вы первый начали
, с таким настроением слона не продашь
, не на те места ты колокольчики повесил
, я на западе
, по эстонски надо говорить
, русский выучить успел а плавать нет
, ну шо помог ему его английский
, бесполезно с феноменальной памятью
, собака: я сама офигела
, действительно, а чего это я
, он думает, что говорит по английски
, орёл: сволочи, делают, что хотят


]
