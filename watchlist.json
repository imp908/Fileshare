todo[

	list sort
	<-14.09.2018 21:30 15.09.2018 00:46-> EF to mysql
	<-15.09.2018 21:30 15.09.2018 00:46-> codefirst
	<-15.09.2018 21:30 15.09.2018 00:46-> migrate long -> string
	<-15.09.2018 01:00 15.09.2018 02:36-> mongo crud
	<-15.09.2018 12:30 15.09.2018 13:30-> model to mongo
	<-15.09.2018 15:00 15.09.2018 16:00-> autofac service location
	<-15.09.2018 23:50 16.09.2018 01:56 02:06-> automapper or alternatives
	<-22.09.2018 00:15 22.09.2018 03:54 03:38-> Autofac Imodule, Icontainer, Resolve
	<-23.09.2018 19:40 23.09.2018 23:00 03:20-> Automapper, Nlog autofac
	-> autofac id generator
	-> web api input parse
	-> Test mongo Repo
	-> Fake it easy moking
	-> model to mongo via rabbit	
	-> stylecop autocorrect
	-> kibana
	-> influx db
	-> netbus 
	
]

tolearn[

	ref in out

	appress
	614- type ref, late binding
	708-751 CIL
	752-807 multythreading

	MCA arhitecture
	lock resolve
	transport protocols

	rabbitmq
	reddis

	service broker 
	arbitter

	js
	lambda
	closure 
	var let 
	bind call aplly
	map vs foreach
	
]

toread[
	
	//Algorithm Design and Applications
	http://canvas.projekti.info/ebooks/Algorithm%20Design%20and%20Applications%5BA4%5D.pdf
	
	//vue 
	https://www.youtube.com/watch?v=7YZ5DwlLSt8
	
	//database design
	https://www.youtube.com/watch?v=ztHopE5Wnpc
	
	//C++ basic to advance
	https://www.youtube.com/watch?v=mUQZ1qmKlLY
	
	//Data structures 
	https://en.wikipedia.org/wiki/Data_structure
	https://en.wikipedia.org/wiki/Hash_table
	https://en.wikipedia.org/wiki/Linked_list
	
	//DDD
	http://www.methodsandtools.com/archive/archive.php?id=97p2
	https://en.wikipedia.org/wiki/Domain-driven_design
	//Aggregate root 
	https://www.codeproject.com/Articles/1055514/Aggregate-Root-Pattern-in-Csharp
	https://martinfowler.com/bliki/DDD_Aggregate.html
	
	//book
	//Rabbit mq
	http://books.tarsoit.com/RabbitMQ%20Cookbook.pdf
	//best practices 
	https://www.cloudamqp.com/blog/2017-12-29-part1-rabbitmq-best-practice.html
	
	//inter process comunication
	https://en.wikipedia.org/wiki/Inter-process_communication
	//data distribution service
	https://en.wikipedia.org/wiki/Data_Distribution_Service
	
	mesasging system 
	rabbitmq
	https://www.rabbitmq.com/tutorials/tutorial-one-dotnet.html
	
	Caching
	reddis
	https://redis.io/topics/data-types-intro
	
	TPL
	https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/task-parallel-library-tpl
	
	https://en.wikipedia.org/wiki/Turing_completeness
	https://en.wikipedia.org/wiki/Hardware_random_number_generator
	https://en.wikipedia.org/wiki/Pseudorandom_number_generator
	https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator
	https://en.wikipedia.org/wiki/One-time_pad
	https://en.wikipedia.org/wiki/Strong_cryptography

	//FP vs OOP
	https://medium.com/@sho.miyata.1/the-object-oriented-programming-vs-functional-programming-debate-in-a-beginner-friendly-nutshell-24fb6f8625cc
	
	//JS styleguides
	https://codeburst.io/5-javascript-style-guides-including-airbnb-github-google-88cbc6b2b7aa
		
	//ML
	https://towardsdatascience.com/how-not-to-use-machine-learning-for-time-series-forecasting-avoiding-the-pitfalls-19f9d7adf424
	http://www.statsoft.com/Textbook/Time-Series-Analysis
	
	//Feature toggling
	https://martinfowler.com/articles/feature-toggles.html
	//CI 
	https://en.wikipedia.org/wiki/Continuous_integration
	https://www.gocd.org/2017/05/16/its-not-CI-its-CI-theatre.html
	https://paulhammant.com/blog/branch_by_abstraction
	https://zeroturnaround.com/rebellabs/things-to-consider-when-featuring-branching-with-continuous-integration/
	
	//Enterprise service bus
	https://en.wikipedia.org/wiki/Enterprise_service_bus
	
	//ORM Ibaits vs hibernate
	https://www.javaworld.com/article/2077875/open-source-tools/ibatis--hibernate--and-jpa--which-is-right-for-you-.html?page=5
	
	//insects
	https://en.wikipedia.org/wiki/Fairyfly
	
	//service architecture
	https://en.wikipedia.org/wiki/Microservices
	https://en.wikipedia.org/wiki/Service-oriented_architecture
	
	//sharing code 
	http://www.ben-morris.com/sharing-libraries-between-net-core-and-net-framework-applications/
	http://www.ben-morris.com/migrating-net-framework-applications-to-net-core/
	https://docs.microsoft.com/en-us/dotnet/core/tools/extensibility
	https://docs.microsoft.com/en-us/dotnet/core/tools/extensibility#per-project-based-extensibility
	https://docs.microsoft.com/en-us/dotnet/core/deploying/
	https://docs.microsoft.com/en-us/dotnet/standard/net-standard
	https://programmingwithmosh.com/csharp/should-you-split-your-asp-net-mvc-project-into-multiple-projects/
	https://www.infoq.com/news/2017/10/dotnet-core-standard-difference
	
	//media
	https://www.techwalla.com/
	
	//economy
	https://www.bloomberg.com/news/articles/2018-06-29/trump-s-trade-war-challenge-figuring-out-who-s-the-enemy
	https://www.bloomberg.com/news/articles/2018-06-30/bitcoin-bloodbath-nears-dot-com-levels-as-many-tokens-go-to-zero
	https://www.bloomberg.com/news/features/2018-06-26/how-to-steal-50-million-bees
	https://www.bloomberg.com/news/articles/2018-06-29/ivory-coast-to-start-destroying-cocoa-crops-in-protected-forests
	https://en.wikipedia.org/wiki/Ivory_Coast
			
	//literature 
	https://meduza.io/feature/2018/06/30/dva-romana-o-pchelah-antiutopiya-iz-zhizni-nasekomyh-i-saga-pro-ekologiyu
	
	//JS
	https://lostechies.com/chrismissal/2013/08/06/browser-wars-websockets-vs-ajax/
	https://blog.safe.com/2014/08/websockets-ajax-webhooks-comparison/
	https://scotch.io/bar-talk/copying-objects-in-javascript
	https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know#toc-module-design-pattern
	https://medium.com/@tkssharma/objects-in-javascript-object-assign-deep-copy-64106c9aefab
	https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know#toc-module-design-pattern		
	https://medium.com/@tkssharma/objects-in-javascript-object-assign-deep-copy-64106c9aefab

	//Full-stack roadmap 2018
	https://codeburst.io/the-2018-web-developer-roadmap-826b1b806e8d
	//Full-stack guide 2018
	https://codeburst.io/the-ultimate-guide-to-learning-full-stack-web-development-in-6-months-for-30-72b3854a7458
	
	//aws deploy
	https://codeburst.io/deploy-angular-2-node-js-website-using-aws-1ac169d6bbf
	
	//js 30 things
	https://javascript30.com/
	
	//IIFe vs closure
	https://www.sitepoint.com/demystifying-javascript-closures-callbacks-iifes/
	
	//rxjs
	https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
	https://netbasal.com/event-emitters-in-angular-13e84ee8d28c
	https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
	
	//MEAN
	//Express 4 web api
	https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4
	//mongo js web api
	https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4
	//mean web api
	https://scotch.io/tutorials/mean-app-with-angular-2-and-the-angular-cli
	
	
	//mongo 
	
	//refs 
	//drivers 
	https://docs.mongodb.com/manual/applications/drivers/
	
	//docs 
	
	//documents 
	https://docs.mongodb.com/
	//manual
	https://docs.mongodb.com/manual/
	//shell command 
	https://docs.mongodb.com/manual/tutorial/write-scripts-for-the-mongo-shell/#mongo-shell-new-connections
	//dirver API
	http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html?_ga=2.178965415.24837985.1529065256-2048342004.1529065256#insertMany		
	//node.js driver 
	http://mongodb.github.io/node-mongodb-native/2.2/

	
	
	//Machine learning
	
	//overall 
	https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%88%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5
	
	//tutorial
	http://neuralnetworksanddeeplearning.com/
	//c++
	https://github.com/GarethRichards/Machine-Learning-CPP/blob/master/README.md
	
	//libs 		
	http://dlib.net/
	https://www.mlpack.org/about.html
	
	//frameworks
	http://caffe.berkeleyvision.org/tutorial/
	https://www.tensorflow.org/
	
	//electricity
	https://www.youtube.com/watch?v=TQUsGnJ51ig
	https://www.youtube.com/watch?v=AL10qGOEPYI
	
	//futures
	https://ru.investing.com/commodities/aluminum
	https://ru.investing.com/commodities/us-corn
	https://ru.investing.com/commodities/us-wheat
	https://ru.investing.com/commodities/sorghum-future
	
	//news
	https://www.cnbc.com/world/?region=world
	https://www.investopedia.com/
	http://www.kitco.com/
	
	//oil
	https://en.wikipedia.org/wiki/List_of_countries_by_proven_oil_reserves
	https://en.wikipedia.org/wiki/Proven_reserves
	https://en.wikipedia.org/wiki/Oil_reserves
	https://en.wikipedia.org/wiki/Petroleum
	
	//db
	https://en.wikipedia.org/wiki/Isolation_(database_systems)#Phantom_reads
	https://en.wikipedia.org/wiki/Isolation_(database_systems)
	https://en.wikipedia.org/wiki/Database_transaction		
	https://docs.oracle.com/cd/B13789_01/server.101/b10743/consist.htm#i5702		
	
]

watchlist[

	//Most usefull links
	public void toSortNew()
	{
	
		http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0006481																  
		https://sharpc.livejournal.com/67583.html
		http://www.securitynewspaper.com/2015/10/15/how-to-scan-whole-internet-3-7-billion-ip-addresses-in-few-minutes/
																							 
		//electronics manufacturing association
		http://www.semi.org
		RAND Corporation 
		Atlantic Council
		http://veloline.ru/ispravlenie-vosmerok								 
		
		temp[
		
Белиз 
Гватемала 	
Сальвадор 	
Гондурас 	
Никарагуа 	
Коста-Рика 	
Лос-Альтос 
Панама

эль-пасо
Сьюдад-Хуарес
лос-сента
синалоа

Радуга: Семеро из шестой камеры второго блока
1. Добро пожаловать в Эн.Эйч.Кэй / NHK ni Youkoso! (24 серии) 1:20 - 3:56 
2. Радуга: Семеро из шестой камеры / Rainbow: Nisha Rokubou no Shichinin (26 серий) 3:57 - 6:32 
3. Код Гиас: Восставший Лелуш / Code Geass (первый сезон: 25 + 11 special, второй сезон: 25 + 9 special) 7:02 - 9:00﻿

[
ang io [ http, VS template ]
,.net core [ web api 2 template, ang io template ]
,linq to orient [ extend ]
]

cubiio

atack rocket
[usa,gb,fr]->[syria]
rus sector avoid

weak
oil,usd/
rub,gold\

oil(72.57;67.33),gold(1347),
usd\rub(62.01)/

подсолнечник 39/0,250
тыква 199/0,5

"Яма" Александра Куприна, "Санин" Михаила Арцыбашева, "В тумане" Леонида Андреева, "Крейцерова соната" Льва Толстого
		]
		RPN[
			http://77.rospotrebnadzor.ru/index.php/upravlenie/priemnaya
			http://rospotrebnadzor.ru/region/structure/str_uprav.php
			https://www.meleon.ru/
			https://www.kartoteka.ru/card/235a7ca4f006b2d3f2b6c855374cadd0/
			https://www.kartoteka.ru/card/886e2d61f96dc6ae24bd60eb3084fc78/	
		]
		
		https://proglib.io/p/hacker-course/		
		http://www.gilead.com/
		http://www.ftse.com/products/downloads/Russell-US-indexes.pdf
		
		Barings Vostok
		 
		offshore[
			Британские Виргинские острова, США, Великобритания, Кипр, Панама, Новая Зеландия
		]
		
		azb[nesterov igor
			13.01.1985
		]			 
		
		//investing
		[
			stats[
				http://www.pbc.gov.cn
				
				JPY[
					MinistryOfFinanace
					https://www.mof.go.jp/english/index.htm
						[
							Сальдо торгового баланса с учетом сезонных колебаний
							импорт,экспорт
							
						]
				]
				
				GB[
					Office for National Statistics
					https://www.gov.uk/government/statistics/announcements
					https://www.ons.gov.uk/
					[
						Consumer Price Index (CPI)
						Индекс потребительских цен (ИПЦ) (г/г,м/м) (month)
						Producer Price Index (PPI)
						Индекс закупочных цен производителей (г/г,м/м) (month)
						The Retail Price Index
					]
					
				]
				
				EUR[
					eurostat
					http://ec.europa.eu/eurostat
				]
				
				USA[
					fedreserve
					https://www.federalreserve.gov/monetarypolicy/beige-book-default.htm
					[
						Beige Book
					]
					energy agency
					https://www.eia.gov/
					[
						Crude Oil Inventories
						Crude Oil Imports
						Cushing Crude Oil Inventories
						EIA Weekly Distillates Stocks
						Distillate Fuel Production
						EIA Weekly Distillates Stocks
					]
				]			
			]
			
			funds[
				https://www.bakerhughes.com/
				
				https://www.fidelity.com/
				https://www.fundcalibre.com/
				https://www.youinvest.co.uk/
				https://www.brewin.co.uk/
				https://www.unicornam.com/
				http://www.moneyobserver.com/
			]
			
			analytics[
				
				https://ru.investing.com
				
				US index
				https://www.marketwatch.com/investing/index/DXY
				
				https://oilprice.com/
				
				http://www.barrons.com
				
				https://www.spglobal.com/platts/en
				
				//Satellite tanker traking
				https://tankertrackers.com/
				//Marine traffic tracking
				https://www.marinetraffic.com
			]
			
			ideas[
				https://oilprice.com/
				
				OIL[
					ROSN,SNGS,LKOH
					
					OPEC[
					2018 IRI-57.5;KSA-70
						07.2018 
					]
					2019 Saudi Arabian Oil Co IPO 
					$2 trl priced
					$100 mlrd IPO shares cap.
					
					2018.11.03 
					$ WTI 63 BRENT 72
					Iran Oil[
						main byuers India 18, China 24, Japan 5, Turkey 9, South Korea 14
						US sanctions : countries can import if reduse purchases
						take eff 2018.11.04
					]
				]
				reserve_currencies[
					Swiss franc, Singapore dollar, U.S. dollar and Japanese yen
				]
				
				Calendar[
					12.07.2018 CPI https://www.bls.gov/cpi/ https://www.investopedia.com/terms/c/consumerpriceindex.asp
							Jobless claims https://www.bls.gov/bls/newsrels.htm https://www.investopedia.com/terms/j/jobless-claims.asp				
					13.07.2018 CCI https://www.investopedia.com/terms/c/cci.asp https://www.conference-board.org/data/consumerconfidence.cfm
								SCI http://www.sca.isr.umich.edu/
				]
			]
			
			platforms[
				https://www.xtrade.ru
				https://www.etoro.com
				https://www.investopedia.com
			]
				
			crypto[
				https://ru.m.bitcoinwiki.org/wiki/%D0%91%D0%B8%D1%80%D0%B6%D0%B8
				https://www.bloomberg.com/features/bitcoin-bulls-bears/
				https://xapo.com/
				
				https://www.bloomberg.com/news/articles/2018-05-09/ex-goldman-trader-hires-former-rivals-to-build-a-crypto-empire
				https://www.panteracapital.com/
			]
		
		]
		
		//startups
		[
		
		http://www.selpo.me/
		http://go.philtech.ru/?utm_source=meduza&utm_medium=article&utm_campaign=accelerator.
		
		]
		
		//OWIN
		[
	https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/external-authentication-services
	https://docs.microsoft.com/en-us/aspnet/identity/overview/extensibility/overview-of-custom-storage-providers-for-aspnet-identity
	https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/how-to-create-a-custom-authorization-policy
	https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service
	https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier
	https://docs.microsoft.com/en-us/aspnet/core/security/authorization/roles
	https://docs.microsoft.com/en-us/aspnet/core/fundamentals/owin
	http://bitoftech.net/2015/01/21/asp-net-identity-2-with-asp-net-web-api-2-accounts-management/
	http://bitoftech.net/2015/03/11/asp-net-identity-2-1-roles-based-authorization-authentication-asp-net-web-api/
		]
		
		//EXPRESSIONS
		[
	//MSDN linq, expressions
	https://weblogs.asp.net/dixin					  
	//Expression trees
	https://weblogs.asp.net/dixin/functional-csharp-function-as-data-and-expression-tree
	//Dynamic LINQ Queries with Expression Trees
	https://www.simple-talk.com/dotnet/net-framework/dynamic-linq-queries-with-expression-trees/
	//expressionTypes
	https://msdn.microsoft.com/en-us/library/bb361179(v=vs.110).aspx
	//Expression rules
	http://coding-time.blogspot.ru/2011/07/how-to-implement-rule-engine-in-c.html
	//custom LINQ provider
	https://stackoverflow.com/questions/12181276/implementing-a-custom-linq-to-x-provider
	https://msdn.microsoft.com/en-us/library/bb546158.aspx
	https://blogs.msdn.microsoft.com/mattwar/2007/07/30/linq-building-an-iqueryable-provider-part-i/
		]
		
		//CORE
		[
		
	//.NET CORE
	https://docs.microsoft.com/en-us/dotnet/core/
	//core utilities
	https://www.microsoft.com/net/download/linux
	//Linux prerequisites
	https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x
	//core Hello world
	https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api
	//core deploy 
	https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-vs#simpleSelf
	//core target platforms 
	https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids
	//publish iis
	https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/?tabs=aspnetcore2x
	https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/visual-studio-publish-profiles?tabs=aspnetcore2x#publish-profiles
	//kestrel
	https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/?tabs=aspnetcore2x
	https://docs.microsoft.com/ru-ru/aspnet/core/fundamentals/servers/kestrel?tabs=aspnetcore2x
	//nginx
	https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?tabs=aspnetcore2x
	https://www.tonyranieri.com/blog/2017/10/27/Hosting-.Net-Core-On-Linux/
	//docker
	https://stormpath.com/blog/tutorial-deploy-asp-net-core-on-linux-with-docker
	//self contained 
	https://docs.microsoft.com/en-us/dotnet/core/deploying/index
	https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-vs
	//platforms ID catalog
	https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids
	//kestrel
	https://github.com/aspnet/KestrelHttpServer
	//iis host
	https://metanit.com/sharp/aspnet5/20.1.php
	//build on win deploy to Unix
	https://pioneercode.com/post/developing-a-net-core-site-in-windows-and-deploying-it-to-a-budget-linux-host
	//Linux prerequisites
	https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x
	//self contained 
	https://github.com/dotnet/core/blob/master/Documentation/self-contained-linux-apps.md																		 
		]	
		
				
		Businesses
		[
			//bees
			
			California  80 % world’s almonds
			15 years push out row crops
			Almond 1 acre two hives
			2.5 mln colonies (= hives ?) 2/3 commercial US honeybees
			448 boxes 50 mln bees
			700 boxex $ 1 mln
			Montana Dakota planes, more honey per hive in America
			500 hives $ 100 thsd
			maintain earlier 1 $ hive  now 4 $ hive
			Carniolan queens $31 ($28 for bulk)
			
		]
		
		deliveres[
			local[
				//electro
				http://www.platan.ru/
			]
		]
				
		ComputerScience
		[		
			https://en.wikipedia.org/wiki/Computer_science
		
			//thread
			https://en.wikipedia.org/wiki/Thread_(computing)
			//non blocking algorithm
			https://en.wikipedia.org/wiki/Non-blocking_algorithm
			//concurencyControl
			https://en.wikipedia.org/wiki/Concurrent_computing
			https://en.wikipedia.org/wiki/Metastability_(electronics)
			https://en.wikipedia.org/wiki/Concurrency_control
			
			HardwareArchitecture[						
				
				//history
				https://en.wikipedia.org/wiki/History_of_general-purpose_CPUs#1990_to_today:_Looking_forward
				
				https://en.wikipedia.org/wiki/Microarchitecture
				
				//intel generation
				https://en.wikipedia.org/wiki/List_of_Intel_CPU_microarchitectures
				
				
				//cache coherence
				https://en.wikipedia.org/wiki/Cache_coherence
				
				//DMA
				https://en.wikipedia.org/wiki/Direct_memory_access
				//memory pages 
				https://en.wikipedia.org/wiki/Page_table
				https://en.wikipedia.org/wiki/Memory_type_range_register
				
				//nahalem architecture
				https://web.archive.org/web/20140811023120/http://sc.tamu.edu/systems/eos/nehalem.pdf
				
				//assembler comparison
				https://en.wikipedia.org/wiki/Comparison_of_assemblers
				x86[
					https://en.wikipedia.org/wiki/X86
					//MASM
					https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler
					http://www.infernodevelopment.com/introduction-masm32
					//NASM
					https://en.wikipedia.org/wiki/Netwide_Assembler
					https://www.nasm.us/doc/nasmdoc0.html
				]
				arm[
					https://www.arm.com/
					https://en.wikipedia.org/wiki/ARM_architecture
				]
				
				asynchronous_circuits[
					https://en.wikipedia.org/wiki/Asynchronous_circuit
				]
			
			]					
								
			SoftwareArhitecture[
				
				https://hackernoon.com/38-actions-and-insights-to-become-a-better-software-architect-f135e2de9a1b
				
				//microservises
				SaS[
				
					SaS (system as a service) -consists of -> EIA (integration mechanism) -> BUS via  MOM (message oriented niddleware) -realized with-> MQS (messaging queing service) 
					-with building blocks of-> Message broker (kafka,RabbitMQ,redis,ActiveMQ,Enduro/x))
					Blocking Middleware RPC (Remote procedure call), ORB (Object request Broker)
					or SpokeHub
					
					//SOA
					https://en.wikipedia.org/wiki/Service-oriented_architecture					
					//EIA
					https://en.wikipedia.org/wiki/Enterprise_application_integration
					//ESB
					https://en.wikipedia.org/wiki/Enterprise_service_bus
					//SpokeHub
					https://en.wikipedia.org/wiki/Spoke%E2%80%93hub_distribution_paradigm
					
					//MOM
					https://en.wikipedia.org/wiki/Message-oriented_middleware
					//MQS
					https://en.wikipedia.org/wiki/Message_queuing_service	
					//Message broker 
					https://en.wikipedia.org/wiki/Message_broker
					//Apache Kafka
					https://en.wikipedia.org/wiki/Apache_Kafka 
					uses for coordination
					ZooKeper
					https://en.wikipedia.org/wiki/Apache_ZooKeeper
					//Protocol
					//AMQP	
					https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol		
					//RabbitMQ (stands on AMQP)
					//alternate protocols 
					//STOMP
					https://en.wikipedia.org/wiki/Streaming_Text_Oriented_Messaging_Protocol
					//XMPP
					https://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol
					//MQTT
					https://en.wikipedia.org/wiki/MQTT
					//OpenWire 
					//ActiveMQ
					https://en.wikipedia.org/wiki/OpenWire_(binary_protocol)
					
					//microservice Reference Architecture
					https://www.microservices.com/reference-architecture/
					
			
					https://www.quora.com/What-are-the-best-sources-to-learn-on-microservices
					http://index-of.es/Varios/Sam%20Newman-Building%20Microservices-O%27Reilly%20Media%20(2015).pdf
					https://www.youtube.com/watch?v=wgdBVIX9ifA
					https://www.youtube.com/watch?v=sSm2dRarhPo
										
					https://www.nginx.com/blog/nginmesh-nginx-as-a-proxy-in-an-istio-service-mesh/
					https://www.nginx.com/blog/what-is-a-service-mesh/
					https://www.nginx.com/blog/introducing-the-nginx-microservices-reference-architecture/
					https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
					https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/characteristics-of-microservices.html
					
		
					pros[
						polyglot,
						organizational and technical benefits(different concurency models),
						temporal decoupling 
					]
					
					strategies[

						database:
							shared-service knows other service tables
							simple and ACID
							tight coupling
							
							database per service
							loose couple
							but complex, 2PC not n option
							
						IPC:
							events
							eventual consistency
								example:
									Order_service-[order to create]->...-[order created]->Customer_service
									Customer_service-[creadit ok,not ok]->Order_service
							DualWriteProblem:

					]
					
					patterns[
						decomposition[
							sidecar proxy //sideckick
							https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar
							//ambassador
							https://docs.microsoft.com/en-us/azure/architecture/patterns/ambassador
							//circuit breaker
							https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
							https://www.nginx.com/blog/microservices-reference-architecture-nginx-circuit-breaker-pattern/
						]
					]
		
					untipatterns[
						distributed_monolith[
							//binary_cpoupling
							shared library, network clients
							
						]
					]
					
				]

				simulation[
					//High level architecture 
					https://en.wikipedia.org/wiki/High-level_architecture
					//HLA tutorial
					http://www.pitch.se/hlatutorial/
					//DIS
					https://en.wikipedia.org/wiki/Distributed_Interactive_Simulation
				]
						
				//ring layered software arhitecture 
				https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html
				//parallel computing
				http://juser.fz-juelich.de/record/60553/files/NIC225296.pdf
				
				InfrastructurePersistanceLayer[
				https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design
				
					SpecificationPattern[
						https://deviq.com/specification-pattern/
					
					]
					
					Repositories[
						//repositories and uows switch, and realization
						https://deviq.com/repository-pattern/						
					]
					
					EF[
						//avoid lazy loading 
						https://ardalis.com/avoid-lazy-loading-entities-in-asp-net-applications
					]
				]
				
			]
			
			DataStructures[
						
				//DAG directed acyclic graph
				https://en.wikipedia.org/wiki/Directed_acyclic_graph
				
				HashSet vs. TreeSet vs. LinkedHashSet 
				https://dzone.com/articles/hashset-vs-treeset-vs
				
				Graph[
					
					GraphInSQL [
		
						Problem: 
							EF query hierarhy(graph) data
						
						Theory:
						//adjacency list, nested sets, closure tables (variant of adjancy list), adjancy matrix
						//all use vanilla sql
						https://en.wikipedia.org/wiki/Adjacency_list
						https://en.wikipedia.org/wiki/Nested_set_model
						http://technobytz.com/closure_table_store_hierarchical_data.html
						https://en.wikipedia.org/wiki/Adjacency_matrix
						//Hierarhial queries + CTEs
						https://en.wikipedia.org/wiki/Hierarchical_and_recursive_queries_in_SQL
						
						nested sets 
							-mooving subtrees
							
						adjacency list
							+mooving subtrees
							-query all nodes
						
						closure tables 
							-mooving subtrees
						
						Realization:
							EF:
								ancestors descedant
								https://stackoverflow.com/questions/11565423/most-efficient-method-of-self-referencing-tree-using-entity-framework/11565717#11565717
								
								nested include
								https://stackoverflow.com/questions/11676513/how-can-i-use-entity-framework-on-an-object-graph-past-a-depth-of-2-with-mysql-c
						
						SQL:
							
							https://inviqa.com/blog/graphs-database-sql-meets-social-network
							
							postgre vanilla sql:
								//adjacency list vs nested sets
								https://explainextended.com/2009/09/25/adjacency-list-vs-nested-sets-sql-server/	
								
								//closure Tables 
								https://coderwall.com/p/lixing/closure-tables-for-browsing-trees-in-sql
								
							mssql:
							
								sql 2017 graph feature
								https://cloudblogs.microsoft.com/sqlserver/2017/04/20/graph-data-processing-with-sql-server-2017/
								https://www.sqlshack.com/introduction-sql-server-2017-graph-database/
								https://www.red-gate.com/simple-talk/sql/t-sql-programming/sql-graph-objects-sql-server-2017-good-bad/
								
								//sql hierarchyid and buildin procedures
								https://docs.microsoft.com/en-us/sql/relational-databases/tables/lesson-2-creating-and-managing-data-in-a-hierarchical-table?view=sql-server-2017
								https://docs.microsoft.com/en-us/sql/relational-databases/tables/lesson-1-converting-a-table-to-a-hierarchical-structure?view=sql-server-2017

								
						MSSQL[
							instance name:MSSQLSERVER
							AAAPC\User (User)
							distributed relay controller:DRC

							AAAPC
							sa:q2w3e4E$W#Q@
						]

					]
					
				]
			]
				
			webCommunication[
			
				//different communication techniques on the web
				//AJAX,Long poll,WebSockets,WebRTC,Server-Sent Events
				https://stackoverflow.com/questions/10028770/in-what-situations-would-ajax-long-short-polling-be-preferred-over-html5-websock
				
				//websockets vs ajax
				https://lostechies.com/chrismissal/2013/08/06/browser-wars-websockets-vs-ajax/
				
			]			
			 
			programmingLanguages[
								
				//FBP flow base programming
				https://en.wikipedia.org/wiki/Flow-based_programming

			]
			
			Algorithms[
				//uuid in Windows
				http://rsdn.org/article/Crypto/UuidCrypto.xml
				//Hascode recommendations
				https://ericlippert.com/2011/02/28/guidelines-and-rules-for-gethashcode/
			]
			
			MachineLearning[
				//Frameworks
				https://pytorch.org/
				https://www.tensorflow.org/
			]
		
		]
		
		Engeneering
		[
		
			SoftwareEngeneering
			[
			
				blockchain[
			cryptocurrency[
				bitcoin[
					
					links[
						https://medium.com/@jimmysong/why-blockchain-is-hard-60416ea4c5c
						https://support.bitfinex.com/hc/ru
						https://]www.bitfinex.com/legal/terms
						https://en.wikipedia.org/wiki/Bitcoin
						https://en.wikipedia.org/wiki/Cryptocurrency
					]
					
					BTC 1
					mBTC 0.001
					sat 0.00000001
				]
			]
		]
				
				reverseEngenering[
				
					https://en.wikipedia.org/wiki/Radare2
					https://www.pelock.com/articles/reverse-engineering-tools-review
					https://www.foo.be/cours/dess-20122013/b/Eldad_Eilam-Reversing__Secrets_of_Reverse_Engineering-Wiley(2005).pdf
					http://shop.oreilly.com/product/9780596005450.do
					https://courses.ece.ubc.ca/cpen442/previous_years/2007_1_spring/modules/term_project/reports/2007/software_cracking.pdf
					
					debuggers[
					https://en.wikipedia.org/wiki/Interactive_Disassembler
						https://en.wikipedia.org/wiki/GNU_Debugger
						https://en.wikipedia.org/wiki/Kernel_debugger			
						https://en.wikipedia.org/wiki/SoftICE
					]
					
					cracking[
						https://en.wikipedia.org/wiki/Software_cracking
					]
				]
				
				webDevelopment[
					
					webDesign[
						
						prototypes[
							
							https://medium.com/@denysergushkin/20-%D0%B8%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D1%82%D0%B8%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BE%D1%82-%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE%D0%B3%D0%BE-%D0%B8-%D0%B3%D1%80%D1%8F%D0%B7%D0%BD%D0%BE%D0%B3%D0%BE-wireframe-%D0%BA-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%BC%D1%83-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D1%82%D0%B8%D0%BF%D1%83-210f223323fe
							https://mobirise.com/_l/bootstrap-website-builder/?gclid=EAIaIQobChMIgJrLp-6H3AIVhYQZCh3Buwh6EAEYASAAEgJAKPD_BwE
							
						]
						
						Mockups[
							
							https://www.creativebloq.com/ux/3-way-create-website-mockups-11513936
							
						]
						
					]
					
				]
						
				devops[
					
					CI[
						https://github.com/marketplace/category/code-quality
						https://about.gitlab.com/features/gitlab-ci-cd/
					]
								
					npm proxy[
					
						npm set strict-ssl false –g
						npm config set registry "http://registry.npmjs.org/" -g
						npm config set proxy http://msk1.unix.nspk.ru:3128 –g

						npm --registry http://nexus..ru:8081/nexus/content/repositories/npmjs/ install -g react react-dom

					]
				
				]			
				
				https://en.wikipedia.org/wiki/Software_engineering
				
				CI_continiousIntegration_strategies[
									
					//Pure CI build on a dollar day
					https://www.jamesshore.com/Blog/Continuous-Integration-on-a-Dollar-a-Day.html
					//Trunk based development
					https://paulhammant.com/2013/04/05/what-is-trunk-based-development/
					
					//Continious Isolation
					https://paulhammant.com/2017/02/14/fake-news-via-continuous-isolation/
					
					//CI theatre
					https://www.gocd.org/2017/05/16/its-not-CI-its-CI-theatre.html
				]			
				
				workflow[
					//minimal valueable project strategy
					MPV[
						https://medium.freecodecamp.org/how-we-went-from-three-failed-projects-to-1200-users-in-just-one-week-9db9624ccdf7
						//front portfolio design
						https://medium.freecodecamp.org/the-portfolio-hack-that-will-make-everyone-want-to-hire-you-58079cfed0b
					]
				]
			
			]
		
			mech
			[
				//solidworks CAD atm
				https://www.youtube.com/watch?v=osW5RnYIVoc
			]

			electro
			[
				https://www.youtube.com/watch?v=qVeERT4nyz8
				
				companies[
					//НИИТФА
					http://niitfa.ru/
					//ИПМТ ДВО РАН
					http://www.imtp.febras.ru/razrabotki/78.html?task=view
				]
				
				examples[
					http://www.imtp.febras.ru/razrabotki/78.html?task=view
					http://www.imtp.febras.ru/razrabotki/76.html?task=view
				]
			]
			
		]

		GuidesRoadmaps[

			Clojure[
				http://www.clojurebook.com/
				https://hackr.io/tutorials/learn-clojure
				https://clojure.org/community/community_stories
			]

			DART[
					//Dart Google tool
					https://www.dartlang.org/			
					//dart
					https://en.wikipedia.org/wiki/Dart_(programming_language)	
					//flutter 
					https://en.wikipedia.org/wiki/Flutter_(software)
				]	

				.NET[
								
					C#[
					
						//async await profiling
						https://stackify.com/csharp-async-await-task-performance/
						//type vs gettype performance comparison
						https://blogs.msdn.microsoft.com/vancem/2006/10/01/drilling-into-net-runtime-microbenchmarks-typeof-optimizations/		
						//unit test comparison
						http://www.anarsolutions.com/automated-unit-testing-tools-comparison/
						//in readonly
						https://blogs.msdn.microsoft.com/seteplia/2018/03/07/the-in-modifier-and-the-readonly-structs-in-c/
						
						async[	
						
							links[
							
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/component-that-supports-the-event-based-asynchronous-pattern
https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/
https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth
https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/?view=aspnetcore-2.1

https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
							]
						
						//guidelines
						-> no global static objects , cause lead to eadlocks
						-> multiple invocated method must have userSate object with locked collection						
						-> there may be no thread
						only OS<->kernel comunication BaseClassLib BCL, I/O Completion Port) IOCP,
						(Input output request Packet) IRP , Defered Procedure Call (DPC), Asynchronous PC APC
						BCL, overlap IOPC,APC, IRP ,DPC,Interrupt Service Routine (ISR)
						IPC interprocess comunication
						http://blog.stephencleary.com/2013/11/there-is-no-thread.html

						//asynhronous programming module
							APM[
							
								//Blocking app
								IAsyncResult r = ... .beginInvoke(synhronous parameter,asyncCallback,stateObject)
								r.WaitOne();							
								.endInvoke(args[0],null,null)
								
								//async callback
								AsyncCallback callBack = new AsyncCallback(CallbackMethod);
								Dns.BeginGetHostEntry(host, callBack, host);
								public void CallbackMethod (IAsyncResult result){}
								
							]
							EAP[
							
								//implementation
								https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/component-that-supports-the-event-based-asynchronous-pattern
								//client
								https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern
								
								//single invoke
								simple method (string param)
								//multiple invoke
								simple method with userstate param(string param,object userState)
								methodComplete event ()
								
								//special delegate
								SendOrPostCallback, executes on the ThreadPool
								AsyncOpertion
								HybridDictionary
								
								
							]
						]
						multithread[

							TaskSheduller taskScheduler = TaskSheduler.FromCurrentSynchronizationContext();
							
						]
						parallel[
							
							links[
								//TPL dataflow 
								http://blog.i3arnon.com/2016/05/23/tpl-dataflow/
								//dataflow pipe
								//TPL Dataflow Home on the DevLabs Portal
								http://msdn.microsoft.com/en-us/devlabs/gg585582#
								//TPL Forum on MSDN:
								http://social.msdn.microsoft.com/Forums/en-US/tpldataflow/threads
								//parallel
								//PFX Team Blog:
								http://blogs.msdn.com/b/pfxteam/
							]
							
						]
						rx[
						
							//Rx
							http://www.introtorx.com/

						]						
						customBodyAttributes[
							https://weblog.west-wind.com/posts/2012/Aug/30/Using-JSONNET-for-dynamic-JSON-parsing
							https://www.dotnetcurry.com/aspnet-mvc/1368/aspnet-core-mvc-custom-model-binding
							https://blogs.msdn.microsoft.com/jmstall/2012/04/18/mvc-style-parameter-binding-for-webapi
							https://stackoverflow.com/questions/17645877/webapi-bind-from-both-uri-and-body
						]						
						DI[
							//factory invoke 		
							https://autofac.readthedocs.io/en/latest/advanced/delegate-factories.html
						]
						EF[
							//EF migrations
							https://coding.abel.nu/2012/03/ef-migrations-command-reference/
						]
						automapper_autofac[
							https://kevsoft.net/2016/02/24/automapper-and-autofac-revisited.html
						]
						
					]
			
					.CORE[
						
						//webapi
						https://stackify.com/asp-net-core-web-api-guide/
						
						dotnet ef migrations add initial
						https://docs.microsoft.com/ru-ru/ef/core/managing-schemas/migrations/
						
						//automapper
						https://dotnetcoretutorials.com/2017/09/23/using-automapper-asp-net-core/
					]
				
				]
					
				CIL[
					//CIL via C#
					http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
					//specification
					http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf

					//guides with 
					https://www.i-programmer.info/programming/other-languages/933-getting-started-with-il.html?start=1
					https://www.codeproject.com/Articles/362076/Understanding-Common-Intermediate-Language-CIL

					//ilasm folder
					C:\Windows\Microsoft.NET\Framework64\v4.0.30319
					
					//ildasm
					developer console 
					
					//compile 
					ilasm.exe G:\disk\Files\git\CIL\hello.il
					
				]
					
				JS[
					
					IIFE[
						https://www.sitepoint.com/demystifying-javascript-closures-callbacks-iifes/
					]
					
					frameworks[
					
						AngularIO[
							
							//angular routing and injection	
							https://angular-2-training-book.rangle.io/handout/modules/lazy-load-di.html
							https://plnkr.co/edit/C1QKHk9Uijtxtb13UU9t?p=preview
							https://medium.com/@cyrilletuzi/understanding-angular-modules-ngmodule-and-their-scopes-81e4ed6f7407	
			
							//angular observables
							https://scotch.io/tutorials/angular-2-http-requests-with-observables
			
							//styles
							https://alligator.io/angular/style-binding-ngstyle-angular/
							//angular 2 custom themes
							https://medium.com/atom-platform/angular-6-dynamic-themes-without-a-library-c21dfb2cb580	
			
							//events
							//events list
							https://lishman.io/angular-2-event-binding
							https://medium.com/claritydesignsystem/four-ways-of-listening-to-dom-events-in-angular-part-1-event-binding-3ec7e9f51a1d					
							https://houssein.me/event-and-style-binding-in-angular2
							https://www.radzen.com/blog/angular-event-bubbling/
							//css					
							https://blog.angular-university.io/angular-ngclass-ngstyle/
							
							//materialDesign
							https://benjii.me/2018/05/material-design-stack-angular/
							https://medium.com/codingthesmartway-com-blog/angular-material-and-angular-6-material-design-for-angular-6b1a3ee476f0
							
							//custom dome event
							https://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm
							
						]
						
						socketIO[
							
							//chat app
							https://medium.com/@REPTILEHAUS/angular-2-and-socket-io-chat-app-f56afb9ceeb2
							
						]
						
						//zone.js
						https://www.youtube.com/watch?v=3IqtmUscE_U
						https://blog.angularindepth.com/i-reverse-engineered-zones-zone-js-and-here-is-what-ive-found-1f48dc87659b
						https://medium.com/@MertzAlertz/what-the-hell-is-zone-js-and-why-is-it-in-my-angular-2-6ff28bcf943e
						
					]
					
					testing[				
						JasmineKarma[
							https://codecraft.tv/courses/angular/unit-testing/jasmine-and-karma/
						]				
					]
					
					//dynamic external lib load
					https://stackoverflow.com/questions/950087/how-do-i-include-a-javascript-file-in-another-javascript-file
					
				]
				
				CSS[
					
					//css compatible colors
					http://paletton.com/#uid=75C0W0klllljw6Jkre1mfsEnaGR
					//CSS animated 
					http://www.transformicons.com/
					//css tranlate
					https://codepen.io/kattixie/pen/ezzGKY
					https://codepen.io/adamaoc/pen/PwevMj
					//svg
					https://www.sitepoint.com/add-svg-to-web-page/
					https://www.w3.org/wiki/SVG_Links
					https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform
					https://developer.mozilla.org/kab/docs/Web/SVG
					https://teropa.info/blog/2016/12/12/graphics-in-angular-2.html
				]
				
				C[
		
					//TCC compiler
					https://bellard.org/tcc/
					//cpp
					https://www.cprogramming.com/tutorial/function-pointers.html
		
						
					HW[
						
						
							/* Welcome to the Interactive C Tutorial.
						Start by choosing a chapter and
						write your code in this window. */

						#include <stdio.h>

						#define BOOL char;
						#define TURE 1;
						#define FALSE 0;

						static int cnt=0;

						struct point {
							int x;
							int y;
						};

						typedef struct { 
							int x;
							int y;
						} point2;

						typedef struct {
							int * id;
							char * name;    
						} person_;

						int main() {   	    
							
							pCheck();
							malloc_();
							
							//tests();
							return 0;
						}

						void tests(){
							hws();
							arrays();
							chars();
							staticCall();
							pntr();
							strcts_();
							adding();
						}
						void malloc_(){
							person_ * p = malloc(sizeof(person_));
							p->id=1;
							free(p);
						} 
							
						void pCheck(){
							person_ p;
							prCh(&p);
							printf("person %d :",p.name);
							p.name="pn";
							printf("person %d :",p.name);
							printf("\n");
							
						}
						void prCh(person_ * p_){
							p_->name="name1";
						}
						void move_(point2 * p){
							p->x++;
							p->y++;
						}

						void addP(point2 p){
							p.x++;
						}
						void addP_(point2 * p){
							(*p).x++;
						}
						void addX(int x){
							x++;
						}
						void addX_(int * x){
							(*x)++;
						}
						void adding(){
							int x=2;
							addX(x);
							printf("n before %d \n",x);
							addX_(&x);
							printf("n after %d \n",x);
							
							point2 p;
							p.x=6;
							p.y=7;
							
							addX(p.x);
							printf("p.x before %d \n",p.x);
							addX_(&p.x);
							printf("p.x after %d \n",p.x);
							
							addP(p);
							printf("p before %d \n",p.x);
							addP_(&p);
							printf("p after %d \n",p.x);
							
							printf("p before moove %d %d\n",p.x,p.y);
							move_(&p);
							printf("p after moove %d %d\n",p.x,p.y);
							
						}
						void strcts_(){
							struct point p;
							p.x=3;
							p.y=4;
							printf("val %d %d \n",p.x,p.y);
							
							point2 p2;
							p2.x=5;
							p2.y=5;
							printf("val %d %d \n",p2.x,p2.y);
							
						}
						void pntr(){
							int a=3;
							int * ptr=&a;
							*ptr+=1;
							printf("value a: %d \n",a);
							printf("pointer to a: %d \n",ptr);
							printf("pointer deref to a: %d \n",*ptr);
						}
						void staticCall(){
							   stcnt(3);
						}
						void stcnt(int i_){
							for(int i =0;i<i_;i++){
								cnt+=1;
							}
							printf("%d",cnt);
						}

						void hws(){
							  //hw
							printf("Hello, World!");
							
							//ints
							int foo;    
							int bar=1;
							int a=0,b=1,c=2,d=3;
							int z=a+b+c+d;    
							printf("%d",z);
							printf("\n");
							
						}
						void arrays(){
							 //arrays
							int number[3];
							number[0]=10;
							number[1]=20;
							number[2]=30;
							printf("%d",number[0]);
							printf("\n");
							
							int mtarr[1][2];
							mtarr[0][0]=11;
							printf("%d",mtarr);
							printf("\n");
							
							int arr2[3][4] = {  
						   {0, 1, 2, 3} ,   /*  initializers for row indexed by 0 */
						   {4, 5, 6, 7} ,   /*  initializers for row indexed by 1 */
						   {8, 9, 10, 11}   /*  initializers for row indexed by 2 */
							};
						}
						void chars(){
							
							char * name = "John Smith";
							char name2[] = "John Smith";
							int age=27;
							printf("%s name is age %d",name2,age);
							printf("\n");
							
							if(strncmp(name2,"John",4)==0){
								printf("John is OK");
								printf("\n");
							}else{
								printf("John is NOT OK");
								printf("\n");
							}
							
							char dest[20]="Hello";
							char src[20]="World";
							strncat(dest,src,3);
							printf("%s\n",dest);
							strncat(dest,src,20);
							printf("%s\n",dest);
							

						}
							
				
					]
					
			]
									
			FullStack[
				//ultimate full stack guide
				https://codeburst.io/the-ultimate-guide-to-learning-full-stack-web-development-in-6-months-for-30-72b3854a7458
				//Full-stack roadmap 2018
				https://codeburst.io/the-2018-web-developer-roadmap-826b1b806e8d
				//Full-stack guide 2018
				https://codeburst.io/the-ultimate-guide-to-learning-full-stack-web-development-in-6-months-for-30-72b3854a7458
			]
						
			JS[
				//Mozilla learn
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide
				//object initializer
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer
				//Mozilla spiderMonkey
				https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey
				//AirBnB styleguide
				http://airbnb.io/javascript/#functions--mutate-params

				NODEjs[
					https://nodejs.org/en/docs/guides/
				]
			
			]
						
			GIT[
				https://medium.freecodecamp.org/understanding-git-for-real-by-exploring-the-git-directory-1e079c15b807
				https://git-scm.com/book/en/v2
				
				git_branching_strategies[
				
				
					//practice guy, new MS tutorials for Azure high grade
					https://docs.microsoft.com/en-us/azure/devops/repos/git/git-branching-guidance?view=vsts
					//straight to the point , main veriations
					https://www.javacodegeeks.com/2015/11/git-branching-strategies.html
					//multydev consistency rare detailed concept,colorfull chart,  Vincent Driessen
					https://nvie.com/posts/a-successful-git-branching-model/
					//reupgrade of Vincent Driessen matreial
					https://jp-lambert.me/git-gitflow-and-continuous-integration-for-dummies-5e4300148fbf
					//constructive critics of  Vincent Driessen
					https://github.com/petervanderdoes/gitflow-avh/issues/287				
					//atlassian guide for CI
					https://www.atlassian.com/continuous-delivery/continuous-delivery-workflows-with-feature-branching-and-gitflow
				]
			
			]
			
			DB[
			
				SQL[
					//postgres Firststeps
					https://www.postgresql.org/docs/8.3/static/app-postgres.html
					
					adjacentTables[
						use [testdb]
						drop table GeographicalCategoryAdjancy
						drop table GeographicalCategory


						create table GeographicalCategory 
						(
						ID uniqueidentifier, 
						Name varchar(50),
						PRIMARY KEY (ID)

						)

						create table GeographicalCategoryAdjancy
						(
						ID uniqueidentifier,
						Depth int,
						ParentID uniqueidentifier,
						ChildID uniqueidentifier

						PRIMARY KEY (ID),
						FOREIGN KEY (ParentID) REFERENCES GeographicalCategory(ID),
						FOREIGN KEY (ChildID) REFERENCES GeographicalCategory(ID)
						)

						declare @idA uniqueidentifier;
						declare @idB uniqueidentifier;


						set @idA = newid();
						insert into GeographicalCategory values (@idA,'Nm1');
						set @idB = newid();
						insert into GeographicalCategory values (@idB,'Nm2');
						insert into GeographicalCategoryAdjancy values (newid(),0,null,@idA);
						insert into GeographicalCategoryAdjancy values (newid(),1,@idA,@idB);

						set @idB = newid();
						insert into GeographicalCategory values (@idB,'Nm3');
						insert into GeographicalCategoryAdjancy values (newid(),1,@idA,@idB);

						set @idA = newid();
						insert into GeographicalCategory values (@idA,'Nm4');
						insert into GeographicalCategoryAdjancy values (newid(),2,@idB,@idA);


						select @idA=ChildID  from GeographicalCategoryAdjancy where ParentID is null;
						set @idB = newid();
						insert into GeographicalCategory values (@idB,'Nm0');
						update GeographicalCategoryAdjancy set ParentID = @idB where ParentID is null;
						update GeographicalCategoryAdjancy set Depth = Depth+1 where Depth>=0;
						insert into GeographicalCategoryAdjancy values (newid(),0,null,@idB);


						--select top(1) @idA=ChildID from GeographicalCategoryAdjancy where Depth=2;
						--set @idB = newid();
						--insert into GeographicalCategory values (@idB,'Nm5');


						select * from GeographicalCategoryAdjancy order by Depth asc;
						select * from GeographicalCategory order by Name asc;


					]
					
					
					
				]
				
				NoSql[
				
					mongoDB[
						//mongodb
						https://www.codementor.io/pmbanugo/working-with-mongodb-in-net-1-basics-g4frivcvz
						https://docs.mongodb.com/ecosystem/drivers/csharp/
						https://www.codeproject.com/Articles/1223461/AOP-Method-and-property-interception-in-Csharp
						https://www.youtube.com/watch?v=PFQnNFe27kU
						https://www.youtube.com/watch?v=wgdBVIX9ifA			
						http://index-of.es/Varios/Sam%20Newman-Building%20Microservices-O%27Reilly%20Media%20(2015).pdf			
						https://thenewstack.io/led-amazon-microservices-architecture/
						//transactoins 
						https://docs.mongodb.com/manual/core/transactions/
						
						courses[
							
							//m001
							https://university.mongodb.com/mercury/M001/2018_September/chapter/Chapter_1_Introduction/lesson/594f8ee9e1c27e0eeecf6263/tab/594f8ef204a5d1ec8a58dcdf
							//m040
							https://university.mongodb.com/courses/M040/about
							//m201
							https://university.mongodb.com/courses/M201/about
							//m121
							https://university.mongodb.com/mercury/M121/2018_September/syllabus
							//m101 NET dev
							https://university.mongodb.com/courses/M101N/about
							//exam 
							https://university.mongodb.com/certification/developer/about
							//study guide 
							https://university.mongodb.com/exam/guide#crud
						
						]
						
						mongodbConcurency[
							Applications must ensure that only one thread at a time executes these operations in a client session.
							https://docs.mongodb.com/manual/core/causal-consistency-read-write-concerns/
							https://docs.mongodb.com/manual/faq/concurrency/
						]
					
					]
				
				]
			
			]
						
			Graphics[
				//recommendations
				https://www.jeremyong.com/c++/vulkan/graphics/rendering/2018/03/26/how-to-learn-vulkan.html
				//TIP to graphics pipeline
				https://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/
				
				//SDM
				https://docs.microsoft.com/en-us/windows/desktop/DxTechArts/common-techniques-to-improve-shadow-depth-maps
				
				booksSearch[
					https://www.amazon.com/Real-Time-Rendering-Fourth-Tomas-Akenine-Mo-ebook/dp/B07FSKB982/ref=mt_kindle?_encoding=UTF8&me=&qid=
					https://www.twirpx.com/file/1491248/
				]
				
				
				OpenGL[
					//tutorials
					http://ogldev.atspace.co.uk/index.html
				]
				
				Vulkan_API[
					//Source list 
					https://www.khronos.org/vulkan/
					//Quick refernce
					https://www.khronos.org/files/vulkan11-reference-guide.pdf
					//How to learn vulkan
					https://www.jeremyong.com/c++/vulkan/graphics/rendering/2018/03/26/how-to-learn-vulkan.html
					//sources
					https://github.com/KhronosGroup/Khronosdotorg/blob/master/api/vulkan/resources.md
					//tutorial
					https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Validation_layers
					//vulkan 30 minutes
					https://renderdoc.org/vulkan-in-30-minutes.html
					//intel 
					https://software.intel.com/en-us/articles/api-without-secrets-introduction-to-vulkan-preface
					//examples
					https://github.com/SaschaWillems/Vulkan
					https://github.com/LunarG/VulkanSamples
					//specification
					https://www.khronos.org/registry/vulkan/specs/1.1/pdf/vkspec.pdf
					//sample codes NVidia
					https://developer.nvidia.com/Vulkan
					
				]
			
			]
			
			wireshark[
				https://www.howtogeek.com/104278/how-to-use-wireshark-to-capture-filter-and-inspect-packets/
				https://wiki.wireshark.org/
			]
			
		]

		learningProgramms[
		
			//5mnths
			cpp[

				 Введение[
				Система сборки: build, test and deploy.
				Поиск распространяемых пакетов. Кастомный модуль для наших пакетов.
				Домашние задания: 1
				ДЗ
				Сборка и публикация пакета. Написать программу выводящую на консоль единственную строку

				Hello, World!

				Сформировать готовый для установки deb-пакет со скомпилированной программой и выложить его в репозиторий.
				Прислать ссылку на репозиторий в github и ссылку на репозиторий с
				пакетом.
				Будет здорово, но не обязательно
				Добавить версионность в пакет и сообщение.
				Запустить на этапе сборки тесты.
				Может пригодиться
				Выложить исходные тексты в репозиторий на github.
				Залогиниться на https://travis-ci.org/ и включить для своего репозитория
				автоматическую сборку.
				Залогиниться на https://bintray.com/ (For an Open Source Account и аккаунт
				github). Создать новый репозиторий - имя произвольное, тип Debian, Default
				Licenses любая. После создания отредактировать включив GPG sign.
				Создать в созданном репозитории новый пакет - имя произвольное,
				ссылка на контроль версии может быть указана как - (просто чтобы было
				заполнено).
				По ссылке https://bintray.com/profile/edit в пункте API Key скопировать
				ключ. В настройках репозитория в https://travis-ci.org создать переменную,
				например BINTRAY_API_KEY, и в качестве значения API Key. Это
				позволит не указывать явно ключ в исходниках.


				Пример на github:
				https://github.com/vvz-otus/hw02.cpp01_2
				Только ваш проект называться будет helloworld (а не cpp01_2:)
				Широкоиспользуемые фичи C++11 стандарта. auto. Замыкание - Лямбда-функции. Кортежи.
				Некоторые небольшие, на первый взгляд, нововведения настолько меняют язык, что диву даешься :)
				Широкоиспользуемые фичи C++11 стандарта. rvalue и lvalue ссылки. Move semantic. Variadic Templates. POD.
				5 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				ДЗ-02. C++14. 1.
				Выполнить задание описанное в 02.homework.pdf

				2.
				Зарегистрироваться в http://acm.timus.ru
				Решить первые пять простых задач:
				1001 1000 1785 1293 2012

				3. Опционально!
				Реализовать constexpr-функцию нахождения ближайшей большей степени двойки
				https://goo.gl/CBfjE9
				Рассмотрим полезные нововведения 14 стандарта.
				9 июля, 20:00 — 21:30
				Обзор C++17 - а чего же там эдакого? Часть 1.
				На дворе 21-й век, и как-то уже не модно заниматься разработкой на C++98 из прошлого века.
				Однако C++11 и даже C++14 также больше не являются финальной точкой развития. Пора приступать к изучению C++17!

				На этом занятии мы рассмотрим нововведения стандарта C++17. Даже не будем стараться охватить своим взором абсолютно все нововведения, но всё-таки посмотрим довольно много всего.

				Итак, по окончанию этого занятия слушатели получат представление о следующих фишках C++17.

				Сначала посмотрим в сторону шаблонов. Как попытались облегчить жизнь разработчиков обобщённого кода?
				1. Свёртка списка параметров теперь стала гораздо проще. Появился соответствующий синтаксис - отставить написание промежуточных функций или создания массивов.
				2. Теперь можно писать auto в параметры шаблона. Да, раньше было нельзя. Да, это действительно удобно. Покажем на примерах.
				3. Автоматический вывод параметров шаблонов сделает код короче и (есть надежда) понятнее. Однако, правила автоматического вывода понятными не стали. Посмотрим на реализацию deduction guide и ужаснёмся. А потом сделаем это самостоятельно.

				Не только шаблоны и стандартная библиотека были обновлены. Также изменения коснулись некоторых общих конструкций языка.
				1. Долой ifdef, даёшь constexpr if! Достаточно нескольких примеров, чтобы восхититься.
				2. inline переменные как попытка избежать проблем extern. Редкая проблема, посмотрим, поймём, забудем до востребования.
				3. Раньше было нельзя, а теперь можно - constexpr с лямбдами.
				4. Может, пригодится - инициализаторы внутри операторов if и switch.
				5. Порядок вычислений стал более упорядочен. Мелочь, а приятно. Теперь не всё UB, что таковым кажется.
				6. Вложенные пространства имён экономят бумагу (и табуляции).
				7. Старый добрый alignas теперь с новыми гарантиями.
				8. Structured bindings или что-то вроде std::tie, но не совсем.
				9. __has_include в помощь разработчикам библиотек.
				10. Атрибуты. Новые атрибуты. Не знали, что есть старые? Ничего - рассмотрим все.
				11. Надоело писать банальные сообщения об ошибках? Теперь можно не писать. Встречайте static_assert с одним аргументом.
				12 июля, 20:00 — 21:30
				Обзор C++17 - а чего же там эдакого? Часть 2.
				На дворе 21-й век... Но это Вы уже знаете и так.

				На этом занятии продолжим рассмотрение нововведений стандарта C++17. Впереди ещё много много интересного - не переключайтесь :).

				Над стандартной библиотекой трудятся лучшие умы сообщества. Поэтому и изменений довольно много.
				1. Посмотрим на std::filesystem. Что-то напоминает? Или нет? Для тех, кто раньше использовал boost - самое то.
				2. std::shared_ptr с массивами теперь работает также прекрасно, как и std::unique_ptr. Не поняли, о чём речь? Объясним в деталях.
				3. std::scoped_lock как альтернатива довольно неудобному std::lock. Достаточно одного простого примера, чтобы понять суть.
				4. std::optional - нечто, чего может и не быть.
				5. std::any - нечто, что может быть чем угодно.
				6. std::variant - нечто, что знает, чем оно является. И тоже что-то напоминает...
				7. std::string_view - классная штука или новая опасность?
				8. std::byte на замену uint8_t при работе с памятью. Семантика улучшена.
				9. std::invoke и std::is_invocable - ценителям шаблонов.
				10. Мало им было std::to_string и itoa, теперь есть ещё и std::to_chars и std::from_chars. Посмотрим, что изменилось. И почему вообще цифры буквами записать так сложно.
				11. std::as_const - тоже для любителей шаблонов. Постараемся придумать кейс использования.
				12. Уже оценили std::begin, std::end? Нет? Самое время! Встречайте - std::size, std::data и std::empty. Попробуем пообещать себе использовать.
				13. Логические метафункции - поймут только знатоки. Посмотрим, восхитимся и забудем. Довольно узкая тема.
				14. emplace_back теперь возвращает ссылку. Отставить emplace_back + back! Наконец-то.
				15. Searcher functors - для тех, кто знает, что такое алгоритм Бойера – Мура или алгоритм Бойера — Мура – Хорспула. Немного погрузимся, но совсем чуть-чуть.
				16. Даёшь больше математики! Не знаете, что такое Дзета-функция Римана? А стандарт C++17 знает. Чисто для информации - на занятиях использовать не будем.
				17. try_emplace и insert_or_assign в std::map - оценят только те, кто наступал на грабли. Покажем на примере.
				18. Хотите узнать, чем std::apply отличается от std::invoke? Приходите - поговорим об этом.
				19. Много проблем с std::initializer_list? Их решить призван метод std::make_from_tuple.
				20. Кто-нибудь пользовался std::not1 и std::not2? Теперь можно пользоваться ещё одной функцией - std::not_fn. Не пользовались? Попробуем на занятии.
				21. Пересадка элементов контейнеров гораздо проще пересадки органов - std::extract спешит на помощь! Заодно посмотрим на merge-метод.
				22. std::is_integral<T>::value - теперь можно короче: std::is_integral_v<T>. Шаблоны становятся чуть менее страшными.
				23. Параллельные алгоритмы теперь не только в параллельных вселенных. Больше не нужно изобретать велосипедов (хотя бы части).


				Есть также возможности языка, которые больше таковыми не являются. Кое-что было безжалостно выпилено из стандарта.
				1. Попрощаемся с триграфами (а кто-то узнает о том, что они были).
				2. Простимся с std::auto_ptr (надеюсь, никто и не пользовался).
				3. Незаслуженно забудем std::random_shuffle.
				4. Узнаем, что теперь нельзя делать перфиксный и постфиксный инкременты для типа bool (да, раньше можно было).
				5. Больше не будем использовать спецификацию исключений.
				16 июля, 20:00 — 21:30
				Вглубь реализации умных указателей.
				Подводные камни и оптимизации.
				19 июля, 20:00 — 21:30
				Идея аллокаторов.
				Стандартный аллокатор и его недостатки. Различные методы управлением памятью: достоинства и недостатки.
				23 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				ДЗ-03. allocator. 1. Выполнить задание описанное в 03.homework.pdf
				2. На acm.timus.ru выполнить 1409, 1877, 2001, 1264, 1787
				Что это и зачем? Как выглядит в C++: макросы и шаблонная магия. Примеры. Type traits в STL. SFINAE
				26 июля, 20:00 — 21:30


				]

				 Архитектура[
				Принципы проектирования ПО
				UML. Принципы: SoC, DRY, YAGNI, KISS, TDA, LoD, SOLID
				30 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				ДЗ-04.doxygen. 1. Выполнить задание описанное в 04.homework.pdf
				2. Решить первые 15 задач на acm.timus.ru (от простых к сложным)
				3. Предоставить РЕВЬЮ ДЗ-02 от двух коллег (которые его выполнили)
				4. Опционально: предоставить примеры, из своей практики, использования Принципов Проектирования
				GRASP. Часть 1
				Рассмотрим: Indirection, Low Coupling, Polymorphism, Protected Variations.

				Дополним всё это безобразие: Creator, Controller, Pure Fabrication, Information Expert, High Cohesion
				2 августа, 20:00 — 21:30
				Шаблоны GoF. Часть 1.
				Порождающие шаблоны проектирования.
				6 августа, 20:00 — 21:30
				Шаблоны GoF. Часть 2.
				Структурные шаблоны проектирования.
				9 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Решаем фрагмент прикладной задачи используя изученные подходы..
				Шаблоны GoF. Часть 3.
				Поведенческие шаблоны проектирования. 1 часть
				13 августа, 20:00 — 21:30
				Шаблоны GoF. Часть 4.
				Поведенческие шаблоны проектирования. 2 часть
				16 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Решаем фрагмент прикладной задачи используя изученные подходы..
				Антипаттерны
				Разберем антипаттерны программирования (кодирования), ООП, проектирования и антипаттерны в других областях
				20 августа, 20:00 — 21:30
				STL. Часть 1.
				Структуры данных STL
				23 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Реализуем алгоритм используя разные структуры. Оцениваем читаемость и эффективность..
				STL. Часть 2
				Алгоритмы
				27 августа, 20:00 — 21:30
				Boost. Часть 1
				Контейнеры
				30 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Создаем набор повседневных утилит..
				Boost. Часть 2
				Алгоритмы
				3 сентября, 20:00 — 21:30

				]

				 Параллельные вычисления[
				Многопоточность
				Потоки. Критические секции и методы синхронизации: мьютексы, семафор, условные переменные, барьеры. Пулы потоков.
				6 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Реализуем алгоритм максимально задействовав все имеющиеся ядра CPU..
				Шаблоны 5
				Concurrency pattern. Active Object, Balking, Barrier, Double-checked locking, Guarded suspension, Leaders/followers, Monitor Object, Reactor, Read write lock, Scheduler, Thread pool, Thread-local storage.
				10 сентября, 20:00 — 21:30
				Асинхронное программирование
				Архитектура асинхронных сервисов. Низкоуровневая поддержка асинхронного выполнения кода.
				13 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Читаем RSS нескольких сервисов..
				Lockfree DS
				Неблокирующие структуры данных и алгоритмы. BOOST Lockfree
				17 сентября, 20:00 — 21:30

				]

				 Сеть[
				Сетевое взаимодействие
				Сокеты. Протоколы: TCP и UDP. Сериализация. HTTP. Json. Zmq. Protobuf.
				20 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Клиент и сервер для реализации внешнего kv хранилища..
				Асинхронный ввод/вывод
				Библиотеки и практики работы с неблокирующей передачей данных
				24 сентября, 20:00 — 21:30

				]

				 Хранилища[
				РСУБД
				Использование РСУБД. Подключение и работа с БД
				27 сентября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Высокоуровневый клиент для работы с pg.
				Key Value
				Идея NoSQL. Aerospike, redis, leveldb
				1 октября, 20:00 — 21:30
				Много данных
				Map reduce
				4 октября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				На реальном примере выявить навигационные запросы..
				ORM
				ООП при работе с базами данных. Паттерны DAO и Repository
				8 октября, 20:00 — 21:30

				]

				 ML[
				Dlib. Часть 1.
				Кластеризация, тематическое моделирование.
				11 октября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Разбить заголовки прочитанных rss на группы.
				Dlib. Часть 2.
				Регрессия
				15 октября, 20:00 — 21:30
				Dlib. Часть 3.
				Классификация
				18 октября, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				На реальном примере выявить поведение характерное для ботов..


				]

			]
			
			certificates[
				https://sps.northwestern.edu/advanced-graduate-certificate/
			]		
			
			algorithms[
				https://www.coursera.org/specializations/data-structures-algorithms
			]
							
			MachineLearning[
			 
				 Введение в нейронные сети и глубокое обучение[
				В первом модуле участники познакомятся с нейронными сетями и задачами которые можно решить с их помощью, а так же воспользуются фреймворком pyTorch для создания первой нейронной модели.
				Искусственный интеллект и другие задачи которые можно решать с помощью нейронных сетей
				Участники узнают что такое искусственные нейроны для того, чтобы понимать из чего состоят искусственные нейронные сети
				Смогут определять какие задачи можно решить с помощью нейронных сетей для того, чтобы формализовать абстрактные задачи от заказчика
				Научатся пользоваться и искать необходимые функции в библиотеке pyTorch для того чтобы иметь возможность реализовывать нейронные сети.
				Домашние задания: 1
				ДЗ
				Введение в PyTorch. 1. Используя скрипт salt.py посчитать хэш от своего имени. Суть задания подтвердить запуск докера.
				2. Сделать свой transform, переводящий данные в распределение N(0, 1) и выложить код в Slack. Проверить код 3х коллег и отписаться в ветку к выложенному коду.
				Теоретические основы обучения нейронных сетей
				Участники вспомнят(узнают) необходимую теорию для того чтобы успешно пройти данный курс
				Узнают как реализовать свою первую модель машинного обучения для того чтобы уметь решать задачу классификации
				Домашние задания: 1
				ДЗ
				Логистическая регрессия на pyTorch. В файле log_reg.ipynb изменить код таким образом, чтобы решить ту же самую задачу, а именно обучить логистическую регрессию, на двумерных данных
				Погружение в pyTorch
				Участники узнают о том как происходит обучение нейронных сетей в pyTorch для того чтобы реализовывать глубокие нейронные сети
				Познакомятся с фреймворком pyTorch для того чтобы искать необходимые классы и методы
				4 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Классификация рукописных цифр 1. 1. Дополнить код однослойной полносвязной сети для классификации рукописных цифр
				2. Изменить архитектуру классификатора добавив дополнительные слои
				Переобучение и регуляризация нейронных сетей
				Участники узнают что такое переобучение и как с ним бороться для повышения эффективности своих моделей
				7 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Переобучение 1. Добиться от классифкатора рукописных цифр переобучения за счет изменения архитектуры и гиперпараметров.
				Взрыв и затухание градиентов
				Участники научатся бороться с проблемой взрыва/затухания градиентов для того чтобы обучать глубокие нейронные сети
				11 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Нормировка 1. Реализовать инициализацию весов сети классификатора методами Хе/Ксавьера и сравнить эффективность с инициализацией по-умолчанию

				]

				 Основные архитектуры и методы обучения нейронных сетей.[
				Участники поработают с базовыми архитектурами нейронных сетей, и научатся решать типичные задачи анализа данных.
				Основные архитектуры нейронных сетей: Автокодировщики
				Участники узнают какие задачи можно решать с помощью автокодировщиков и смогут их создавать для решения этих задач
				14 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Автокодировщик. Дополнить код автокодировщика
				Основные архитектуры нейронных сетей: Сверточные сети
				Участники смогут создавать сверточные нейронные сети для решения задач компьютерного зрения
				Применять операцию обратную свертке для реализации сверточных автокодировщиков
				18 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Сверточный классификатор. 1. Реализовать многослойный сверточный классификатор рукописных цифр
				2. Оптимизировать гиперпараметры модели
				Основные архитектуры нейронных сетей: Рекуррентные сети
				Участники смогут создавать рекуррентные сети для решения задач обработки последовательностей и естественных языков
				21 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Создаем Википедию. Дополнить код модели посимвольной генерации
				Адаптивные методы градиентного спуска
				Участники научатся применять продвинутые методы градиентного спуска для ускорения обучения нейронных сетей
				25 июля, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Адаптивные методы градиентного спуска. Сравнить SGD, RMSProp и ADAM для задачи классификации изображений одежды.
				Нарисовать графики ошибки для 3 методов на тренировочном и тестовом множестве с дисперсией для разных запусков.
				Ошибки в реализации нейронных сетей
				Участники научатся применять методы идентификации ошибок в реализации нейронных сетей для успешного применение нейросетей.
				28 июля, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Переобучение 2. Добиться переобучения сверточной сети для задачи классификации изображений одежды с учетом новых методов обучения

				]

				 Современные архитектуры нейронных сетей[
				В этом модуле мы разберем и реализуем ключевые архитектуры нейронных сетей для решения типичных задач компьютерного зрения, обработки естественных языков, анализа графов и т.д. А так же подробно рассмотрим общие концепции используемые при проектировании и обучении современных архитектур.
				Обзор: Inception и ResNet
				Участники gознакомятся с одной из самых популярных глубоких архитектур компьюетрного зрения и узнают за счет чего можно обучать очень глубокие нейронный сети
				1 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Блоки из нейросетей. Реализовать блоки аналогичные Inception и skip-connections для задачи классификации изображений или текстов
				Глубокие рекуррентные сети
				Участники расширят свои знания в области рекуррентных нейронных сетей и научатся применять общие концепции используемые в глубоких нейронных сетях для повышения эффектиности моделей
				4 августа, 10:00 — 11:30
				Metric-learning и обучение без примеров
				Участники познакомятся с идеей выучивания метрик для решения задач ранжирования и поиска, а так же узнают как использовать данный подход в условиях недостаточной обучающей выборки
				8 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				Сиамские сети. Реализовать модель DSSM для поиска цифр с google street view по запросам в виде рукописных цифр
				Обзор: внимание, множества и сегментация
				Участники научатся работать с множествами при обучении нейронных сетей, узнают об общей концепции внимания и смогут решать задачу сегментации.
				11 августа, 10:00 — 11:30
				Нейронные сети для работы с графами
				Участники научатся использовать графовые типы данных для решения задач анализа на графах
				15 августа, 20:00 — 21:30


				]

				 Состязательные нейронные сети[
				В завершении курса мы разберем один из найболее мощных современных фреймворков обучения нейронных сетей и примеры его использования.
				Введение в теорию информации
				Участники познакомятся с базовыми элементами теории информации для успешного прохождения этого модуля и улучшения понимания современных архитектур нейронных сетей
				18 августа, 10:00 — 11:30
				Генеративные Состязательные Сети
				Участники познакомятся с фреймворком состязательных сетей на примере задачи порождения примеров аналогичных тренировочному множеству.
				22 августа, 20:00 — 21:30
				Домашние задания: 1
				ДЗ
				GANs. Реализовать модель генерации рукописных цифр
				Состязательный Автокодировщик и условная генерация
				Участники познакомятся с новыми техниками применения состязательного фреймворка для повышения эффективности решения задач порождения данных
				25 августа, 10:00 — 11:30
				Домашние задания: 1
				ДЗ
				Условная генерация. Реализовать генерацию рукописных цифр заданного класса
				Domain Adaptation
				Участники познакомятся с мощным подходом решения одинаковых задач на разных датасетах, для повышения точности решения в случае недостаточности данных
				29 августа, 10:00 — 11:30
				Домашние задания: 1
				Обзор: Fader Network и CAAE
				Участники познакомятся с наиболее актуальными состязательными моделями и техниками
				1 сентября, 10:00 — 11:30

				]

			]
			
		]

		katas[
			http://rubyquiz.com/
			http://www.4clojure.com/
			https://www.topcoder.com/ 
			http://leetcode.com/
			https://www.hackerrank.com/
			https://projecteuler.net/
			https://www.codewars.com/
			http://codekata.com/
			https://code.google.com/codejam/
		]
		
		sources[
		
			//IBM Patterns
			https://developer.ibm.com/code/patterns/
			
			//SMTP
			https://stackoverflow.com/questions/11457722/creating-an-smtp-server-c-sharp
			
			//Interceptor pattern
			https://www.codeproject.com/Articles/1223461/AOP-Method-and-property-interception-in-Csharp
			
			//DI Automapper with autofac
			https://www.paraesthesia.com/archive/2014/03/25/automapper-autofac-web-api-and-per-request-dependency-lifetime-scopes.aspx/
			https://lostechies.com/jimmybogard/2009/05/12/automapper-and-ioc/					
			
		]
				
		Examples[
			
			//dashbord web sockets
			https://knowledge.safe.com/articles/1112/live-spatial-dashboard.html
			//HTML5 plupload
			http://www.plupload.com/
			//web api
			https://www.sitepoint.com/10-html5-apis-worth-looking/			
			//10 rich text editors
			https://www.sitepoint.com/10-best-html-wysiwyg-plugins/
			//10 modules
			http://www.discoversdk.com/blog/10-angular-2-modules-and-tools-you-need-to-learn-in-2017
			//3d 
			https://www.3ds.com/ru/
		]				
		
		//Decompose to Products,Companies,Tools
		CompaniesOrgsProductsAndTools[
			
			//Business examples
			https://cssgradient.io/blog/css-gradient-examples/
		
			//learning API
			https://www.scaleapi.com/self-driving-cars
			
			//NodeCoppter
			http://www.nodecopter.com/	

			//Istio
			https://istio.io/			
			
			//roadmap institute
			https://www.roadmapinstitute.org/
			
			//NordicSemiconductors
			https://www.nordicsemi.com/eng
			
			http://www.appliedrobotics.com/
			https://www.sita.aero/innovation			
						
			//mremoteNc manual
			https://github.com/mRemoteNG/mRemoteNG/wiki/User-Manual
			//db viewver
			https://www.heidisql.com/
			
			DI_containers[
				autofac
				https://autofac.org/
			]
			
			moq_containers[
				fakeiteasy
				https://fakeiteasy.readthedocs.io/en/stable/creating-fakes/
			]
			
			mapping[
				//automapper
				http://docs.automapper.org/en/stable/Getting-started.html
				//EmitMapper
				https://github.com/MetSystem/EmitMapper
			]
			
			validation[			
				fluentvalidation
				https://fluentvalidation.net/
			]
			
			static_analysis[
				stylecop
				https://blog.submain.com/stylecop-detailed-guide/
				//codacy
				https://app.codacy.com
			]
			
			docsoft[
				//doxygen
				http://www.stack.nl/~dimitri/doxygen/download.html
				//list of tools 10
				http://blog.liveedu.tv/code-documentation-tools/
				//list of tools 18
				https://www.process.st/software-documentation/
				
				https://swagger.io/
						
			]
			
			simsoftware[
				https://www.solidworks.com/products-and-solutions
				https://www.solidworks.com/category/electrical-design
				
				https://www.ansys.com/products
				http://www.mscsoftware.com/products
				http://simulation-solutions.com/index.html
				https://www.cm-labs.com/simulation-products/				
			]
			
			CADs[
				https://www.polyga.com/
			]
			
			CI_CD[
				https://circleci.com/product/
			]
			
			clouds[
				https://www.noction.com/
			]
			
			msa_containers[
				//container orchestration framework
				https://kubernetes.io/
				//alernate 
				Kubernetes,Mesos,Docker Swarm,Nomad,Mesosphere DC/OS
			]
			serviceBus[
				https://buoyant.io
				//sidecar
				https://linkerd.io/
			]
			service_mesh[
				https://istio.io/
			]
			
			
		]	
		
		comunities[
			
			openSource[
				https://up-for-grabs.net/#/
				https://openhatch.org/
			]
			
		]

		RevisionControl[
			//Mercurial 
			https://www.mercurial-scm.org/wiki/QuickStart
		]
		
		read[
			
			//books share
			https://www.twirpx.com/search/
			bikesell_2@mail.ru
			q2w3e4


			Books[
				
				//Building Microservices				
				https://www.quora.com/What-are-the-best-sources-to-learn-on-microservices
				//sam newmann building microservices designing fine-grained systems pdf
				http://index-of.es/Varios/Sam%20Newman-Building%20Microservices-O%27Reilly%20Media%20(2015).pdf
				
				//enterprise architecture
				https://sparxsystems.com.au/resources/user-guides/guidebooks/enterprise-architecture.pdf
				
				//CLR via sharp
				http://sd.blackball.lv/library/CLR_via_CSharp_(Jeffrey_Richter_4th_Edition).pdf
				//algorithms
				https://mcdtu.files.wordpress.com/2017/03/introduction-to-algorithms-3rd-edition-sep-2010.pdf
				//code complette
				https://khmerbamboo.files.wordpress.com/2014/09/code-complete-2nd-edition-v413hav.pdf
				//reverse engeneering .net apps
				http://epublications.uef.fi/pub/urn_nbn_fi_uef-20131001/urn_nbn_fi_uef-20131001.pdf
				
				//The Art of Unit Testing: with Examples in .NET
				https://www.amazon.com/dp/1933988274/?tag=stackoverfl08-20
				//pragmatic programmer
				https://pragprog.com/book/tpp/the-pragmatic-programmer
				//appreticeship patterns
				http://shop.oreilly.com/product/9780596518387.do
				//passionate programmer
				https://pragprog.com/book/cfcar2/the-passionate-programmer
				//reverse engeneering
				https://www.foo.be/cours/dess-20122013/b/Eldad_Eilam-Reversing__Secrets_of_Reverse_Engineering-Wiley(2005).pdf
				
				//But How Do It Know
				http://www.buthowdoitknow.com/
				//microarhitecture overall
				http://www.iro.umontreal.ca/~aboulham/F1214/Unit_2modif.pdf
				//A Minimal TTL Processor for Architecture Exploration
				http://www.bradrodriguez.com/papers/piscedu2.htm
				
				//Computer Structures:Readings and  Examples 
				http://gordonbell.azurewebsites.net/cgb%20files/computer%20structures%20readings%20and%20examples%201971.pdf
				//Bell-ComputerEngineering
				http://www.bitsavers.org/pdf/dec/_Books/Bell-ComputerEngineering.pdf
				//Digital Logic and Microprocessor Design With VHDL
				https://theswissbay.ch/pdf/Gentoomen%20Library/Digital%20Design/Digital%20Logic%20%26%20Microprocessor%20Design%20With%20VHDL%20-%20Hwang.pdf
				
				//processor design
				http://www.gamezero.com/team-0/articles/math_magic/micro/index.html
				//microarchitecture overall
				https://web.njit.edu/~rlopes/Mod4.3.pdf
				
				//Computer Architecture: A Quantitative Approach by John L. Hennessy (Author), David A. Patterson (Author) 
				https://doc.lagout.org/Computer%20Architechture.pdf
				//the architecture of computer hardware,systems software and networking irv englander
				http://disi.unal.edu.co/dacursci/sistemasycomputacion/docs/SWEBOK/The%20Architecture%20Of%20Computer%20Hardware,%20Systems%20Software,%20&%20Networking%20An%20Information%20Technology%20Approach%204Th%20Ed%20-%20I%20Englander%20(Wiley,%202009)%20Bbs.pdf
				//DRAFT 1997 Parallel Computer Architecture: A Hardware/Software Approach by David Culler (Author), Jaswinder Pal Singh (Author), Anoop Gupta Ph.D. (Author) 
				http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.101.4418&rep=rep1&type=pdf
				//microelectornic circuits 
				http://prof.usb.ve/mirodriguez/electronico/0495667722MicroelecCircuits.pdf
				//Computer Organization and Architecture (8th Edition) 8th Edition by William Stallings (Author)
				https://inspirit.net.in/books/academic/Computer%20Organisation%20and%20Architecture%208e%20by%20William%20Stallings.pdf							
				
				//the art of testing
				http://barbie.uta.edu/~mehra/Book1_The%20Art%20of%20Software%20Testing.pdf
				
				find[
					
					//the art of scalability 
					http://theartofscalability.com/
					
					//Computer Organization and Design ARM Edition: The Hardware Software Interface (The Morgan Kaufmann Series in Computer Architecture and Design) 1st Edition by David A. Patterson (Author), John L. Hennessy (Author)
					https://www.amazon.com/Computer-Organization-Design-ARM-Architecture/dp/0128017333/ref=pd_bxgy_14_img_2?_encoding=UTF8&pd_rd_i=0128017333&pd_rd_r=5J0QAGC16AG0PRGTYQFA&pd_rd_w=5uEsO&pd_rd_wg=4inIc&psc=1&refRID=5J0QAGC16AG0PRGTYQFA

					//Modern Processor Design: Fundamentals of Superscalar Processors Paperback – July 30, 2013
					https://www.amazon.com/Modern-Processor-Design-Fundamentals-Superscalar/dp/1478607831/ref=pd_sim_14_2?_encoding=UTF8&pd_rd_i=1478607831&pd_rd_r=YA8D8S3J61RB7JZM3KPK&pd_rd_w=9I2xq&pd_rd_wg=nr7JU&psc=1&refRID=YA8D8S3J61RB7JZM3KPK
					
					//CPU architecture
					https://www.amazon.com/gp/product/0615303765									
					
					//VHDL
					https://www.amazon.com/Effective-Coding-VHDL-Principles-Practice/dp/0262034220
					
					//signal and systems
					https://www.amazon.com/Signals-Systems-2nd-Alan-Oppenheim/dp/0138147574/ref=pd_bxgy_14_img_2?_encoding=UTF8&pd_rd_i=0138147574&pd_rd_r=2F70B0ANAGS4PNHPJA2H&pd_rd_w=yYttJ&pd_rd_wg=hmW8t&psc=1&refRID=2F70B0ANAGS4PNHPJA2H
					
					
					//Microelectronics Circuit Analysis and Design 4th Edition by Donald A Neamen (Author)
					https://www.amazon.com/Microelectronics-Circuit-Analysis-Design-Donald/dp/0073380644
					
				]
			
			]
			
			guides[
				
				//overall low level recommendation
				ftp://ftp.wayne.edu/ldp/en/IO-Port-Programming/IO-Port-Programming.html#toc3
				//Linux kernel hacker guide
				http://www.oldlinux.org/Linux.old/docs/khg/khg-0.6.pdf
				//c++ hack guide
				https://tfetimes.com/wp-content/uploads/2015/04/hack.pdf
				//linux kernel
				https://www.tldp.org/LDP/tlk/tlk.html
				
				
			]
			
			articles[
			
				//Nahalem arhitecture
				https://www.researchgate.net/publication/235960679_The_Architecture_of_the_Nehalem_Processor_and_Nehalem-EP_SMP_Platforms
			
			]
		
		]
		
		blogs[
		
			https://medium.com/reverdev/why-we-moved-from-angular-2-to-vue-js-and-why-we-didnt-choose-react-ef807d9f4163
			https://medium.com/javascript-scene/the-shocking-secret-about-static-types-514d39bf30a3
			https://blog.angularindepth.com/the-new-angular-httpclient-api-9e5c85fe3361
			https://toddmotto.com/classes-vs-interfaces-in-typescript
			https://codecraft.tv/courses/angular/http/http-with-observables/
			https://medium.com/meduza-how-it-works/%D1%85%D0%BE%D1%87%D1%83-%D1%81%D0%B2%D0%BE%D0%B9-vpn-%D0%B7%D0%B0-5-%D0%BC%D0%B8%D0%BD%D1%83%D1%82-%D1%87%D1%82%D0%BE-%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C-5581e536650a
			https://medium.com/meduza-how-it-works/ddos-ab63424e595e
			https://hackernoon.com/
			https://www.ryanatkinson.io/
			https://rob.conery.io/
			https://lostechies.com/		
			//earlyCareer
			https://8thlight.com/blog/colin-jones/2017/10/24/advice-for-early-career-developers.html
			//martin fowler
			https://martinfowler.com/
		]						   
		
		journals[
			
			//IT
			https://www.theregister.co.uk/
			https://www.nextplatform.com/
			https://www.anandtech.com/
			
			//FIN
			https://www.marketwatch.com/
			
		]
		
		jobHiring[
		
			HackerRank, TopCoders, CodeChef
			https://www.honeypot.io/
			
			cs[
				message_btokers[
					EMS, MSMQ, RabbitMQ, ActiveMQ
				]
			]
			
			cpp[
				
				machinelearning[
					Machine Learning, Deep Learning, Data Mining, Deep Reinforcement Learning
				]
				
				utilits[
					WinDBG, Sysinternals, WPP, xperf, API Monitor, IDA Pro
				]
			
				security[
					Win32/NT API, x64, IPC, службы, инжект, перехват функций, недокументированные возможности
				]
			]
			
		]
		
		craft[
			
			woodworks[
				
				workshops[
				
					http://ooley.ru/map/delaivesch/
				
					https://delaivesch.ru/
									
					http://www.kalpa-vriksa.ru/workshop/coworking/
					http://rubankov.ru/workshop/coworking-msk/
					https://kedrosadmaster.ru/stolarniy_coworking
					https://remesla.vdnh.ru/residents/stolyarnaya-masterskaya-sm-47/
				]
				
				materials[
					https://moscow.petrovich.ru/search/e9e4a8b3-e397-11e6-95f7-00259036a192?q=%D0%B4%D0%BE%D1%81%D0%BA%D0%B0&razmer_poperechnogo_secheniya=40h95
				
					https://www.isolux.ru/brus-obreznoy-6000x100kh100-mm.html?description
					https://www.isolux.ru/stroymateriali/pilomateriali.html
				]
				
				equipment[
					rent[
						торцовочная пила
						http://instrumentov-arenda.ru/torcovochnaya-pila-makita-ls-1040
						фрезер
						http://instrumentov-arenda.ru/prokat_frezera
						
						фрезер
						http://www.mosprokat.com/product/kromochnyy-frezer-MAKITA-RT0700CX2/
						
						пила 
						http://prokat.msk.ru/arenda-oborudovaniya/torcovochnye-pily/torcovochnaya-pila-makita-ls-1440-/
						
					]
				]
											
				books[
					
					//find 
					The Essential Woodworker By Robert Wearing
					https://lostartpress.com/collections/books/products/the-essential-woodworker
					
					The Anarchist's Tool Chest By Christopher Schwarz		
					https://lostartpress.com/collections/books/products/the-anarchists-tool-chest
					
					https://www.popularwoodworking.com/wp-content/uploads/2011/02/ICDTBookHiResJune10.pdf				
					http://wood.woodtools.nov.ru/books/jjn_big_book_weekend/jjn_big_book_weekend.pdf
					http://wood.woodtools.nov.ru/books/6500_wood_proj/6500_wood_proj.pdf
					https://www.popularwoodworking.com/wp-content/uploads/2011/02/ICDTBookHiResJune10.pdf
				]
				
				learningProgramms[
					//wood,hand
					https://kedrosadmaster.ru/frezer_obuchenie
					//wood,overall
					http://dartruda.ru/edu
				]
				
				guides[
					https://blog.udemy.com/types-of-wood-joints/
					https://www.behance.net/gallery/24920333/Custom-Interlocking-Bed-Frame
					https://spunjinworks.com/2014/08/15/tatami-style-platform-bed/
					https://www.thewoodwhisperer.com/videos/platform-bed-pt-1-the-footboard/
					https://spunjinworks.com/2014/08/15/tatami-style-platform-bed/
					https://www.youtube.com/watch?v=ZVDGqMSmPMw
					https://5domov.ru/stroitelstvo/soedineniya-derevyannyih-detaley-11-vidov-soedineniy-dereva.html#10
				]
				
				joints[
					//types
					https://www.wwgoa.com/article/woodworking-joints-which-ones-should-you-use/
					//test 8:21
					https://www.youtube.com/watch?v=6cAUz_eCmbw
				]
				
				examples[
				
				//стол для торцовочной пилы
				https://www.youtube.com/watch?v=KtsoQrz74ZM
				https://teremizbrusa.ru/instrument/kak-sdelat-stol-dlya-tsirkulyarnoy-pilyi.html
				
				//клетка
				https://pikabu.ru/story/samodelnaya_vitrina_dlya_shinshillyi_5107553
				
				http://www.homedecorexpert.com/rabbet-joints-cut-tools-use.html
				http://sdelajrukami.ru/wp-content/uploads/2017/06/Stul-svoimi-rukami-15.jpg
				http://sdelajrukami.ru/wp-content/uploads/2017/06/Stul-svoimi-rukami-18.jpg
				http://www.ana-white.com/2010/04/plans-the-angle-chair-modern-simplicity-is-suprisingly-comfortable.html
				
					https://www.youtube.com/watch?v=5HWxG6z4WPw
					https://www.youtube.com/watch?v=iYprNM3Kr0k
					https://www.youtube.com/watch?v=LFypehZYSUw
					https://www.youtube.com/watch?v=oZrGjBUwUpw
					https://www.youtube.com/watch?v=gV4HSnCYVmg
					https://www.youtube.com/watch?v=I822PC9kW7Y
					https://www.youtube.com/watch?v=MYIk2aXM4BE
					
				]
								
			]
			
			electro[
				//block
				https://www.youtube.com/watch?v=F3_OeVjKHr0
				
				overclock[
					https://www.makeuseof.com/tag/cpu-overclocking/
				]
			]
			
		]
		
		equipment[
			
			config[
				
				//config
				http://www.pc-specs.com/
				https://www.cpubenchmark.net/cpu.php?cpu=Intel+Xeon+X5670+%40+2.93GHz&id=1307
				https://www.regard.ru/
				
				082108[
					
					31070
					8330 Intel Core i5 - 7600 OEM				
					7500 ASUS PRIME B360-PLUS Socket 1151 v2, Intel B360, 4xDDR-4, 7.1CH, 1000 Мбит/с, USB3.1, D-Sub, DVI, HDMI, ATX, Retail					
					15240 GeForce GTX1050 Ti ASUS ROG PCI-E 4096Mb (STRIX-GTX1050TI-O4G-GAMING)PCI-E 3.0, ядро - 1379 МГц, Boost - 1506 МГц, память - 4 Гб GDDR5 7008 МГц, 128 бит, 2xDVI, HDMI, DisplayPort, Retail
					
					104320
					28190 Intel Core i7 - 7800X OEM Socket 2066, 6-ядерный, 3500 МГц, Turbo: 4000 МГц, Skylake-X, Кэш L2 - 6 Мб, Кэш L3 - 8.25 Мб, 14 нм, 140 Вт			
					30180 ASUS PRIME X299-DELUXE Socket 2066, Intel X299, 8xDDR-4, 7.1CH, 2x1000 Мбит/с, Wi-Fi, Bluetooth, USB3.1, USB 3.1 Type-C, ATX, Retail
					45500 GeForce GTX1080 ASUS ROG PCI-E 8192Mb (STRIX-GTX1080-A8G-GAMING) PCI-E 3.0, ядро - 1670 МГц, Boost - 1835 МГц, память - 8 Гб GDDR5X 10010 МГц, 256 бит, DVI, 2xHDMI, 2xDisplayPort, Retail
					
					upgrade 
					7400 Процессор Intel Xeon X5660 (perf 1.2) Gulftown (2800MHz, LGA1366, L3 12288Kb)
					8650 Intel Xeon E5645 Gulftown (2400MHz, LGA1366, L3 12288Kb)
					11380 Видеокарта ASUS GeForce GTX 1050 Ti 1290MHz PCI-E 3.0 4096MB 7008MHz 128 bit DVI HDMI HDCP Phoenix Видеокарта ASUS GeForce GTX 1050 Ti 1290MHz PCI-E 3.0 4096MB 7008MHz 128 bit DVI HDMI HDCP Phoenix
					
					best CPU/Price
					Intel Xeon 15000 rub X5670 (perf 1.346),E5450 (1.26),E5520 (1.02)
					
					real
					 
					8616 Intel Xeon E5645 Gulftown (2400MHz, LGA1366, L3 12288Kb)
					11380 Видеокарта ASUS GeForce GTX 1050 Ti 1290MHz PCI-E 3.0 4096MB 7008MHz 128 bit DVI HDMI HDCP Phoenix Видеокарта ASUS GeForce GTX 1050 Ti 1290MHz PCI-E 3.0 4096MB 7008MHz 128 bit DVI HDMI HDCP Phoenix
					https://ht-comp.ru/?filter_page_count=90&filter_show_image=1&action=show_price&catalog_mode=tree&class=2540
				
				]
			]
			
			rent[
				https://arenda.vseinstrumenti.ru/
			]
			
			laptops[
				
				ROG G703JI[
					
				]
				
				ROG G750JH[
					https://videocardz.net/gpu/nvidia-gk104/
					NVIDIA® GeForce® GTX 780M 
					4GB GDDR5 VRAM
					GPU N14E-GTX
					CLOCK 771 / 1250 MHz
					https://www.ebay.com/itm/100-New-Nvidia-N14E-GTX-A2-BGA-IC-Chipset-with-Balls/272201949534?epid=1273658262&hash=item3f6080215e%3Ag%3AXDcAAOSwtUtXBHcw&_sacat=0&_nkw=N14E-GTX&_from=R40&rt=nc&LH_TitleDesc=0
					
					//upgrade recs
					https://rog.asus.com/forum/showthread.php?60563-ask-about-asus-rog-G750JW-upgrade-VGA-to-nvidia-GTX-780m-or-880m
					//disassembly
					https://www.youtube.com/watch?v=b8wSpwAR-5Y
				]
			
			]
			
			reapares_electro[
				
				[
					ранее: под нагрузкой (Skyrim, Fallout 4) появлялись артефакты, разноцветные квадраты 10мм.
					иногда зависал, иногда закрывал приложение вылетал на раб стол, артефакты исчезали.
					в зависимости от настроек и включенном/отключенном проводе питания менялся период 15-45 мин.
					иногда отрабатывал 2 часа без перебоев
					
					эксплуатировался 3-4 дня 
					
					теперь: артефакты - продольные фиолетовые полосы при загрузочном окне
					зеленые полосы на раб столе 					
					не запускается с откюченной зарядкой, без зарядки выключается.
										
				]
				
				//repair req			
				http://www.911nb.ru/?mail=1				
				http://asusremservice.ru/
				
				//looks like mdm
				http://msk-asus.com/catalog/noutbuki/
				//mdm service,
				http://center-asus.com/				
				//sms adress
				http://rsm-remont.ru/notebook/asus/asus-rog-g750jh				
				
				//call free diag
				http://screspect.ru/
				https://computer-master.org/noutbuki/remont-noutbukov/problemy-s-noutbukom/
				
				//отстой
				http://x-repair.ru/%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%D1%8B/
				
				ASUS services[
				
					//запрос
					C1-TECHNOLOGY
					г. Москва Холодильный пер., д. 3, к. 1, оф. 2212 -2 этаж. (3.6km)
					(495) 955-29-39, 781-81-56
					
					//сайт не отв
					ASUS24 - фирменный сервисный центр
					г. Москва, Нижегородская ул., д. № 29-33, стр.2 (4.1km)
					(495) 669-74-92
					
					//запрос
					911NB.RU
					г. Москва ул. Марксистская, д. 10, стр. 1 (4.6km)
					(495) 911-18-91, 911-10-85, 201-54-61
					Пн.-Пт. 09:00-20:00, Сб. 10:00-14:00
					
					//бесплатн диаг
					Сервисный центр Респект
					г. Москва ул. Волгоградский проспект, д. 111 (4.9km)
					(495) 276-12-10, 276-12-20
					Пн.-Пт. 10:00-20:00, Сб. 11:00-18:00
					
					//диаг 1,5К
					ASUS Премиум сервис ASK-Service
					г. Москва ул. Орджоникидзе, д. 10 (5.6km)
					(495) 640-32-75
					Пн.-Пт. 10:00-19:00, Сб. 10-16, Вс. выходной.

					//нет ноутов
					ТРАНССЕРВИС-95
					г. Москва 1-й Варшавский проезд, д.1а стр. 3 (6.6km)
					(495) 744-01-10
					Пн.-Пт. 10:00-18:00, Сб. 11:00-16:00

					//платная диаг
					Сервисный центр Топаз
					г. Москва ул. Кузнецкий мост, д. 21/5, 4 подъезд, оф.1 (7.7km)
					(495) 626-07-75, 626-06-58
					Пн.-Пт. 10:00-19:00
					
					//плат диаг
					CEPCO
					г. Москва Колодезный переулок, д. 3 стр. 25 (10.7km)
					(495) 967-38-72, 926-83-13
					Пн.-Пт. 11:00-20:00, Сб. 11:00-16:00
										
					//site fuckup
					CPS-Technical centre
					г. Москва Шелепихинская наб., д. 18 (11.9km)
					(499) 553-07-27
					Пн.-Сб. 10:00-19:00

					//no site
					ASM-Technical Center
					г. Красногорск, ул 50 Лет Октября д4 (26.6km)
					(495) 150-20-05
					Пн.-Вс. 10:00-20:00
				]
			
			]
			
			cloth[
				
				guides[
					//membrane desctiption
					http://wiki.risk.ru/index.php/%D0%9A%D1%83%D1%80%D1%82%D0%BA%D0%B0_%D1%88%D1%82%D0%BE%D1%80%D0%BC%D0%BE%D0%B2%D0%B0%D1%8F
				]
				buy[
				
					//up
					https://o3o.ru/shop/kurtka-rush/
					
					//T-shorts
					https://www.kant.ru/catalog/product/1660259/
					https://sport-marafon.ru/catalog/muzhskie-futbolki/futbolka-muzhskaya-arcteryx-archaeopteryx-ss-gwaii/
					
					//pants
					https://www.kant.ru/catalog/product/582433/
					https://sport-marafon.ru/catalog/muzhskie-letnie-bryuki/bryuki-muzhskie-arcteryx-lefroy-buckeye/
					
					BLACK DIAMOND (BLACK DIAMOND Dirt bag),CHILLAZ (CHILLAZ Elias),Montbell,ARC'TERYX
					,PATAGONIA 
					
					
				]
				vendors[
					//got Arcteryx
					https://sport-marafon.ru/catalog/odezhda/
					//got chillaz
					https://tramontana.ru/product/chillaz_bryuki_elias_muzh/
					https://tramontana.ru/product/chillaz_bryuki_boulder_muzh/					
				]
				
			]

		]

		realestate[
			
			flat[
				
				electro[
					https://www.youtube.com/watch?v=YK6f4Imfh0E&t=638s
				]
				
				repairprices[
					балкон 20-50
					щиток 9-25
				]
			]

		]

		unsorted
		{
			//MS repository
			https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design
			
			//graph QL
			https://graphql-dotnet.github.io/docs/getting-started/introduction
			
			//graph ql to EF
			https://hackernoon.com/how-to-implement-generic-queries-by-combining-entityframework-core-and-graphql-net-77ac8faf4a22
			
			//cached repository
			https://ardalis.com/introducing-the-cachedrepository-pattern
			
			https://en.wikipedia.org/wiki/Isolation_(database_systems)
			https://en.wikipedia.org/wiki/Server_Message_Block#Opportunistic_locking
			https://microservices.io/patterns/data/event-sourcing.html
			https://microservices.io/patterns/apigateway.html
			https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs
			
			https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design
			https://docs.microsoft.com/en-us/previous-versions/msp-n-p/dn589800(v=pandp.10)
			https://blogs.msdn.microsoft.com/maarten_mullender/2004/07/23/crud-only-when-you-can-afford-it-revisited/
			https://en.wikipedia.org/wiki/Persistent_data_structure
			https://www.thereformedprogrammer.net/using-net-generics-with-a-type-derived-at-runtime/
			
			http://selfdocumenting.net/a-quick-mongodb-repository/
			http://selfdocumenting.net/bootstrap-your-app/
			
			https://www.youtube.com/watch?v=Ijs55IA8DIk
			https://www.youtube.com/watch?v=CZ3wIuvmHeM
			https://www.youtube.com/watch?v=MgApT3VHtZY&list=RDMgApT3VHtZY&index=1
			
			https://www.learnentityframeworkcore.com/configuration/data-annotation-attributes
			
			https://martinfowler.com/articles/injection.html			
			
			https://en.wikipedia.org/wiki/Genetic_programming
			https://en.wikipedia.org/wiki/Metaprogramming
			https://en.wikipedia.org/wiki/Self-modifying_code
			https://en.wikipedia.org/wiki/Polymorphic_code
			
			https://en.wikipedia.org/wiki/Timeline_of_computer_viruses_and_worms#1987
			https://en.wikipedia.org/wiki/1260_(computer_virus)
			https://en.wikipedia.org/wiki/Virut
			
			https://en.wikipedia.org/wiki/Attribute-based_access_control
			
			https://en.wikipedia.org/wiki/OAuth
			
			//datastructures
			https://hackernoon.com/10-data-structure-algorithms-and-programming-courses-to-crack-any-coding-interview-e1c50b30b927
			//auth storing strategy
			https://medium.com/@mehanix/lets-talk-security-salted-password-hashing-in-c-5460be5c3aae
			//mongodb intoduction
			https://www.codementor.io/pmbanugo/working-with-mongodb-in-net-1-basics-g4frivcvz
			//selflearning devs creer guide
			https://medium.freecodecamp.org/genuinely-useful-career-resources-for-self-taught-developers-8e679cec25ab
			//facebook memkaches
			https://medium.com/@shagun/scaling-memcache-at-facebook-1ba77d71c082
			
			
			guides[
				
				//ms sql drop db from cursor
				https://dba.stackexchange.com/questions/2387/sql-server-cannot-drop-database-dbname-because-it-is-currently-in-use-but-n
				
								
				autofac[
				
					//from main register
					//https://www.youtube.com/watch?v=mCUNrRtVVWY
					public static IContainer (){
						public static Configure(){
							var builder = new ContainerBuilder();
							
							return builder.Build();
						}
					}
					static void Main(string[] args){
						var container = ContainerConfig.Configure();
					}
					
					//allways resolve from LifeTimeScope as it is disposable
					using (var scope = container.BeginLifetimeScope())
					{
						var go = scope.Resolve<Ii.IGo>();
						go.GO();
					}

					//AutoActivate
					//call action method from base constructor
					builder.RegisterType<MongoCheck>().As<IGo>().AutoActivate();		
					
								
					
				]
				
			]
		
			EF[
				//Repository pattern
				https://medium.com/@hoagsie/youre-all-doing-entity-framework-wrong-ea0c40e20502
							
				//Nuget package manager console
				https://docs.microsoft.com/en-us/nuget/tools/package-manager-console
				
				//expression trees
				https://blog.marcgravell.com/2008/10/express-yourself.html


				REPO[
					using System;
					using System.Collections.Generic;
					using System.Data.Entity;
					using System.Linq;
					using System.Linq.Expressions;
					using System.Threading;
					using System.Threading.Tasks;
					using IF.MoscowVideo.Infrastructure.DAL.Models;
					using IF.MoscowVideo.Infrastructure.Extensions;
					using IF.MoscowVideo.Infrastructure.Extensions.ObjectExtensions;
					using IF.MoscowVideo.Infrastructure.Logs.Models;
					using IF.MoscowVideo.Infrastructure.Models;

					namespace IF.MoscowVideo.Common.Entity
					{
						/// <summary>
						/// Базовый класс репозитория.
						/// </summary>
						/// <typeparam name="T">Тип сущности.</typeparam>
						/// <typeparam name="TInterface">Интерфейс сущности.</typeparam>
						public abstract class CrudRepositoryBase<T, TInterface> : RepositoryBase<TInterface> where T : class, TInterface
						{
							/// <summary>
							/// Ctor.
							/// </summary>
							protected CrudRepositoryBase(DbContext objectContext)
								: base(objectContext)
							{
							}

							public override IQueryable<TInterface> GetAll()
							{
								return ObjectContext.Set<T>();
							}

							/// <summary>
							/// Создать новый экземпляр сущности.
							/// </summary>
							public virtual TInterface New()
							{
								return _objectContext.Set<T>().Create<T>();
							}

							/// <summary>
							/// Создать новый экземпляр сущности.
							/// </summary>
							public TOut New<TIn, TOut>()
								where TIn : class, TOut
							{
								return _objectContext.Set<TIn>().Create<TIn>();
							}

							/// <summary>
							/// Добавить экземпляр в набор.
							/// </summary>
							/// <param name="entity">Сущность для добавления.</param>
							public virtual void Add(IEnumerable<TInterface> entity)
							{
								_objectContext.Set<T>().AddRange(entity.Cast<T>());
							}

							/// <summary>
							/// Добавить экземпляр в набор.
							/// </summary>
							/// <param name="entity">Сущность для добавления.</param>
							public virtual void Add(TInterface entity)
							{
								_objectContext.Set<T>().Add((T)entity);
							}

							/// <summary>
							/// Обновить экремпляр в наборе.
							/// </summary>
							/// <param name="entity">Сущность для обновления.</param>
							[Obsolete]
							public virtual void Update(TInterface entity)
							{
								var ent = (T)entity;

								if (!Exists(ent))
								{
									_objectContext.Set<T>().Attach(ent);
								}
							}

							/// <summary>
							/// Удалить экземпляр сущности из набора.
							/// </summary>
							/// <param name="entity">Сущность для удаления.</param>
							public virtual void Delete(TInterface entity)
							{
								_objectContext.Set<T>().Remove((T)entity);
							}

							/// <summary>
							/// Удалить экземпляр сущности из набора.
							/// </summary>
							/// <param name="entity">Сущность для удаления.</param>
							public virtual void Delete(IEnumerable<TInterface> entity)
							{
								_objectContext.Set<T>().RemoveRange(entity.Cast<T>());
							}

							public virtual QueryResult<TInterface> Get(Query<TInterface> query)
							{
								var result = Get(query.Filter);
								return Paginate(result, query);
							}

							public virtual IQueryable<TInterface> Get(Expression<Func<TInterface, bool>> filter)
							{
								var result = _objectContext.Set<T>().AsQueryable();
								if (filter != null)
									result = result.Where(filter.ToConcreteType<T, TInterface>());
								return result;
							}

							/// <summary>
							/// Сохранить изменения.
							/// </summary>
							public virtual void SaveChanges()
							{
								_objectContext.SaveChanges();
							}

							public virtual async Task SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken))
							{
								await _objectContext.SaveChangesAsync(cancellationToken).ConfigureAwait(false);
							}

							protected virtual bool Exists(T ent)
							{
								try
								{
									return _objectContext.Set<T>().Local.Any(e => e == ent);
								}
								catch (Exception)
								{
									return true;
								}
							}

							protected static QueryResult<TInterface> Paginate(IQueryable<TInterface> entities, Query<TInterface> query)
							{
								var totalCount = entities.Count();

								if (query.Ordering != null)
									entities = query.Ordering.Apply(entities);

								if (query.Paging != null)
									entities = entities.Skip(query.Paging.CurrentPage * query.Paging.PageSize).Take(query.Paging.PageSize);

								return new QueryResult<TInterface>
								{
									Items = entities,
									TotalCount = totalCount
								};
							}

							public Dictionary<TE, Dictionary<string, string>> GetEntityPreviousValues<TE>(TE entity = null, string[] fieldNames = null)
							  where TE : class
							{
								var entitiesPreviousValues = new Dictionary<TE, Dictionary<string, string>>();
								var entrieChanges = GetEntrieChanges(entity);

								foreach (var camChanges in entrieChanges)
								{
									var entityPreviousValues = new Dictionary<string, string>();

									entitiesPreviousValues.Add(camChanges.Entity, entityPreviousValues);

									if (camChanges.State != EntityState.Modified)
										continue;

									if (fieldNames == null)
									{
										fieldNames = camChanges.Entity.ObjectToDictionary().Keys.ToArray();
									}

									foreach (string fieldName in fieldNames)
									{
										string original = camChanges.OriginalValues.PropertyNames.Contains(fieldName) ? camChanges.OriginalValues[fieldName]?.ToString() : "";
										string actual = camChanges.CurrentValues.PropertyNames.Contains(fieldName) ? camChanges.CurrentValues[fieldName]?.ToString() : "";

										if (original != actual && original != null && actual != null)
										{
											entityPreviousValues.Add(fieldName, original);
										}
									}
								}

								return entitiesPreviousValues.Where(h=>h.Value.Any()).ToDictionary(k=>k.Key, v=>v.Value);
							}
						}
					}
				]			
			
			]
			powershell[
				get-executionpolicy
				get-help set-executionpolicy
				set-executionpolicy remotesigned
			]
			hashs[
				http://eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#fnv
			]
			
			vs[
				//debugging source code
				https://blogs.msdn.microsoft.com/mcsuksoldev/2010/09/09/debugging-the-net-framework-source-code/
			]		
			reponew[
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Data.Entity;
	using System.Linq.Expressions;

	namespace HP.ArchiveBalancingService.DAL.RepositoryNew
	{
		public interface IRepositoryNew<K, T> where T : class
		{
			void BindContext(DbContext context);
			DbContext GetContext();

			T Add(T item);
			IQueryable<T> GetALL();
			IQueryable<T> GetTOP10();
			T GetByID(K id_);
			void AddCollection(List<T> items);
			void RemoveCollection(List<K> ids);
			void RemoveByID(K id_);
			IQueryable<T> GetByFilter(Expression<Func<T, bool>> expession);


			Expression<Func<T, bool>> WhereOR(Expression<Func<T, bool>> expression);
			Expression<Func<T, bool>> WhereAndAlso(Expression<Func<T, bool>> expression);
			IQueryable<T> GetByChainedFilter();


			T Update(T item, K id);
			void DeleteWhere(Expression<Func<T, bool>> exp_);
			IQueryable<T> SelectWhere(Expression<Func<T, bool>> exp_);
			IQueryable<T> Include<C>(Expression<Func<T, C>> exp_);
			void Save();
			bool IsUpdated(T item);
			void Dispose();
		}

	}


	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Data.Entity;
	using HP.ArchiveBalancing.Common;

	namespace HP.ArchiveBalancingService.DAL.RepositoryNew
	{
	   
		public class RepositoryNew<K,T> : IRepositoryNew<K,T> where T : class
		{
			bool disposed = false;

			public DbContext _context;

			Expression<Func<T, bool>> chainResult = null;

			public RepositoryNew()
			{

			}
			public RepositoryNew(DbContext context_)
			{
				this._context = context_;
			}
		   
			public DbContext GetContext()
			{
				DbContext result = null;
				if (this._context != null)
				{
					result = this._context;
				}
				return result;
			}

			public void BindContext(DbContext context)
			{
				this._context = context;
			}
			public T Add(T item)
			{           
				try
				{
					this._context.Set<T>().Add(item);
				}
				catch (Exception e)
				{
					item = null;
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
				return item;
			}
			public IQueryable<T> GetALL()
			{
				IQueryable<T> result = null;
				result = from s in this._context.Set<T>() select s;
				return result;
			}
			public IQueryable<T> GetTOP10()
			{
				IQueryable<T> result = null;
				try
				{
					result = (from s in this._context.Set<T>() select s).Take(10);
				}catch(Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
				return result;
			}
			public T GetByID(K id_)
			{
				T result = null;
					result = this._context.Set<T>().Find(id_);
				return result;
			}
			public IQueryable<T> GetByFilter(Expression<Func<T, bool>> expession)
			{
				IQueryable<T> result = null;
				result = from s in this._context.Set<T>().Where(expession) select s;
				return result;
			}
			public IQueryable<T> GetByChainedFilter()
			{
				IQueryable<T> result = null;
				result = from s in this._context.Set<T>().Where(this.chainResult) select s;
				return result;
			}

			public Expression<Func<T, bool>> WhereOR(Expression<Func<T, bool>> expression)
			{
				if (chainResult == null)
				{
					chainResult = expression;
				}
				else
				{
					chainResult = chainResult.Or(expression);
				}
				return chainResult;
			}
			public Expression<Func<T, bool>> WhereAndAlso(Expression<Func<T, bool>> expression)
			{
				if (chainResult == null)
				{
					chainResult = expression;
				}
				else
				{
					chainResult = chainResult.AndAlso(expression);
				}
				return chainResult;
			}

			public void AddCollection(List<T> items)
			{
				this._context.Set<T>().AddRange(items);
			}
			
			public void RemoveCollection(List<K> ids)
			{
				try
				{
					foreach (K id in ids)
					{
						this.RemoveByID(id);
					}
				}
				catch (Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
			}

			public void RemoveByID(K id_)
			{
				try
				{
					T item = this._context.Set<T>().Find(id_);
					if (item != null)
					{
						this._context.Set<T>().Remove(item);
					}
				}
				catch (Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
			}
		  
			public T Update(T item, K id)
			{
				T toUpdate = null;
				try
				{

					toUpdate = this._context.Set<T>().Find(id);
					this._context.Entry(toUpdate).CurrentValues.SetValues(item);                
				}
				catch (Exception e)
				{
					toUpdate = null;
					System.Diagnostics.Trace.WriteLine(e.Message);
				}

				return toUpdate;
			}
			public bool IsUpdated(T item)
			{
				return this._context.Entry(item).State == EntityState.Modified;
			}  
	  

			public void Save()
			{
				try
				{
					this._context.SaveChanges();
				}catch(Exception e)
				{
					
				}
			}

			public IQueryable<T> SelectWhere(Expression<Func<T,bool>> exp_)
			{
				IQueryable<T> result = null;
					result = from s in this._context.Set<T>().Where(exp_) select s;
				return result;
			}
			public void DeleteWhere(Expression<Func<T, bool>> exp_)
			{        
				this._context.Set<T>().RemoveRange(this.SelectWhere(exp_));           
			}

			public IQueryable<T> Include<C>(Expression<Func<T, C>> exp_)
			{
				IQueryable<T> res = null;
				try
				{
					res = this._context.Set<T>().Include(exp_);
				}catch(Exception e)
				{
					System.Diagnostics.Trace.WriteLine(e.Message);
				}
				return res;
			}

			protected virtual void Dispose(bool value)
			{
				if (!this.disposed)
				{
					if (value)
					{
						this._context.Dispose();

					}
				}
				this.disposed = true;
			}
			public void Dispose()
			{
				Dispose(true);
				GC.SuppressFinalize(this);
			}

		}

	}
	]		
			crudRepo[
			using System;
	using System.Collections.Generic;
	using System.Data.Entity;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Threading;
	using System.Threading.Tasks;
	using IF.MoscowVideo.Infrastructure.DAL.Models;
	using IF.MoscowVideo.Infrastructure.Extensions;
	using IF.MoscowVideo.Infrastructure.Extensions.ObjectExtensions;
	using IF.MoscowVideo.Infrastructure.Logs.Models;
	using IF.MoscowVideo.Infrastructure.Models;

	namespace IF.MoscowVideo.Common.Entity
	{
		/// <summary>
		/// Базовый класс репозитория.
		/// </summary>
		/// <typeparam name="T">Тип сущности.</typeparam>
		/// <typeparam name="TInterface">Интерфейс сущности.</typeparam>
		public abstract class CrudRepositoryBase<T, TInterface> : RepositoryBase<TInterface> where T : class, TInterface
		{
			/// <summary>
			/// Ctor.
			/// </summary>
			protected CrudRepositoryBase(DbContext objectContext)
				: base(objectContext)
			{
			}

			public override IQueryable<TInterface> GetAll()
			{
				return ObjectContext.Set<T>();
			}

			/// <summary>
			/// Создать новый экземпляр сущности.
			/// </summary>
			public virtual TInterface New()
			{
				return _objectContext.Set<T>().Create<T>();
			}

			/// <summary>
			/// Создать новый экземпляр сущности.
			/// </summary>
			public TOut New<TIn, TOut>()
				where TIn : class, TOut
			{
				return _objectContext.Set<TIn>().Create<TIn>();
			}

			/// <summary>
			/// Добавить экземпляр в набор.
			/// </summary>
			/// <param name="entity">Сущность для добавления.</param>
			public virtual void Add(IEnumerable<TInterface> entity)
			{
				_objectContext.Set<T>().AddRange(entity.Cast<T>());
			}

			/// <summary>
			/// Добавить экземпляр в набор.
			/// </summary>
			/// <param name="entity">Сущность для добавления.</param>
			public virtual void Add(TInterface entity)
			{
				_objectContext.Set<T>().Add((T)entity);
			}

			/// <summary>
			/// Обновить экремпляр в наборе.
			/// </summary>
			/// <param name="entity">Сущность для обновления.</param>
			[Obsolete]
			public virtual void Update(TInterface entity)
			{
				var ent = (T)entity;

				if (!Exists(ent))
				{
					_objectContext.Set<T>().Attach(ent);
				}
			}

			/// <summary>
			/// Удалить экземпляр сущности из набора.
			/// </summary>
			/// <param name="entity">Сущность для удаления.</param>
			public virtual void Delete(TInterface entity)
			{
				_objectContext.Set<T>().Remove((T)entity);
			}

			/// <summary>
			/// Удалить экземпляр сущности из набора.
			/// </summary>
			/// <param name="entity">Сущность для удаления.</param>
			public virtual void Delete(IEnumerable<TInterface> entity)
			{
				_objectContext.Set<T>().RemoveRange(entity.Cast<T>());
			}

			public virtual QueryResult<TInterface> Get(Query<TInterface> query)
			{
				var result = Get(query.Filter);
				return Paginate(result, query);
			}

			public virtual IQueryable<TInterface> Get(Expression<Func<TInterface, bool>> filter)
			{
				var result = _objectContext.Set<T>().AsQueryable();
				if (filter != null)
					result = result.Where(filter.ToConcreteType<T, TInterface>());
				return result;
			}

			/// <summary>
			/// Сохранить изменения.
			/// </summary>
			public virtual void SaveChanges()
			{
				_objectContext.SaveChanges();
			}

			public virtual async Task SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken))
			{
				await _objectContext.SaveChangesAsync(cancellationToken).ConfigureAwait(false);
			}

			protected virtual bool Exists(T ent)
			{
				try
				{
					return _objectContext.Set<T>().Local.Any(e => e == ent);
				}
				catch (Exception)
				{
					return true;
				}
			}

			protected static QueryResult<TInterface> Paginate(IQueryable<TInterface> entities, Query<TInterface> query)
			{
				var totalCount = entities.Count();

				if (query.Ordering != null)
					entities = query.Ordering.Apply(entities);

				if (query.Paging != null)
					entities = entities.Skip(query.Paging.CurrentPage * query.Paging.PageSize).Take(query.Paging.PageSize);

				return new QueryResult<TInterface>
				{
					Items = entities,
					TotalCount = totalCount
				};
			}

			public Dictionary<TE, Dictionary<string, string>> GetEntityPreviousValues<TE>(TE entity = null, string[] fieldNames = null)
			  where TE : class
			{
				var entitiesPreviousValues = new Dictionary<TE, Dictionary<string, string>>();
				var entrieChanges = GetEntrieChanges(entity);

				foreach (var camChanges in entrieChanges)
				{
					var entityPreviousValues = new Dictionary<string, string>();

					entitiesPreviousValues.Add(camChanges.Entity, entityPreviousValues);

					if (camChanges.State != EntityState.Modified)
						continue;

					if (fieldNames == null)
					{
						fieldNames = camChanges.Entity.ObjectToDictionary().Keys.ToArray();
					}

					foreach (string fieldName in fieldNames)
					{
						string original = camChanges.OriginalValues.PropertyNames.Contains(fieldName) ? camChanges.OriginalValues[fieldName]?.ToString() : "";
						string actual = camChanges.CurrentValues.PropertyNames.Contains(fieldName) ? camChanges.CurrentValues[fieldName]?.ToString() : "";

						if (original != actual && original != null && actual != null)
						{
							entityPreviousValues.Add(fieldName, original);
						}
					}
				}

				return entitiesPreviousValues.Where(h=>h.Value.Any()).ToDictionary(k=>k.Key, v=>v.Value);
			}
		}
	}
			]
			
			
			architecture_patterns[
				https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013
			]
			quartz[
				https://jayvilalta.com/blog/2014/06/04/understanding-the-disallowconcurrentexecution-job-attribute/
			]		
			liblist[
				https://topshelf.readthedocs.io/en/latest/#
				https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=2ahUKEwjfypWdjZreAhWniKYKHTDBDnAQFjABegQICBAB&url=https%3A%2F%2Farchive.codeplex.com%2F%3Fp%3Demitmapper&usg=AOvVaw0_lHfeypLG9ciEL5wA0PCz
				
			]
			
			mapping[
				http://geekswithblogs.net/mrsteve/archive/2016/12/28/object-mapper-performance-comparison-allowpartiallytrustedcallers.aspx
			]
			
			emitmapper[
				
				https://blog.zwezdin.com/2013/emitmapper/
				
				//fake return with arguments 
				scroogeFake.GetSubtitlesStatus(Arg.Any<Guid>())
				.Returns<ScroogeClient.Responsess.ArchiveSubtitlesStatus>(archiveStatusInProgress);

				//emittmapper IGNORE
				protected override DefaultMapConfig Config
				{
				get
				{
					return base.Config
						.IgnoreMembers<DAL.Entities.ArchiveTask, BLL.Models.Subtitles.ArchiveTaskBO>(new[] {
							"Events"
						});
				}
				}

				//emittmapper CONSTRUCTSUING
				protected override DefaultMapConfig Config
				{
					get
					{
						return base.Config
							.ConstructBy<ArchiveTaskInfo>(
							() => {
									return new ArchiveTaskInfo() {

									};
								}
							);

							//.IgnoreMembers<ArchiveOrderInfo, ArchiveTaskInfo>(new[] {"Events"});
					}
				}
			]
			
			read[
				
				//web ppa recurrent
				https://haacked.com/archive/2011/10/16/the-dangers-of-implementing-recurring-background-tasks-in-asp-net.aspx/
			]
			
			Nuget[
			
	//NUGET CLI
	nuget list ArchiveBalancingService -Source http://10.178.3.70:99/nuget
	nuget install HP.ArchiveBalancingService.DataContracts -SolutionDirectory C:\111\contracts -version 1.0.175

	//pack package 
	nuget pack C:\P\AR\HP.ArchiveService.DataContracts\HP.ArchiveBalancingService.DataContracts.csproj -OutputDirectory C:\111\contracts -version 1.0.175 -Properties Description=Release
	C:\Users\i_neprintsev>nuget push C:\111\contracts\packages\HP.ArchiveBalancingService.DataContracts.1.0.175.nupkg -Source http://10.178.3.70:99

	nuget setapikey P@ssw@rd -Source http://10.178.3.70:99/nuget

	//CommandShell nuget
	find-Package -Provider "http://10.178.3.70:99/nuget" -name "HP.ArchiveBalancingService.DataContracts" -RequiredVersion "1.0.136" 
	install-Package -name "HP.ArchiveBalancingService.DataContracts" -RequiredVersion "1.0.174" -Scope CurrentUser
			
			]
			
			core [
			
				//reference DLL[
				https://medium.com/@tonerdo/referencing-a-net-dll-directly-using-the-net-core-toolchain-16f0af46a4dc
				add to core.scproj
				
			  <ItemGroup>
				<Reference Include="MyAssembly">
				  <HintPath>HP.ArchiveBalancingService.DataContracts.dll</HintPath>
				</Reference>
			  </ItemGroup>
			]
			
			//plastic types
			bakelit,pvc,acrylic,nylon,bpa,dehp


			//data sctructures
			https://en.wikipedia.org/wiki/Discrete_mathematics
			https://en.wikipedia.org/wiki/Data_structure
			https://en.wikipedia.org/wiki/Linked_list
			https://en.wikipedia.org/wiki/Graph_(abstract_data_type)
			https://en.wikipedia.org/wiki/Binary_tree
			
			
			mongodbConcurency[
				Applications must ensure that only one thread at a time executes these operations in a client session.
				https://docs.mongodb.com/manual/core/causal-consistency-read-write-concerns/
				https://docs.mongodb.com/manual/faq/concurrency/
			]
			
			container[
				//container orchestration framework
				https://kubernetes.io/
				//alernate 
				Kubernetes,Mesos,Docker Swarm,Nomad,Mesosphere DC/OS
			]
			serviceBus[
				https://buoyant.io
				//sidecar
				https://linkerd.io/
			]
			service_mesh[
				https://istio.io/
			]
			msa[
				https://www.nginx.com/blog/nginmesh-nginx-as-a-proxy-in-an-istio-service-mesh/
				https://www.nginx.com/blog/what-is-a-service-mesh/
				https://www.nginx.com/blog/introducing-the-nginx-microservices-reference-architecture/
				https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/
			]
			patterns[
				decomposition[
					sidecar proxy //sideckick
					https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar
					//ambassador
					https://docs.microsoft.com/en-us/azure/architecture/patterns/ambassador
					//circuit breaker
					https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
					https://www.nginx.com/blog/microservices-reference-architecture-nginx-circuit-breaker-pattern/
				]
			]
		
			//msa principles 
			https://www.youtube.com/watch?v=PFQnNFe27kU
			//GOT Microservices 
			https://www.youtube.com/watch?v=wgdBVIX9ifA
			//mastering chaos
			https://www.youtube.com/watch?v=CZ3wIuvmHeM
			//msa
			https://en.wikipedia.org/wiki/Actor_model
			//API GATEWAY
			https://microservices.io/patterns/apigateway.html
			//AWS service discovery
			https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/service-discovery.html
			
			//msa overall
			https://microservices.io/index.html
			https://docs.microsoft.com/en-us/azure/architecture/antipatterns/chatty-io/
			//Introduction into Microservices
			https://specify.io/concepts/microservices
			//akka
			https://doc.akka.io/docs/akka/current/guide/actors-motivation.html
			
			//aws services
			https://docs.aws.amazon.com/aws-technical-content/latest/microservices-on-aws/service-discovery.html
			
			//synchronization
			https://en.wikipedia.org/wiki/Dining_philosophers_problem
			https://en.wikipedia.org/wiki/Semaphore_(programming)
			https://en.wikipedia.org/wiki/Monitor_(synchronization)
			https://en.wikipedia.org/wiki/Arbiter_(electronics)
			https://en.wikipedia.org/wiki/Observer_pattern
			
		
			//consensus algorithms
			https://en.wikipedia.org/wiki/Raft_(computer_science)
			https://en.wikipedia.org/wiki/Paxos_(computer_science)
			
			https://en.wikipedia.org/wiki/Consistent_hashing
			
			//closure 
			https://en.wikipedia.org/wiki/Closure_(computer_programming)
			
			//aspect oriented
			https://en.wikipedia.org/wiki/Aspect-oriented_programming
			
			//profilers
			http://www.getcodetrack.com/releases.html#latest
			//profiling
			http://www.codekicks.com/2006/08/net-profiling-api-tutorial.html
			
			//interseptor
			https://github.com/castleproject/Windsor/blob/master/docs/orphan-introduction-to-aop-with-castle.md
			//il weavers 
			https://www.codeproject.com/Articles/1223461/AOP-Method-and-property-interception-in-Csharp
			
			//path finding
			https://en.wikipedia.org/wiki/Path_tracing
			
			//algorithms
			https://www.coursera.org/specializations/data-structures-algorithms
			https://en.wikipedia.org/wiki/Quicksort
			http://anh.cs.luc.edu/170/notes/CSharpHtml/sorting.html
			https://en.wikipedia.org/wiki/Graph_traversal
			
			//c#
			//profiling
			https://stackify.com/three-types-of-net-profilers/		
			//compile
			https://msdn.microsoft.com/en-us/library/bb384838.aspx
			//observable 
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern
			//rx
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern

			//async
			//async patterns
			https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/
			https://stackify.com/csharp-async-await-task-performance/
			https://docs.microsoft.com/en-us/dotnet/csharp/async
			https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
			https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/
			https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/control-flow-in-async-programs

			//Oberver
			Observer : Iobservable<T> t-> data send  from provider to observers
			provider,subject,observable -> 
				List with references to observer implements subscribed
				
			observer
			.OnNext
			.OnError
			.OnComplete

			//freelance
			https://www.upwork.com/

			//films
			https://meduza.io/slides/pyat-glavnyh-filmov-dokumentalista-aleksandra-rastorgueva-kotorye-mozhno-posmotret-onlayn-o-kurortnikah-materyah-odinochkah-soldatah-v-chechne-i-oppozitsii				
			
			//distrib arch
			https://www.youtube.com/watch?v=tpspO9K28PM
			https://www.youtube.com/watch?v=5o-kdjv7FD0
			
			https://www.hackerrank.com/signup?h_r=community_home&h_v=sign_up&h_l=header_right			
				
			https://en.wikipedia.org/wiki/Service-oriented_architecture
			https://en.wikipedia.org/wiki/Event-driven_architecture
			
			https://iss.moex.com/iss/history/engines/stock/markets/shares/boardgroups/57/securities/ROSN.jsonp?lang=RU&from=2017-01-01&till=2017-03-30&start=0&iss.meta=off&iss.json=extended&callback=angular.callbacks._3&sort_order=TRADEDATE&sort_order_desc=desc&limit=100
			
			//MICEX Daiy
			https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities/ROSN.jsonp?callback=iss_jsonp_2a341379c8d83f89503665c3c81af142b2595fbc&iss.meta=off&iss.only=securities%2Cmarketdata&lang=ru&_=1532980356294

			//micex candles 
			https://iss.moex.com/cs/engines/stock/markets/shares/boardgroups/57/securities/ROSN.hs?callback=jQuery111205684894979026105_1532981497348&s1.type=candles&interval=24&candles=500&indicators=&_=1532981497426
			https://iss.moex.com/cs/engines/stock/markets/shares/boardgroups/57/securities/LKOH.hs?s1.type=candles&interval=24&candles=50000

			//MICEX dev
			https://www.moex.com/a2193

			//oil
			ROSN
			LKOH
			RNHS
			SNGS
			SIBN
			TATN
			RNFT
			BANE
			
			//FIN
			https://banyanhill.com/
			
			//soft 
			//decompilers 
			https://www.pnfsoftware.com/

			//CFTC
			https://www.cftc.gov/
			
			//CSS animated
			http://www.transformicons.com/
			//css tranlate
			https://codepen.io/kattixie/pen/ezzGKY
			https://codepen.io/adamaoc/pen/PwevMj
			//svg
			https://www.sitepoint.com/add-svg-to-web-page/
			https://www.w3.org/wiki/SVG_Links
			https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform
			https://developer.mozilla.org/kab/docs/Web/SVG
			https://teropa.info/blog/2016/12/12/graphics-in-angular-2.html
			//colors
			https://www.materialpalette.com/colors
			//styles
			https://alligator.io/angular/style-binding-ngstyle-angular/
			
			
			//fluid grids
			https://alistapart.com/article/fluidgrids
			//Responsive Web Design 
			https://www.smashingmagazine.com/2011/07/responsive-web-design-techniques-tools-and-design-strategies/
			//https://www.smashingmagazine.com/2011/01/guidelines-for-responsive-web-design/
			https://www.smashingmagazine.com/2011/01/guidelines-for-responsive-web-design/
			
			
			//gradient
			https://cssgradient.io/		
			
			https://sps.northwestern.edu/advanced-graduate-certificate/
		
			https://www.3ds.com/ru/
			
			//colorgen
			https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/
			
			//webGL
			https://www.khronos.org/webgl/
			https://en.wikipedia.org/wiki/WebGL
					
			
			https://threejs.org/
			https://en.wikipedia.org/wiki/Three.js
			
			//whitestorm
			https://whs.io/
			
			https://clara.io/
			
			
			//webgl front examples
			https://hajimewatanabe.jp/portfolio/
			
			//js
			//custom json converter
			http://blogs.microsoft.co.il/miziel/2014/09/23/custom-web-api-json-converter-single-property/
			
			//angular 
			//mat design items
			http://google.github.io/material-design-icons/#icon-font-for-the-web
			//angular svg
			https://teropa.info/blog/2016/12/12/graphics-in-angular-2.html
			//routing
			https://www.concretepage.com/angular-2/angular-2-routing-and-navigation-example
			//routing example
			https://stackblitz.com/angular/akeyovpqapx?file=src%2Fapp%2Fapp-routing.module.ts
			
			//graph db
			https://ontotext.com/free-graphdb-download/?utm_source=dbengines&utm_medium=banner&utm_campaign=graphdb%20free#1507639100937-90364ff6-654d
			
		
			//Managing state
			https://blog.nrwl.io/managing-state-in-angular-applications-22b75ef5625f
			tps://blog.oasisdigital.com/2016/managing-state-angular-2/
			https://medium.com/front-end-developers/managing-state-in-angular-2-using-rxjs-b849d6bbd5a5
			//centralized state mangement
			https://blog.oasisdigital.com/2016/angular-2-elm-redux-architecture/
			//AsyncPipe
			https://codecraft.tv/courses/angular/pipes/async-pipe/#_asyncpipe_with_promises	
			//routing 
			https://codecraft.tv/courses/angular/routing/route-configuration/
			//states 
			http://krasimirtsonev																		  
			//JS to json serialization
			https://stackoverflow.com/questions/22885995/how-do-i-initialize-a-typescript-object-with-a-json-object/22886730#22886730
			
			//rxjs
			https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
			https://netbasal.com/event-emitters-in-angular-13e84ee8d28c
			https://netbasal.com/understanding-subjects-in-rxjs-55102a190f3
			
			//Cloud I9 editor
			//Ace editor
			//Json to html
			http://www.json2html.com/
			//clarity 
			https://vmware.github.io/clarity/documentation/v0.11/get-started
			//font awasome
			https://fontawesome.com/get-started/svg-with-js
			//UX UI
			https://blog.bitsrc.io/11-angular-component-libraries-you-should-know-in-2018-e9f9c9d544ff
			//bootstrap
			https://medium.com/codingthesmartway-com-blog/building-an-angular-5-project-with-bootstrap-4-and-firebase-4504ff7717c1
			//primeng
			https://www.primefaces.org/primeng/#/ 
			
			TOREAD_SORT
			//TS interfaces vs types
			https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c																 
			//JS maddness external files load
			http://unixpapa.com/js/dyna.html
			//Load files
			https://frontender.info/exploring-the-abyss-of-null-and-undefined-in-javascript/
			//JS to Typescript
			https://blog.appdynamics.com/engineering/8-steps-migrating-javascript-typescript/
			//JS modules
			https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc
			//Common JS 
			http://requirejs.org/docs/start.html
			//webpack
			https://webpack.js.org/guides/installation/
			//TS modules
			https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
			//avoid multiple subscription
			https://medium.com/@2muchcoffee/how-to-avoid-multiple-subscription-in-angular-2-component-ce50bc21991b
			//datasharing 
			https://www.lucidchart.com/techblog/2016/11/08/angular-2-and-observables-data-sharing-in-a-multi-view-application/
			//concurent dataloading 
			https://www.metaltoad.com/blog/angular-2-http-observables-and-concurrent-data-loading
			//custom custom scrollbars library
			http://jscrollpane.kelvinluck.com/#examples
			
			//CSS		
			https://css-tricks.com/snippets/html/glyphs/
			//CSS tricks
			https://css-tricks.com/
			//CSS tricks flexbox
			https://css-tricks.com/snippets/css/a-guide-to-flexbox/
			//CSS tricks grid
			https://css-tricks.com/snippets/css/complete-guide-grid/
			//Float parent lement collaps
			https://css-tricks.com/almanac/properties/f/float/
			//Code alchemy
			https://htmlacademy.ru/courses/45
			//Code alchemy grids
			https://htmlacademy.ru/courses/65
			//animate css
			https://daneden.github.io/animate.css/
			//character code
			http://www.fileformat.info
			http://www.mauvecloud.net
			//custom checkboxes 
			https://codepen.io/arpitnj/pen/oCAqa
			 //gradients 
			https://mycolor.space/gradient?ori=to+right+top&hex=%23153669&hex2=%231ECFE0&sub=1
			https://webgradients.com/
			//svg
			https://bennettfeely.com/clippy/
			//spans svg png
			https://icons8.com/icon/set/calendar/all
			https://icons8.com/
			
			//c#
			//IL 
			https://gunnarpeipman.com/books/expert-net-2-0-il-assembler/
			https://gunnarpeipman.com/net/var-keyword/
			https://dolinkamark.wordpress.com/2015/10/21/cil-programming-tutorial-the-basics/
																				  
			//Effective C# (Covers C# 4.0): 50 Specific Ways to Improve Your C#, 2nd Edition
			http://www.informit.com/store/effective-c-sharp-covers-c-sharp-4.0-50-specific-ways-9780321658708
			//editing
			https://readymag.com/
			//ExtCore
			http://extcore.net/
			
			//Angular + React
			https://www.packtpub.com/books/content/integrating-angular-2-react
			https://eloquentjavascript.net/index.html
							   
			https://blog.rapid7.com/2016/02/03/combining-angularjs-and-reactjs-for-better-applications/
			https://stackoverflow.com/questions/44117390/angular-4-mixed-with-react
			https://www.quora.com/Can-I-use-React-for-UI-along-with-Angular-2
			//LinqInAction
			https://elacademico.files.wordpress.com/2009/11/manning-linq-in-action-jan-2008-19339881691.pdf
																	   
			https://eloquentjavascript.net/index.html	
			//bulletproof wrappers
			https://blog.sentry.io/2016/02/03/wrap-javascript-functions
			//tests
			https://www.sitepoint.com/proper-error-handling-javascript/
			//error handling
			https://javascript.info/try-catch
			
			//chart vis	
			http://js.cytoscape.org/#getting-started/including-cytoscape.js
			http://graphalchemist.github.io/Alchemy/#/
			https://neo4j.com/developer/guide-data-visualization/
			http://sigmajs.org/
			//with images
			http://bl.ocks.org/eesur/be2abfb3155a38be4de4
			//chart libs
			//with json shema change
			https://gojs.net/latest/index.html
			//tree draw
			http://fperucic.github.io/treant-js/
			//comparison names
			https://modeling-languages.com/javascript-drawing-libraries-diagrams/
			
			//with images
			http://bl.ocks.org/eesur/be2abfb3155a38be4de4	
			
			
			http://leaverou.github.io/awesomplete/
			https://primitive.lol/
			//ECMAScript 6
			http://exploringjs.com/es6/index.html#toc_ch_modules
												 
			//web components
			https://hackernoon.com/the-wonderful-world-of-web-components-e4c1675c6901
			//HAML jade sass less
			https://softwareengineering.stackexchange.com/questions/225400/pros-and-cons-of-facebooks-react-vs-web-components-polymer
			
			//FLUX
			https://facebook.github.io/flux/docs/dispatcher.html#content			
			
			
			//BLOGS
			//Juan
			http://www.whoisjuan.me/			 
			//Jon Skeet's
			https://codeblog.jonskeet.uk/
			//CoddingHorror
			https://blog.codinghorror.com/
			//CodeNames
			http://blog.codenamed.nl/
			https://prateekvjoshi.com/	
			//CONTINUOUS INTEGRATION
			http://www.eugeneduvenage.com/2011/11/continuous-integration-basics-part-1/
			//web components
			https://dmitriid.com/blog/2017/03/the-broken-promise-of-web-components/
			//equality + hashoe
			http://www.aaronstannard.com/overriding-equality-in-dotnet/
			//hashs
			https://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode/263416#263416
			//Chart visualization/
			https://stackoverflow.com/questions/21893401/big-data-visualization-using-search-show-context-and-expand-on-demand-concep
			//MSDN linq, expressions
			https://weblogs.asp.net/dixin					  
			//BitCoin
			https://hackernoon.com/meet-spoofy-how-a-single-entity-dominates-the-price-of-bitcoin-39c711d28eb4
			//whiteboard interviews
			https://hackernoon.com/how-to-lose-an-it-job-in-10-minutes-3d63213c8370
			//machine lerning algoritm
			https://hackernoon.com/choosing-the-right-machine-learning-algorithm-68126944ce1f
			
			//D3.js
			//essentials v4
			http://rajapradhan.com/blogs/d3-js-v4-essentials/axes/
			//indepth v4
			http://d3indepth.com/
			//layouts
			http://bl.ocks.org/robschmuecker/7880033
			http://mbostock.github.io/d3/talk/20111116/force-collapsible.html
			http://mbostock.github.io/d3/talk/20111018/tree.html
			http://www.coppelia.io/2014/07/an-a-to-z-of-extra-features-for-the-d3-force-layout/                                                                
			//generated v4
			https://bl.ocks.org/shimizu/e6209de87cdddde38dadbb746feaf3a3
			//labeld
			https://bl.ocks.org/mbostock/950642
			
			//d3 + react
			http://www.adeveloperdiary.com/react-js/integrate-react-and-d3/
			
			//SERIAL PROGRAMMING 	
			//RS-232
			http://cisco.opennet.ru/docs/RUS/serial_guide/index.html#2_2
			
			//Framework Design Guidelines
			https://www.amazon.co.uk/Framework-Design-Guidelines-Conventions-Development/dp/0321545613/		
			
			//Custom errors
			https://weblog.west-wind.com/posts/2017/Jun/01/Bypassing-IIS-Error-Messages-in-ASPNET
			http://benfoster.io/blog/aspnet-mvc-custom-error-pages
			https://msdn.microsoft.com/ru-ru/library/h0hfz6fc(v=vs.85).aspx
			
			//quality check
			https://msdn.microsoft.com/en-us/library/4dtdybt8.aspx
			//CI/CD HW
			https://docs.microsoft.com/en-us/vsts/build-release/actions/ci-cd-part-1
			//PowerShell TFS
			https://blogs.technet.microsoft.com/heyscriptingguy/2014/04/21/powershell-and-tfs-the-basics-and-beyond/
			
			
			//Async
			http://blog.stephencleary.com/2013/11/there-is-no-thread.html
			https://msdn.microsoft.com/en-us/magazine/jj991977.aspx
			//async request
			https://stackoverflow.com/questions/12281777/implementing-httpwebrequest-async-calls
			https://msdn.microsoft.com/ru-ru/library/system.net.httpwebrequest.begingetresponse(v=vs.110).aspx
			//tasks
			https://www.codeproject.com/Articles/152765/Task-Parallel-Library-of-n
			
			//Jupiter notebook
			http://jupyter.org
			//CDN
			https://en.wikipedia.org/wiki/Content_delivery_network
			//CMS\CMF
			https://ru.wikipedia.org/wiki/Content_Management_Framework
			//WebFramework behcnmarks
			https://www.techempower.com/benchmarks/
			//WebAnalytics
			//compare	
			https://en.wikipedia.org/wiki/List_of_web_analytics_software
			//PIWIK
			https://piwik.org/docs/site-search/
			https://developer.piwik.org/guides/tracking-javascript-guide
			https://www.innocraft.cloud/

			
			//PATTERNS
			//practiacally apply
			http://www.amazedsaint.com/2008/01/design-patterns-part-i-and-ii.html
			//Extensible design
			http://www.codemag.com/article/0801041
			//state patern
			https://en.wikipedia.org/wiki/State_pattern
			
			//TOPTAL
			https://www.toptal.com/developers/blog
			//Boilerplate code gen
			http://doc.postsharp.net/

			
			 //C#
			//Expression trees
			https://weblogs.asp.net/dixin/functional-csharp-function-as-data-and-expression-tree
				
			//dev guide
			https://msdn.microsoft.com/en-us/library/hh156542(v=vs.110).aspx

			//Applications essential
			https://msdn.microsoft.com/en-us/library/ms172157(v=vs.110).aspx

			//simple List<t> class
			https://msdn.microsoft.com/en-us/library/6sh2ey19(v=vs.110).aspx?cs-save-lang=1&cs-lang=csharp#code-snippet-2


			//LINQ to DataSet
			http://blogs.msdn.com/b/adonet/archive/2007/01/26/querying-datasets-introduction-to-linq-to-dataset.aspx

			//correct d3 charts addition
			//<script type="application/javascript" charset="utf-8" src="http://d3js.org/d3.v3.js"></script>

			//charts from excel to poweerpoint copy
			https://social.msdn.microsoft.com/Forums/ru-RU/b00e1da3-908d-4ae1-8c68-2ea5108d1cd0/-excel-powerpoint-vba?forum=programminglanguageru

			//codplex library addres for excel files read
			http://exceldatareader.codeplex.com/

			//never use TWO DOTS
			http://www.thecodingforums.com/threads/asp-net-cant-kill-excel-exe-with-office-pia.123703/#post-528575

			//newtonsoft JSON serializer
			http://www.newtonsoft.com/json/help/html/serializingjson.htm

			//ASP.NET Web Deployment - Recommended Resources
			http://www.asp.net/whitepapers/aspnet-web-deployment-content-map

			//Advanced Entity Framework 6 Scenarios for an MVC 5 + usefull links
			http://www.asp.net/mvc/overview/getting-started/getting-started-with-ef-using-mvc/advanced-entity-framework-scenarios-for-an-mvc-web-application#rawsql

			//ASP.NET Data Access - Recommended Resources
			http://www.asp.net/whitepapers/aspnet-data-access-content-map

			//ASP.NET Data Access Options
			https://msdn.microsoft.com/en-us/library/ms178359.aspx#webservice

			//scafolding
			https://blogs.msdn.microsoft.com/webdev/2014/04/03/creating-a-custom-scaffolder-for-visual-studio/

			//Data Source Web Server Controls
			https://msdn.microsoft.com/en-us/library/ms247258.aspx

			//James chamber 30 days ov MVC
			http://jameschambers.com/2014/07/day-27-rendering-data-in-a-bootstrap-table/

			//Post javascrip to mvc action
			http://vault.lozanotek.com/archive/2010/04/16/posting_json_data_to_mvc_controllers.aspx

			///{LINQ}
			//Create dynamic "Select", "SelectMany" and "GroupBy" clauses
			http://drc.ideablade.com/xwiki/bin/view/Documentation/dynamic-projection

			//Programming Entity Framework, 2nd Edition
			https://www.safaribooksonline.com/library/view/programming-entity-framework/9780596807276/ch04.html

			//Dynamic LINQ Queries with Expression Trees
			https://www.simple-talk.com/dotnet/net-framework/dynamic-linq-queries-with-expression-trees/

			//Calling functions in LINQ queries
			http://tomasp.net/blog/linq-expand.aspx/

			//sql commands types
			https://msdn.microsoft.com/en-us/library/yy6y35y8(v=vs.110).aspx


			//How to add Dynamic Behavior to Data-Bound Controls
			https://msdn.microsoft.com/en-us/library/cc488562.aspx

			//WebForms
			https://msdn.microsoft.com/en-us/library/jj822927(v=vs.110).aspx

			//ASP.NET Dynamic Data
			https://msdn.microsoft.com/en-us/library/ee845452.aspx

			//LINQ chaining
			https://blogs.msdn.microsoft.com/meek/2008/05/02/linq-to-entities-combining-predicates/
			
			//Sample plugin
			https://code.msdn.microsoft.com/windowsdesktop/Creating-a-simple-plugin-b6174b62	
			
			//active directory integration
			https://www.codeproject.com/Articles/18102/Howto-Almost-Everything-In-Active-Directory-via-C
																								
			//Type comparison
			https://stackoverflow.com/questions/983030/type-checking-typeof-gettype-or-is
			
			//KATAs
			http://osherove.com/tdd-kata-1/
			https://github.com/garora/TDD-Katas/blob/develop/Src/cs/FizzBuzzKata/TestFizzBuzz.cs
			https://www.codeproject.com/Articles/886492/Learning-Test-Driven-Development-with-TDD-Katas
			
			
			
			//BUILD STRATEGIES
			//The Cathedral and the Bazaar
			https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar



			//NuGets
			//Lucene
			https://www.nuget.org/packages/Lucene.Net/4.8.0-beta00004
			//pagelist
			https://www.nuget.org/packages/PagedList
			//Reactive Extensions for JavaScript
			https://www.nuget.org/packages/RxJS-Main/1.0.10621

			
			//DATA BINDING FRAMEWORKS/
			//FLUX
			https://facebook.github.io/flux/docs/dispatcher.html#content
			

			//Security
			http://www.adambarth.com/papers/2008/barth-jackson-mitchell-b.pdf
			//MVC forms authentication providerName
			https://habrahabr.ru/post/176043/
			//Cookies
			https://www.nczonline.net/blog/2009/05/05/http-cookies-explained/
			//Custom antiforgery token
			http://prideparrot.com/blog/archive/2012/7/securing_all_forms_using_antiforgerytoken
			//App Security threats
			https://msdn.microsoft.com/en-us/library/f13d73y6.aspx
			//Your Password is Too Damn Short
			https://blog.codinghorror.com/your-password-is-too-damn-short/
			
			
			
			//MVC
			//Minimal folders and configs
			https://stackoverflow.com/questions/19949709/use-of-authconfig-bundleconfig-filterconfig-routeconfig-and-webapiconfig-in
			
			
			
			//WCF distributed
			https://chsakell.com/2013/04/17/distributed-transactions-in-wcf-services-part-1/
			//WCF sample
			https://www.codeproject.com/Articles/571813/A-Beginners-Tutorial-on-Creating-WCF-REST-Services
			//WCF with entity
			https://www.codeproject.com/Articles/127395/Implementing-a-WCF-Service-with-Entity-Framework
			//WCF generate contracts from POCO
			https://www.codeproject.com/Articles/1081015/Autogenerate-DataContracts-for-WCF-from-POCO-Class
			//WCF transactions
			https://www.codeproject.com/Articles/1160537/WCF-Windows-Communication-Foundation-Transaction-S
			//WCF vs aspx service
			http://www.csharptutorial.in/33/csharp-net-difference-between-webservice-and-wcf-service
			//WCF tutorials
			http://www.csharptutorial.in/wcf-tutorials
			//WCF host as a service
			https://docs.microsoft.com/en-us/dotnet/framework/wcf/how-to-host-and-run-a-basic-wcf-service
			https://docs.microsoft.com/en-us/dotnet/framework/wcf/getting-started-tutorial
			//WCF + Entity
			https://www.codeproject.com/Articles/127395/Implementing-a-WCF-Service-with-Entity-Framework
			//WCF IoC
			https://chsakell.com/2015/07/04/dependency-injection-in-wcf/
			
			
			
			//SOAP REST diff
			http://www.csharptutorial.in/296/wcf-tutorials-soap-vs-rest-web-services-or-difference-between-soap-and-rest-web-services
			
			

			//WebApi
			//Using Postman to POST API JSON request in raw
			https://support.brightcove.com/use-postman-api-requests
			//WebApi controller
			https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api
			https://docs.microsoft.com/en-us/aspnet/web-api/overview/testing-and-debugging/mocking-entity-framework-when-unit-testing-aspnet-web-api-2
			//WCF WebApi
			http://blogs.microsoft.co.il/idof/2012/03/05/wcf-or-aspnet-web-apis-my-two-cents-on-the-subject/
			//WEB api with packets
			https://habrahabr.ru/post/143024/
			


			//vNext
			https://blogs.msdn.microsoft.com/dotnet/2014/05/12/the-next-generation-of-net-asp-net-vnext/



			//EF
			//Data acces content map
			https://docs.microsoft.com/en-us/aspnet/whitepapers/aspnet-data-access-content-map
			//Code first to database
			https://msdn.microsoft.com/en-us/data/jj200620
			//EF bulk insert
			https://weblog.west-wind.com/posts/2013/Dec/22/Entity-Framework-and-slow-bulk-INSERTs#ContextBloatandLargeLists
			//Entity Framework initializer methods
			https://blog.oneunicorn.com/2013/05/28/database-initializer-and-migrations-seed-methods/
			// Code First Migrations with an existing database
			https://msdn.microsoft.com/en-us/data/dn579398


			
			//REPOSITORY
			//Generic Repository is BAD
			http://rob.conery.io/2014/03/04/repositories-and-unitofwork-are-not-a-good-idea/
			https://lostechies.com/jimmybogard/2012/09/20/limiting-your-abstractions/
			//generic Repository
			http://techbrij.com/generic-repository-unit-of-work-entity-framework-unit-testing-asp-net-mvc
			//Generic repository
			https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions/getting-started-with-ef-5-using-mvc-4/implementing-the-repository-and-unit-of-work-patterns-in-an-asp-net-mvc-application
			//A trully generic repository
			http://cpratt.co/truly-generic-repository/
			//Repo done right
			http://blog.gauffin.org/2013/01/repository-pattern-done-right/
			//Repo proof of concept
			http://web.archive.org/web/20150404154203/https://www.remondo.net/repository-pattern-example-csharp/
			//Generic repo in simple 2014
			http://www.codeguru.com/csharp/.net/net_asp/mvc/using-the-repository-pattern-with-asp.net-mvc-and-entity-framework.htm
			//Repository overall
			http://techbrij.com/generic-repository-unit-of-work-entity-framework-unit-testing-asp-net-mvc	
			//Not Generic REPOSITORY
			https://softwareengineering.stackexchange.com/questions/180851/why-shouldnt-i-use-the-repository-pattern-with-entity-framework/220126#220126
			//NOSQL
			//RaveDb
			http://www.primaryobjects.com/2010/12/22/generating-flying-creatures-in-nosql-ravendb-with-c-asp-net-mvc-razor/
			//CQRS
			https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs
																									
				
			//TESTING
			//Test Automation most complete answer
			https://stackoverflow.com/questions/1316101/automated-unit-testing-why-what-which#1316209
			//Unit test
			https://msdn.microsoft.com/en-us/library/hh694602.aspx
			https://lostechies.com/derekgreer/2011/03/28/effective-tests-a-test-first-example-part-1/
			https://www.rhyous.com/2012/03/17/unit-test-best-practices-and-guidelines/
			//nUnit
			http://severe-programmer.com/manual/unit-testing-v-visual-studio-s-ispolzovaniem-nunit-i-nsubstitute-chast-1/
			https://github.com/nunit/docs/wiki/TestCaseData
			//Moq Setup
			https://professorweb.ru/my/ASP_NET/mvc/level2/2_5.php
			//MOQ
			https://metanit.com/sharp/mvc5/18.5.php
			https://github.com/Moq/moq4/wiki/Quickstart
			https://msdn.microsoft.com/en-us/library/dn314429(v=vs.113).aspx
			https://msdn.microsoft.com/en-us/library/dn314431(v=vs.113).aspx
			https://msdn.microsoft.com/en-us/library/ff650441.aspx
			http://www.developerhandbook.com/unit-testing/writing-unit-tests-with-nunit-and-moq/
			//EF integration testing
			https://stackoverflow.com/questions/22690877/how-are-people-unit-testing-with-entity-framework-6-should-you-bother/22691703#22691703
			//Integration
			http://enterprisecraftsmanship.com/2015/07/13/integration-testing-or-how-to-sleep-well-at-nights/
			//Mocking idea descr
			https://stackoverflow.com/questions/19674363/when-to-use-a-mocking-framework
			


			//MOQ
			//Mock return item from list by ID 
			https://stackoverflow.com/questions/22010063/moq-a-retrieve-of-particular-list-item



			//Single Page Application
			https://docs.microsoft.com/en-us/aspnet/single-page-application/overview/introduction/knockoutjs-template

			//JS good practices
			http://james.padolsey.com/javascript/javascript-bad-practices/
			//JS no more frameworks
			https://bitworking.org/news/2014/05/zero_framework_manifesto

			//ORM vs plain sql strategies
			http://softwareengineering.stackexchange.com/questions/117357/is-entity-framework-suitable-for-high-traffic-websites

			//msdn C# posts
			https://blogs.msdn.microsoft.com/ruericlippert/tag/type-inference/

			//TOP 10 C# errors
			https://www.upwork.com/hiring/development/common-mistakes-in-c-sharp-programming/
			https://www.toptal.com/c-sharp/top-10-mistakes-that-c-sharp-programmers-make

			//SOLID
			http://sergeyteplyakov.blogspot.ru/2014/10/solid.html
			http://www.c-sharpcorner.com/uploadfile/damubetha/solid-principles-in-c-sharp/
			https://www.codeproject.com/Articles/703634/SOLID-architecture-principles-using-simple-Csharp

			//Learn C# building-a-simple-rpg-index
			http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/

			//Loading type MSDN + (Loading types, lazy loading turning off)
			https://msdn.microsoft.com/en-us/library/jj574232(v=vs.113).aspx

			//C# Delegates, Actions, Funcs, Lambdas?Keeping it super simple
			https://blogs.msdn.microsoft.com/brunoterkaly/2012/03/02/c-delegates-actions-funcs-lambdaskeeping-it-super-simple/
			//Generic parameters vs type 
			https://stackoverflow.com/questions/10955579/passing-just-a-type-as-a-parameter-in-c-sharp

			/*
			filtering inherited types classes in base class list of classes
			google
			c# base class list contains inherited classes
			stack
			*/
			http://stackoverflow.com/questions/2074779/identifying-derived-types-from-a-list-of-base-class-objects


			/*ECM/ERP FuckUp pieces of shit*/
			
			https://www.directum.ru/
			docsvision
			intraservise
			elma
			https://www.naumen.ru
			
			//code gen
			https://swagger.io/
			//tizen
			https://www.tizen.org/
			
			//ORACLE
			http://www.f-notes.info/oracle:what_where
				
			//Shodan
			https://www.shodan.io/
					
		
			quartz[
						
				//Quartz Template

				---
				await scheduler.Start();
				*<
				await scheduler.Shutdown();


				---
				HelloJob : IJob
				public Task Execute(IJobExecutionContext context)


				---
				IJobDetail job = JobBuilder.Create<HelloJob>()
					.WithIdentity("job1", "group1")
					.Build();

				// Trigger the job to run now, and then repeat every 10 seconds
				ITrigger trigger = TriggerBuilder.Create()
					.WithIdentity("trigger1", "group1")
					.StartNow()
					.WithSimpleSchedule(x => x
						.WithIntervalInSeconds(10)
						.RepeatForever())
					.Build();

				// Tell quartz to schedule the job using our trigger
				*<
				await scheduler.ScheduleJob(job, trigger);
			]
			
			rabbitmqTutor[
							
				t1[
				dotnet new console --name Send
				dotnet restore
				cd Send
				dotnet run

				dotnet new console --name Receive
				dotnet restore
				cd Receive
				dotnet run

				dotnet add package RabbitMQ.Client
				dotnet restore


				cd C:\worflow\progs\rabbitmqHW\Receive
				dotnet run
				command.layouts.partner_layout_list.get
				command.layouts.partner_layout_list.get

				cd C:\worflow\progs\rabbitmqHW\Send
				dotnet run
				]

				t2[
				dotnet new console --name NewTask
				dotnet new console --name Worker

				cd NewTask
				dotnet add package RabbitMQ.Client
				dotnet restore

				cd ../Worker
				dotnet add package RabbitMQ.Client
				dotnet restore
				]
			]
			
			pipelines and actors
			AkkaA streams for actors 
			raft algorithm, consul
			AkkaA net
			AkkaA.NET State machine
			
			//contour
			https://github.com/mzabolotko/Contour
			//hostbox
			https://github.com/SDVentures/HostBox
			
			//product docs workflow 
			БТ-ПТ-ФТ-Спек
			
			https://www.epochconverter.com/
			
			https://semver.org/
			http://pubs.opengroup.org/architecture/archimate3-doc/chap01.html#_Toc489945945
			https://github.com/StyleCop/StyleCop
			https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md
			https://fsprojects.github.io/Paket/
			http://restsharp.org/
			https://www.datadoghq.com/product/
			https://sentry.io/welcome/
			
			//ArchiMate
			http://pubs.opengroup.org/architecture/archimate3-doc/toc.html
			//open API
			https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md
			
			InfluxDB, OpenTSDB, Prometheus
			 
			books[
			
			C#, .NET

		Andrew Troelsen - Язык программирования C# и платформа .NET 4.pdf
		Windows Presentation Foundation with .NET 3.5.pdf
		Сандерсон С., Фримен А. - Microsoft ASP.NET MVC3 Framework с примерами на C# для профессионалов (3-е издание, 2012).pdf
		Microsoft ASP.NET 4 с примерами на C# 2010 для профессионалов.pdf
		Джувел Лёве - Создание служб WCF.pdf
		Microsoft ASP.NET MVC Framework с примерами на C# для профессионалов.pdf
		Джеффри Рихтер - Программирование на платформе Microsoft .NET Framework.pdf
		Andrew Troelsen - Язык программирования C# 5.0 и платформа .NET 4.5.pdf
		C# 4.0 in a Nutshell 4th.Edition.pdf

	Web, JavaScript

		Joe Kuan - Learning Highcharts 4.pdf
		Shelley Powers - Изучаем Node.js.pdf
		Виктор Петин -Сайт на AJAX под ключ. Готовое решение для интернет-магазина.pdf
		Ari Lerner - NG-Book.pdf
			Приложения
		Дэвид Сойер Макфарланд - Большая книга CSS3. (3-е издание).pdf
		Дэвид Флэнаган - JavaScript. Подробное руководство (6-е издание).pdf
		Крокфорд - JavaScript. Сильные стороны.pdf
		Стоян Стефанов - JavaScript шаблоны.pdf
		Кристофер Шмитт, Кайл Симпсон - HTML5. Рецепты программирования - 2012.pdf
		Адам Фримен - jQuery для профессионалов.pdf
		Николас Закас - JavaScript. Оптимизация производительности - 2012.pdf

	DI

		Внедрение зависимостей в .NET (2014).pdf

	Проектирование

		Эрик Эванс-Предметно-ориентированное проектирование (DDD).pdf
		Мартин Фаулер - Шаблоны корпоративных приложений.pdf

	Базы данных

		Бен Форта - SQL - 10 минут на урок.pdf
		Alan Beaulieu - Изучаем SQL.pdf
		Anthony Molinaro - SQL - сборник рецептов.pdf
		Репликация SQL Server 2005-2008. Сборник статей от сообщества SQL.RU.pdf
		Полубояров В.В. - Использование MS SQL Server 2008 Analysis Services для построения хранилищ данных (2010).pdf
		Сейед Тахагхогхи, Хью Е. Вильямс - Руководство по MySQL.pdf
		Шварц Б., Зайцев П., Ткаченко В. - MySQL. Оптимизация производительности (2-е издание).pdf
		Талманн Л., Киндал М., Белл Ч. - Обеспечение высокой доступности систем на MySQL.pdf
		MC Brown - Getting Started with CouchDB.pdf
		J. Chris Anderson - CouchDB - The Definitive Guide.pdf
		MC Brown - Getting Started with Couchbase Server.pdf
		David Ostrovsky, Yaniv Rodenski - Pro Couchbase Server.pdf
		Ken Henderson - Профессиональное руководство по Transact-SQL.pdf

	Google Android

		Разработка приложений для Android.pdf
		Android для программистов. Создаем приложения (2012) Дейтел П., Дейтел Х., Дейтел Э., Моргано М..pdf
		Голощапов А. Л. - Google Android программирование для мобильных устройств - 2011.pdf
			Голощапов А. Л. - Google Android программирование для мобильных устройств - 2011.rar

	Apple iOS, MacOS

		Программируем для iPhone и iPad.pdf
		Разработка приложений для iPhone, iPad и iPod touch с использованием iOS SDK.pdf
		Елисеев Д. В. - Разработка и продажа программ для iPhone и iPad (Профессиональное программирование) - 2011.pdf
		Аарон Хиллегасс - Objective-C Программирование для iOS и MacOS.pdf

	Программирование, методики

		Мартин Р. - Чистый код. Создание, анализ и рефакторинг (Библиотека программиста) - 2010.pdf
		Д. Босуэлл, Т. Фаучер. Читаемый код.pdf
		Steven C. McConnell - Совершенный код.pdf
		Кристофидес Н. - Теория графов. Алгоритмический подход.pdf
		97 вещей, которые должен знать каждый программист.pdf
		D - Паттерны проектирования с примерами на языке C#.pdf
		Донис Маршалл, Джон Бруно - Надежный код (Практические рекомендации) - 2010.pdf
			Донис Маршалл, Джон Бруно - Надежный код (Практические рекомендации) - 2010.rar

	Операционные системы

		Microsoft Windows Server 2008 R2. Полное руководство.pdf
		Робин Никсон - Ubuntu для всех - 2011 .pdf
		Дэвид А. Карт - Хитрости Windows 7 для проффесионалов (2011).pdf

	Прочее

		J. Leskovec, A. Rajaraman, J.D. Ullman - Mining of Massive Datasets.pdf
		PlantUML Language Reference Guide.pdf
		Новиков Ф.А. - дискретная математика для программистов.pdf
		Пол Альбитц, Крикет Ли - DNS и BIND (4th Edition, 2002).pdf
		Tom White - Hadoop. The Definitive Guide, 2nd Edition.pdf

	Нейронные сети

		Stuart J. Russel, P. Norvig - Искусственный интеллект. Современный подход (2-е издание).pdf
		S. Osowski - Нейронные сети для обработки информации.pdf
		S. Khaykin - Нейронные сети. Полный курс (2-е издание).pdf
		J. Heaton - Programming Neural Networks with Encog3 in CSharp.pdf
		F. Wosserman - Нейрокомпьютерная техника - Теория и практика.pdf
		
			]
			
			//c#
			//compile
			https://msdn.microsoft.com/en-us/library/bb384838.aspx
			//observable 
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern
			//rx
			https://docs.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern
			
			//async
			//async paterns
			https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/
			https://stackify.com/csharp-async-await-task-performance/
			https://docs.microsoft.com/en-us/dotnet/csharp/async
			https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap
			https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/
			https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/control-flow-in-async-programs
			
			//Oberver
			Observer : Iobservable<T> t-> data send  from provider to observers
			provider,subject,observable -> 
				List with references to observer implements subscribed
				
			observer
			.OnNext
			.OnError
			.OnComplete

			//freelance
			https://www.upwork.com/
			//puzzles 
			https://www.octothorpean.org/
			
		}
		
	}

	actual_Financial[
	
	
		UStradewarOnChina[

		30.06.2018 wait for next week Trump decision tariff growth
		Summer end CHN MXC new tariffs on US goods

			2016 Iowa export CHN $ 2 bln 4% state economy. Second soybean prod after Illinois. 
			CHN 1 US soybean buyer 2017 $ 4 bln 62% US soybean export 
			US Trade partners tariffs on goods case futures drop?
			
			USA[
				PRO:
					can afford trading war
					very strong macro
					president approval, looks tougher
				CON:
					republicans -> agrcltr export
					North Dakota soy bean growers very sad
					GM cut jobs
			]

			CHN[
				PRO:
					strong juan control
					yuan drop down faster then extm 2015
			]
			
			GM General Motors
			SIE Siemens AG [50 000 US workers; $ 23 bln rev; ]
			DAI Diamler AG
			7203 Toyota JPN [10 plants in US; 136 000 empl; ]
			
			apr 2018 CHN tariffs on 50$ US goods 
			[US soybean ftr CFD Grows]
			may 2018 MXC tariffs on US goods:[apl,burbon,pork - agricultural states voted fo Trump]
			cause:[US soybean ftr CFD drop]
			jun 2018 EUN tariffs on US goods:[rice,maize corn,orange guice]
			cause:[US soybean ftr CFD drop,maize drop]
			
		]
		
		USvsRusSanctions[
		
			april 2018 sancions agains keypeople => RUB/USD rise 57 to 63
			
			august 08 2018 overall sanction programm leak => RUB/USD rise from 63 to 66
			september 2018 sanctions implementation when senate off weekends
			
				<- Helsinki summit week Trump agains Putin, need internal solid neasures
				<- Novichock issues used as jurification (wooman death in 30 km from Scripal house)
			
		]
		
		statistics[
			US[
				//Labour
				https://www.bls.gov/home.htm
			]
		]
		
		RUS[
			Banks[
				MKB,CBOM
			]
		]				
		
	]
	
	presents[
		//presents
		https://www.pichshop.ru/product/21822/podstavka_dlya_melochey_s_melovoy_tablichkoy_blackwhite/
		http://sweetstore.ru/shokolad
		https://rus-buket.ru/buket/1231/vals-tsvetov
		https://www.smilegifts.ru/nabor-myla-ruchnoj-raboty-macarons
	]
	
	,sambo[
		https://findsport.ru/section/sambo/sambo_i_dzyudo_dlya_vzroslyh_v_klube_edinoborstv_i_525
		http://hookschool.ru/catalog/boevoe-sambo/
		http://www.sportclub-boec.ru/sambo/
		http://bsambist.ru/nash-klub/video/
		http://www.bsambo.ru/articles/article4234.shtml
		https://profi.ru/profile/SizenenkoNN/#reviews-tab
	]
	
	,[

я ни у кого не спрашивал
, мне тогда чашечку кофе
, и стало четверг
, вы первый начали
, с таким настроением слона не продашь
, не на те места ты колокольчики повесил
, я на западе
, по эстонски надо говорить
, русский выучить успел а плавать нет
, ну шо помог ему его английский
, бесполезно с феноменальной памятью
, собака: я сама офигела
, действительно, а чего это я
, он думает, что говорит по английски
, орёл: сволочи, делают, что хотят

	]
	
]
